{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12","program":"/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"std\"","-C","metadata=43351614c0d6967d","-C","extra-filename=-43351614c0d6967d","--out-dir","/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","-L","dependency=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","--extern","futures_core=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libfutures_core-adb13fe34de1d44a.rmeta","--extern","futures_sink=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libfutures_sink-7b8fe56e0ac86fd0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libfutures_channel-43351614c0d6967d.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[16819680255472240626,10568740090595004034]},"crate_root":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src","external_crates":[{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[6355392958590333347,8658035993768974256]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/sink_impl.rs","num":16,"id":{"name":"futures_sink","disambiguator":[18011462823937725691,13280342952808247559]}}],"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":288}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"! Asynchronous channels.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! other. This module contains two basic abstractions for doing so:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"!   library.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":84},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":122},{"krate":0,"index":411},{"krate":0,"index":422},{"krate":0,"index":420},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":424},{"krate":0,"index":439},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":442},{"krate":0,"index":455},{"krate":0,"index":453},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":457},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":483},{"krate":0,"index":481},{"krate":0,"index":480},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":187},{"krate":0,"index":202},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838704,"byte_end":6838773,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838774,"byte_end":6838797,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838798,"byte_end":6838801,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838802,"byte_end":6838872,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838873,"byte_end":6838952,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6838953,"byte_end":6839028,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839029,"byte_end":6839101,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839102,"byte_end":6839184,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"! the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839185,"byte_end":6839262,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"! the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839263,"byte_end":6839340,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! words, the channel provides backpressure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839341,"byte_end":6839386,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839387,"byte_end":6839390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839391,"byte_end":6839467,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839468,"byte_end":6839471,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839472,"byte_end":6839491,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839492,"byte_end":6839495,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839496,"byte_end":6839562,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839563,"byte_end":6839643,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839644,"byte_end":6839701,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"! will return `Ok(Ready(None))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839702,"byte_end":6839736,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839737,"byte_end":6839740,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839741,"byte_end":6839811,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839812,"byte_end":6839891,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839892,"byte_end":6839915,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839916,"byte_end":6839919,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839920,"byte_end":6839940,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839941,"byte_end":6839944,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6839945,"byte_end":6840011,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"! there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840012,"byte_end":6840088,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"! such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840089,"byte_end":6840169,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840170,"byte_end":6840250,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"! be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840251,"byte_end":6840323,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! completion, at which point the receiver can be dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840324,"byte_end":6840383,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840384,"byte_end":6840387,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: struct.Sender.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840388,"byte_end":6840422,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"! [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840423,"byte_end":6840461,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"! [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840462,"byte_end":6840521,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"! [`Receiver::poll_next`]:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840522,"byte_end":6840550,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"!     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6840551,"byte_end":6840621,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843995,"byte_end":6844001,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843847,"byte_end":6843898,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843899,"byte_end":6843902,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843903,"byte_end":6843966,"line_start":123,"line_end":123,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844193,"byte_end":6844208,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844038,"byte_end":6844092,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844093,"byte_end":6844096,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844097,"byte_end":6844164,"line_start":129,"line_end":129,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844480,"byte_end":6844488,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844335,"byte_end":6844383,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844384,"byte_end":6844387,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844388,"byte_end":6844451,"line_start":138,"line_end":138,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844690,"byte_end":6844707,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":407}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844538,"byte_end":6844589,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844590,"byte_end":6844593,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844594,"byte_end":6844661,"line_start":146,"line_end":146,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844984,"byte_end":6844993,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":412}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844874,"byte_end":6844933,"line_start":155,"line_end":155,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845132,"byte_end":6845144,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845024,"byte_end":6845088,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845354,"byte_end":6845366,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845276,"byte_end":6845342,"line_start":174,"line_end":174,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845816,"byte_end":6845823,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845733,"byte_end":6845804,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846040,"byte_end":6846055,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845953,"byte_end":6846028,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846880,"byte_end":6846887,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846797,"byte_end":6846868,"line_start":230,"line_end":230,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847030,"byte_end":6847045,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846943,"byte_end":6847018,"line_start":235,"line_end":235,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847186,"byte_end":6847196,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847109,"byte_end":6847174,"line_start":240,"line_end":240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847304,"byte_end":6847319,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"fn (self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847238,"byte_end":6847292,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850724,"byte_end":6850731,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850098,"byte_end":6850178,"line_start":352,"line_end":352,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850179,"byte_end":6850182,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850183,"byte_end":6850262,"line_start":354,"line_end":354,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850263,"byte_end":6850340,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850341,"byte_end":6850412,"line_start":356,"line_end":356,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850413,"byte_end":6850486,"line_start":357,"line_end":357,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850487,"byte_end":6850557,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850558,"byte_end":6850561,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850562,"byte_end":6850616,"line_start":360,"line_end":360,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850617,"byte_end":6850704,"line_start":361,"line_end":361,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6850705,"byte_end":6850716,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851995,"byte_end":6852004,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851483,"byte_end":6851559,"line_start":390,"line_end":390,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851560,"byte_end":6851570,"line_start":391,"line_end":391,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851571,"byte_end":6851574,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851575,"byte_end":6851655,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851656,"byte_end":6851735,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851736,"byte_end":6851749,"line_start":395,"line_end":395,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851750,"byte_end":6851753,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851754,"byte_end":6851833,"line_start":397,"line_end":397,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851834,"byte_end":6851910,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6851911,"byte_end":6851987,"line_start":399,"line_end":399,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6862774,"byte_end":6862782,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6862661,"byte_end":6862731,"line_start":720,"line_end":720,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6862736,"byte_end":6862762,"line_start":721,"line_end":721,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863343,"byte_end":6863353,"line_start":740,"line_end":740,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863127,"byte_end":6863161,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863166,"byte_end":6863169,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863174,"byte_end":6863219,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863224,"byte_end":6863295,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863300,"byte_end":6863331,"line_start":739,"line_end":739,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863981,"byte_end":6863991,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863470,"byte_end":6863544,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863549,"byte_end":6863587,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863592,"byte_end":6863595,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863600,"byte_end":6863618,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863623,"byte_end":6863626,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863631,"byte_end":6863655,"line_start":750,"line_end":750,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863660,"byte_end":6863663,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863668,"byte_end":6863727,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863732,"byte_end":6863781,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863786,"byte_end":6863862,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863867,"byte_end":6863895,"line_start":755,"line_end":755,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6863900,"byte_end":6863969,"line_start":756,"line_end":756,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864316,"byte_end":6864325,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864235,"byte_end":6864304,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864515,"byte_end":6864528,"line_start":773,"line_end":773,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864429,"byte_end":6864503,"line_start":772,"line_end":772,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864744,"byte_end":6864754,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864641,"byte_end":6864732,"line_start":779,"line_end":779,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864872,"byte_end":6864885,"line_start":785,"line_end":785,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6864802,"byte_end":6864860,"line_start":784,"line_end":784,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865133,"byte_end":6865148,"line_start":793,"line_end":793,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn (&self, receiver: &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865068,"byte_end":6865121,"line_start":792,"line_end":792,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865416,"byte_end":6865429,"line_start":801,"line_end":801,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865356,"byte_end":6865404,"line_start":800,"line_end":800,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865710,"byte_end":6865720,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"fn (&self, _: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865643,"byte_end":6865698,"line_start":810,"line_end":810,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866041,"byte_end":6866050,"line_start":822,"line_end":822,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865960,"byte_end":6866029,"line_start":821,"line_end":821,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866242,"byte_end":6866255,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866156,"byte_end":6866230,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866463,"byte_end":6866473,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866360,"byte_end":6866451,"line_start":833,"line_end":833,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867190,"byte_end":6867200,"line_start":859,"line_end":859,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6866995,"byte_end":6867029,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867034,"byte_end":6867037,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867042,"byte_end":6867115,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867120,"byte_end":6867178,"line_start":858,"line_end":858,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867565,"byte_end":6867579,"line_start":869,"line_end":869,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867319,"byte_end":6867358,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867363,"byte_end":6867366,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867371,"byte_end":6867446,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867451,"byte_end":6867527,"line_start":867,"line_end":867,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867532,"byte_end":6867553,"line_start":868,"line_end":868,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867738,"byte_end":6867751,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867668,"byte_end":6867726,"line_start":873,"line_end":873,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867999,"byte_end":6868014,"line_start":882,"line_end":882,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"fn (&self, receiver: &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6867934,"byte_end":6867987,"line_start":881,"line_end":881,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868291,"byte_end":6868304,"line_start":890,"line_end":890,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"fn <H> (&self, hasher: &mut H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868231,"byte_end":6868279,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871915,"byte_end":6871920,"line_start":1005,"line_end":1005,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871678,"byte_end":6871742,"line_start":1001,"line_end":1001,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871747,"byte_end":6871750,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871755,"byte_end":6871830,"line_start":1003,"line_end":1003,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871835,"byte_end":6871903,"line_start":1004,"line_end":1004,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872703,"byte_end":6872711,"line_start":1025,"line_end":1025,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872315,"byte_end":6872390,"line_start":1017,"line_end":1017,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872395,"byte_end":6872398,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872403,"byte_end":6872475,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872480,"byte_end":6872554,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872559,"byte_end":6872579,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872584,"byte_end":6872587,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872592,"byte_end":6872666,"line_start":1023,"line_end":1023,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6872671,"byte_end":6872691,"line_start":1024,"line_end":1024,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876744,"byte_end":6876749,"line_start":1141,"line_end":1141,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876507,"byte_end":6876571,"line_start":1137,"line_end":1137,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876576,"byte_end":6876579,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876584,"byte_end":6876659,"line_start":1139,"line_end":1139,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876664,"byte_end":6876732,"line_start":1140,"line_end":1140,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877251,"byte_end":6877259,"line_start":1155,"line_end":1155,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876863,"byte_end":6876938,"line_start":1147,"line_end":1147,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876943,"byte_end":6876946,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876951,"byte_end":6877023,"line_start":1149,"line_end":1149,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877028,"byte_end":6877102,"line_start":1150,"line_end":1150,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877107,"byte_end":6877127,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877132,"byte_end":6877135,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877140,"byte_end":6877214,"line_start":1153,"line_end":1153,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6877219,"byte_end":6877239,"line_start":1154,"line_end":1154,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":288},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":502},{"krate":0,"index":508},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":319},{"krate":0,"index":326},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":329},{"krate":0,"index":519},{"krate":0,"index":530},{"krate":0,"index":529},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":521},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":347}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891220,"byte_end":6891290,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891291,"byte_end":6891294,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This is a single-producer, single-consumer channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891295,"byte_end":6891350,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891844,"byte_end":6891852,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":492}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891609,"byte_end":6891685,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891686,"byte_end":6891689,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891690,"byte_end":6891747,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891748,"byte_end":6891815,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6892037,"byte_end":6892043,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":498}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891887,"byte_end":6891946,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891947,"byte_end":6891950,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6891951,"byte_end":6892008,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895147,"byte_end":6895154,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6893948,"byte_end":6894036,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894037,"byte_end":6894040,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894041,"byte_end":6894116,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894117,"byte_end":6894120,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894121,"byte_end":6894201,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894202,"byte_end":6894280,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894281,"byte_end":6894358,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894359,"byte_end":6894437,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894438,"byte_end":6894486,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894487,"byte_end":6894490,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894491,"byte_end":6894551,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894552,"byte_end":6894555,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894556,"byte_end":6894570,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894571,"byte_end":6894574,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894575,"byte_end":6894582,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894583,"byte_end":6894617,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894618,"byte_end":6894656,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894657,"byte_end":6894660,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894661,"byte_end":6894716,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894717,"byte_end":6894720,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894721,"byte_end":6894743,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894744,"byte_end":6894788,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894789,"byte_end":6894840,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894841,"byte_end":6894889,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894890,"byte_end":6894922,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894923,"byte_end":6894930,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894931,"byte_end":6894934,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894935,"byte_end":6894981,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894982,"byte_end":6894985,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6894986,"byte_end":6895025,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895026,"byte_end":6895071,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895072,"byte_end":6895123,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895124,"byte_end":6895131,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895132,"byte_end":6895139,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904417,"byte_end":6904421,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6903924,"byte_end":6903976,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6903981,"byte_end":6903984,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6903989,"byte_end":6904061,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904066,"byte_end":6904138,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904143,"byte_end":6904175,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904180,"byte_end":6904183,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904188,"byte_end":6904260,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904265,"byte_end":6904335,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904340,"byte_end":6904405,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905073,"byte_end":6905086,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904491,"byte_end":6904552,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904557,"byte_end":6904601,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904606,"byte_end":6904609,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904614,"byte_end":6904633,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904638,"byte_end":6904641,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904646,"byte_end":6904716,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904721,"byte_end":6904795,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904800,"byte_end":6904803,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904808,"byte_end":6904876,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904881,"byte_end":6904954,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6904959,"byte_end":6905031,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905036,"byte_end":6905061,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905450,"byte_end":6905462,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"fn (&mut self) -> Cancellation<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905182,"byte_end":6905251,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905256,"byte_end":6905300,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905305,"byte_end":6905308,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905313,"byte_end":6905384,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905389,"byte_end":6905438,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905886,"byte_end":6905897,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905547,"byte_end":6905612,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905617,"byte_end":6905638,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905643,"byte_end":6905646,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905651,"byte_end":6905726,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905731,"byte_end":6905802,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905807,"byte_end":6905874,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906121,"byte_end":6906136,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"fn (&self, receiver: &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6905959,"byte_end":6906052,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906057,"byte_end":6906109,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906597,"byte_end":6906609,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":514}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906329,"byte_end":6906404,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906405,"byte_end":6906408,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906409,"byte_end":6906500,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906501,"byte_end":6906568,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906999,"byte_end":6907007,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906836,"byte_end":6906907,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906908,"byte_end":6906942,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907615,"byte_end":6907620,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907243,"byte_end":6907316,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907321,"byte_end":6907336,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907341,"byte_end":6907344,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907349,"byte_end":6907416,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907421,"byte_end":6907483,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907488,"byte_end":6907561,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907566,"byte_end":6907603,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908051,"byte_end":6908059,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907675,"byte_end":6907742,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907747,"byte_end":6907750,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907755,"byte_end":6907822,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907827,"byte_end":6907830,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907835,"byte_end":6907908,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907913,"byte_end":6907979,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907984,"byte_end":6907987,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907992,"byte_end":6908039,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836715,"byte_end":6836719,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836756,"byte_end":6836760,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836776,"byte_end":6836780,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6837618,"byte_end":6837625,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6837878,"byte_end":6837885,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6838248,"byte_end":6838255,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885175,"byte_end":6885180,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885218,"byte_end":6885223,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885240,"byte_end":6885244,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885437,"byte_end":6885442,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6888339,"byte_end":6888344,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/sink_impl.rs","byte_start":6888806,"byte_end":6888812,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/sink_impl.rs","byte_start":6889758,"byte_end":6889773,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843776,"byte_end":6843796,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843821,"byte_end":6843839,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844310,"byte_end":6844325,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844849,"byte_end":6844866,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845409,"byte_end":6845418,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845698,"byte_end":6845707,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845717,"byte_end":6845726,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846214,"byte_end":6846226,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846433,"byte_end":6846445,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846747,"byte_end":6846759,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846775,"byte_end":6846787,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847387,"byte_end":6847399,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847556,"byte_end":6847568,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847717,"byte_end":6847729,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6849825,"byte_end":6849835,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6852504,"byte_end":6852524,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6855382,"byte_end":6855400,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6862645,"byte_end":6862651,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865618,"byte_end":6865633,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868503,"byte_end":6868509,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868601,"byte_end":6868616,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868708,"byte_end":6868728,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6869829,"byte_end":6869847,"line_start":940,"line_end":940,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871098,"byte_end":6871118,"line_start":972,"line_end":972,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871363,"byte_end":6871381,"line_start":983,"line_end":983,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871660,"byte_end":6871668,"line_start":1000,"line_end":1000,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875163,"byte_end":6875171,"line_start":1089,"line_end":1089,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875203,"byte_end":6875211,"line_start":1091,"line_end":1091,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875312,"byte_end":6875320,"line_start":1097,"line_end":1097,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876200,"byte_end":6876208,"line_start":1124,"line_end":1124,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876480,"byte_end":6876497,"line_start":1136,"line_end":1136,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6879196,"byte_end":6879213,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6879314,"byte_end":6879331,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880207,"byte_end":6880224,"line_start":1238,"line_end":1238,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880536,"byte_end":6880550,"line_start":1256,"line_end":1256,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880833,"byte_end":6880845,"line_start":1268,"line_end":1268,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881371,"byte_end":6881385,"line_start":1286,"line_end":1286,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881422,"byte_end":6881436,"line_start":1287,"line_end":1287,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881474,"byte_end":6881486,"line_start":1289,"line_end":1289,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881523,"byte_end":6881535,"line_start":1290,"line_end":1290,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6892151,"byte_end":6892159,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6892184,"byte_end":6892190,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895379,"byte_end":6895384,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6903908,"byte_end":6903914,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906254,"byte_end":6906260,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906671,"byte_end":6906683,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907032,"byte_end":6907040,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907204,"byte_end":6907212,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907225,"byte_end":6907233,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908162,"byte_end":6908170,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908387,"byte_end":6908395,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908736,"byte_end":6908744,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":288}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836715,"byte_end":6836719,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836756,"byte_end":6836760,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6836776,"byte_end":6836780,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6837618,"byte_end":6837625,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6837878,"byte_end":6837885,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/lock.rs","byte_start":6838248,"byte_end":6838255,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885175,"byte_end":6885180,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885218,"byte_end":6885223,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885240,"byte_end":6885244,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6885437,"byte_end":6885442,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/queue.rs","byte_start":6888339,"byte_end":6888344,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/sink_impl.rs","byte_start":6888806,"byte_end":6888812,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":385},"to":{"krate":16,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/sink_impl.rs","byte_start":6889758,"byte_end":6889773,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":392},"to":{"krate":16,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843776,"byte_end":6843796,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6843821,"byte_end":6843839,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844266,"byte_end":6844270,"line_start":133,"line_end":133,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844273,"byte_end":6844277,"line_start":133,"line_end":133,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844280,"byte_end":6844285,"line_start":133,"line_end":133,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844310,"byte_end":6844325,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6844849,"byte_end":6844866,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845409,"byte_end":6845418,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845698,"byte_end":6845707,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":411},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6845717,"byte_end":6845726,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846214,"byte_end":6846226,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846433,"byte_end":6846445,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846747,"byte_end":6846759,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":424},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6846775,"byte_end":6846787,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847387,"byte_end":6847399,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847556,"byte_end":6847568,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6847717,"byte_end":6847729,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":124},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6849825,"byte_end":6849835,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6852504,"byte_end":6852524,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6855382,"byte_end":6855400,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6862645,"byte_end":6862651,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6865618,"byte_end":6865633,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868503,"byte_end":6868509,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868601,"byte_end":6868616,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6868708,"byte_end":6868728,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6869829,"byte_end":6869847,"line_start":940,"line_end":940,"column_start":19,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871098,"byte_end":6871118,"line_start":972,"line_end":972,"column_start":18,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871363,"byte_end":6871381,"line_start":983,"line_end":983,"column_start":18,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6871660,"byte_end":6871668,"line_start":1000,"line_end":1000,"column_start":9,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875163,"byte_end":6875171,"line_start":1089,"line_end":1089,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875203,"byte_end":6875211,"line_start":1091,"line_end":1091,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":399},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6875312,"byte_end":6875320,"line_start":1097,"line_end":1097,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":399},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876200,"byte_end":6876208,"line_start":1124,"line_end":1124,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6876480,"byte_end":6876497,"line_start":1136,"line_end":1136,"column_start":9,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6879196,"byte_end":6879213,"line_start":1205,"line_end":1205,"column_start":25,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":405},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6879314,"byte_end":6879331,"line_start":1211,"line_end":1211,"column_start":20,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":405},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880207,"byte_end":6880224,"line_start":1238,"line_end":1238,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880536,"byte_end":6880550,"line_start":1256,"line_end":1256,"column_start":9,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6880833,"byte_end":6880845,"line_start":1268,"line_end":1268,"column_start":9,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881371,"byte_end":6881385,"line_start":1286,"line_end":1286,"column_start":31,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881422,"byte_end":6881436,"line_start":1287,"line_end":1287,"column_start":31,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881474,"byte_end":6881486,"line_start":1289,"line_end":1289,"column_start":31,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/mpsc/mod.rs","byte_start":6881523,"byte_end":6881535,"line_start":1290,"line_end":1290,"column_start":31,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6892151,"byte_end":6892159,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6892184,"byte_end":6892190,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6895379,"byte_end":6895384,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6903908,"byte_end":6903914,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906254,"byte_end":6906260,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6906671,"byte_end":6906683,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907032,"byte_end":6907040,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907204,"byte_end":6907212,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":519},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6907225,"byte_end":6907233,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908162,"byte_end":6908170,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908387,"byte_end":6908395,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":490},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.12/src/oneshot.rs","byte_start":6908736,"byte_end":6908744,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2097}}]}