{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1","program":"/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"memchr\"","--cfg","feature=\"sync\"","-C","metadata=0a5c7735a9fec495","-C","extra-filename=-0a5c7735a9fec495","--out-dir","/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","-L","dependency=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","--extern","bytes=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libbytes-e504daa11419f9b9.rmeta","--extern","memchr=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libmemchr-3d0f3f9cbbaa5efb.rmeta","--extern","pin_project_lite=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libpin_project_lite-edd840e14ddf2b1f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libtokio-0a5c7735a9fec495.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[9446137399931027498,15956076130649653772]},"crate_root":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src","external_crates":[{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/seek.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[15649699270831883493,4107600799607912892]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","num":16,"id":{"name":"bytes","disambiguator":[10469414217249695206,12744635208089738798]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_until.rs","num":17,"id":{"name":"memchr","disambiguator":[17588520053350620333,14094386727991713583]}}],"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8192},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/support.rs","byte_start":29558,"byte_end":29564,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":2,"index":29654},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/support.rs","byte_start":29584,"byte_end":29587,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":2,"index":32057},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/support.rs","byte_start":29608,"byte_end":29612,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38467,"byte_end":38479,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38524,"byte_end":38533,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38578,"byte_end":38587,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38634,"byte_end":38644,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38685,"byte_end":38692,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":1,"index":2505},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38862,"byte_end":38867,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":1,"index":6538},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38869,"byte_end":38878,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":1,"index":2503},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38880,"byte_end":38886,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":1,"index":6615},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38888,"byte_end":38896,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39599,"byte_end":39604,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":801},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39606,"byte_end":39614,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":804},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39616,"byte_end":39625,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1713},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39707,"byte_end":39711,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39713,"byte_end":39721,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39723,"byte_end":39729,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1739},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39731,"byte_end":39736,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1904},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39738,"byte_end":39744,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1911},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39746,"byte_end":39750,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39752,"byte_end":39767,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1597},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39769,"byte_end":39781,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39783,"byte_end":39795,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1651},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39797,"byte_end":39810,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":6216},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39820,"byte_end":39829,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":6185},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39831,"byte_end":39840,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":6139},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39842,"byte_end":39851,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39853,"byte_end":39865,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1737},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39867,"byte_end":39872,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":5998},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39874,"byte_end":39879,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1905},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39881,"byte_end":39887,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39889,"byte_end":39893,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":4635},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39895,"byte_end":39900,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":4595},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":39902,"byte_end":39906,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77731,"byte_end":77744,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":254}},{"kind":"Use","ref_id":{"krate":0,"index":3311},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099197,"byte_end":8099204,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3323},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099206,"byte_end":8099223,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142897,"byte_end":8142904,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2387},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142906,"byte_end":8142912,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2391},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142914,"byte_end":8142922,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2384},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142924,"byte_end":8142930,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2649},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8143008,"byte_end":8143025,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2643},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8143027,"byte_end":8143044,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8143046,"byte_end":8143061,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":2297}},{"kind":"Use","ref_id":{"krate":0,"index":2709},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099305,"byte_end":8099310,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":2713},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099312,"byte_end":8099322,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3388},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099324,"byte_end":8099336,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":2717},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099338,"byte_end":8099353,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3393},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099404,"byte_end":8099410,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3486},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099501,"byte_end":8099513,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3476},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099515,"byte_end":8099530,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3491},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099577,"byte_end":8099586,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3495},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099588,"byte_end":8099603,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3502},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099605,"byte_end":8099625,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3507},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099666,"byte_end":8099672,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3115},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099674,"byte_end":8099689,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2120}},{"kind":"Use","ref_id":{"krate":0,"index":3142},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099691,"byte_end":8099707,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2120}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":52},{"krate":0,"index":77},{"krate":0,"index":254},{"krate":0,"index":321},{"krate":0,"index":476},{"krate":0,"index":567},{"krate":0,"index":2120},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":643}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"! A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! is enabled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"! tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"! [sleep]: crate::time::sleep()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"! an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"! and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"! provide the functionality you need.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"! enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"! scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"! [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"! [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"! spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"! block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"! amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"! Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"! can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"! threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"! [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"! use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"!     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12152,"byte_end":12236,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"! - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12237,"byte_end":12310,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"!         and non-scheduler utilities.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12311,"byte_end":12351,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"! - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12352,"byte_end":12438,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12439,"byte_end":12490,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12491,"byte_end":12551,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12552,"byte_end":12642,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"!          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12643,"byte_end":12699,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12700,"byte_end":12777,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"!           the built in timer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12778,"byte_end":12811,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12812,"byte_end":12860,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12861,"byte_end":12930,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12931,"byte_end":12977,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":12978,"byte_end":13028,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13029,"byte_end":13067,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13068,"byte_end":13146,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13147,"byte_end":13150,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13151,"byte_end":13233,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13234,"byte_end":13256,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13257,"byte_end":13260,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13261,"byte_end":13286,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13287,"byte_end":13290,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13291,"byte_end":13359,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13360,"byte_end":13423,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"! dependencies.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13424,"byte_end":13441,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13442,"byte_end":13445,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13446,"byte_end":13525,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13526,"byte_end":13603,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13604,"byte_end":13637,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13638,"byte_end":13641,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"! ### Unstable features","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13642,"byte_end":13667,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13668,"byte_end":13671,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13672,"byte_end":13757,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"! releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13758,"byte_end":13842,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"! `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13843,"byte_end":13927,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"! `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13928,"byte_end":13967,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13968,"byte_end":13971,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"! - `tracing`: Enables tracing events.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":13972,"byte_end":14012,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14013,"byte_end":14016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14017,"byte_end":14114,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14303,"byte_end":14315,"line_start":349,"line_end":349,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/mod.rs","byte_start":17608,"byte_end":17628,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900768,"byte_end":7900773,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900539,"byte_end":7900580,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900581,"byte_end":7900584,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900585,"byte_end":7900662,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900731,"byte_end":7900756,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":694},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":779},{"krate":0,"index":780}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":30919,"byte_end":30996,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":30997,"byte_end":31000,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31001,"byte_end":31072,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31073,"byte_end":31153,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31154,"byte_end":31228,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31229,"byte_end":31232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31233,"byte_end":31263,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31264,"byte_end":31267,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31268,"byte_end":31348,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31349,"byte_end":31426,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31427,"byte_end":31504,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31505,"byte_end":31585,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31586,"byte_end":31664,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31665,"byte_end":31730,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31731,"byte_end":31734,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31735,"byte_end":31807,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31808,"byte_end":31875,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31876,"byte_end":31955,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":31956,"byte_end":32030,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32031,"byte_end":32105,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32106,"byte_end":32123,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32124,"byte_end":32127,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32128,"byte_end":32192,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32193,"byte_end":32268,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32269,"byte_end":32344,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32345,"byte_end":32422,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32423,"byte_end":32426,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32427,"byte_end":32503,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32504,"byte_end":32579,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32580,"byte_end":32660,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32661,"byte_end":32732,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32733,"byte_end":32802,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32803,"byte_end":32806,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32807,"byte_end":32879,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32880,"byte_end":32960,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":32961,"byte_end":33014,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33015,"byte_end":33018,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33019,"byte_end":33032,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33033,"byte_end":33073,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33074,"byte_end":33098,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33099,"byte_end":33102,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33103,"byte_end":33121,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33122,"byte_end":33161,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33162,"byte_end":33211,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33212,"byte_end":33245,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33246,"byte_end":33249,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33250,"byte_end":33280,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33281,"byte_end":33324,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33325,"byte_end":33328,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33329,"byte_end":33379,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33380,"byte_end":33394,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33395,"byte_end":33400,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33401,"byte_end":33408,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33409,"byte_end":33412,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33413,"byte_end":33442,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33443,"byte_end":33483,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33484,"byte_end":33520,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33521,"byte_end":33562,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33563,"byte_end":33566,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33567,"byte_end":33602,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33603,"byte_end":33606,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33607,"byte_end":33688,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33689,"byte_end":33763,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33764,"byte_end":33842,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33843,"byte_end":33887,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33888,"byte_end":33891,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33892,"byte_end":33962,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":33963,"byte_end":34041,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34042,"byte_end":34120,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34121,"byte_end":34198,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34199,"byte_end":34202,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34203,"byte_end":34278,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34279,"byte_end":34317,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34318,"byte_end":34321,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34322,"byte_end":34335,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34336,"byte_end":34390,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34391,"byte_end":34415,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34416,"byte_end":34419,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34420,"byte_end":34438,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34439,"byte_end":34478,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34479,"byte_end":34524,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34525,"byte_end":34568,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34569,"byte_end":34608,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34609,"byte_end":34612,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34613,"byte_end":34647,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34648,"byte_end":34693,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34694,"byte_end":34697,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34698,"byte_end":34729,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34730,"byte_end":34744,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34745,"byte_end":34750,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34751,"byte_end":34758,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34759,"byte_end":34762,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34763,"byte_end":34844,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34845,"byte_end":34923,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34924,"byte_end":34986,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34987,"byte_end":34990,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":34991,"byte_end":35004,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35005,"byte_end":35057,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35058,"byte_end":35082,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35083,"byte_end":35086,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35087,"byte_end":35105,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35106,"byte_end":35145,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35146,"byte_end":35193,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35194,"byte_end":35203,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35204,"byte_end":35251,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35252,"byte_end":35255,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35256,"byte_end":35298,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35299,"byte_end":35340,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35341,"byte_end":35344,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35345,"byte_end":35405,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35406,"byte_end":35440,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35441,"byte_end":35444,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35445,"byte_end":35535,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35536,"byte_end":35539,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35540,"byte_end":35554,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35555,"byte_end":35560,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35561,"byte_end":35568,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35569,"byte_end":35572,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35573,"byte_end":35618,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35619,"byte_end":35661,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35662,"byte_end":35707,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35708,"byte_end":35747,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35748,"byte_end":35787,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35788,"byte_end":35791,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35792,"byte_end":35836,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35837,"byte_end":35840,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35841,"byte_end":35923,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":35924,"byte_end":36003,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36004,"byte_end":36078,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36079,"byte_end":36152,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36153,"byte_end":36213,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36214,"byte_end":36217,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36218,"byte_end":36259,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36260,"byte_end":36263,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36264,"byte_end":36332,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36333,"byte_end":36402,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36403,"byte_end":36469,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36470,"byte_end":36533,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36534,"byte_end":36601,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36602,"byte_end":36671,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36672,"byte_end":36742,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36743,"byte_end":36821,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36822,"byte_end":36847,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36848,"byte_end":36851,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36852,"byte_end":36928,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36929,"byte_end":36932,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36933,"byte_end":36964,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36965,"byte_end":36968,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":36969,"byte_end":37049,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37050,"byte_end":37126,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37127,"byte_end":37174,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37175,"byte_end":37178,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37179,"byte_end":37252,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37253,"byte_end":37329,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37330,"byte_end":37406,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37407,"byte_end":37410,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37411,"byte_end":37432,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37433,"byte_end":37456,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37457,"byte_end":37479,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37480,"byte_end":37483,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37484,"byte_end":37506,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37507,"byte_end":37510,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37511,"byte_end":37587,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"! re-exported from `std::io` for ease of use.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37588,"byte_end":37635,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37636,"byte_end":37639,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37640,"byte_end":37674,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37675,"byte_end":37711,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37712,"byte_end":37752,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37753,"byte_end":37795,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37796,"byte_end":37869,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37870,"byte_end":37953,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":37954,"byte_end":38037,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38038,"byte_end":38065,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38066,"byte_end":38099,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38100,"byte_end":38127,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38128,"byte_end":38155,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38156,"byte_end":38187,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38188,"byte_end":38258,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38259,"byte_end":38335,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/mod.rs","byte_start":38336,"byte_end":38365,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":86},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41043,"byte_end":41055,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40366,"byte_end":40397,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40398,"byte_end":40401,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40402,"byte_end":40474,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40475,"byte_end":40553,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40554,"byte_end":40640,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40641,"byte_end":40718,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40719,"byte_end":40730,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40731,"byte_end":40734,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40735,"byte_end":40803,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40804,"byte_end":40828,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40829,"byte_end":40832,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40833,"byte_end":40875,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40876,"byte_end":40926,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40927,"byte_end":40980,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":40981,"byte_end":41032,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42153,"byte_end":42166,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41073,"byte_end":41158,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41163,"byte_end":41204,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41209,"byte_end":41212,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41217,"byte_end":41264,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41269,"byte_end":41272,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41277,"byte_end":41336,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41341,"byte_end":41399,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41404,"byte_end":41485,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41490,"byte_end":41516,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41521,"byte_end":41524,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41529,"byte_end":41600,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41605,"byte_end":41667,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41672,"byte_end":41743,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41748,"byte_end":41829,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41834,"byte_end":41910,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41915,"byte_end":41966,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41971,"byte_end":41974,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41979,"byte_end":42050,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42055,"byte_end":42058,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42063,"byte_end":42102,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42107,"byte_end":42145,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43069,"byte_end":43076,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42244,"byte_end":42318,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42323,"byte_end":42390,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42395,"byte_end":42398,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42403,"byte_end":42474,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42479,"byte_end":42548,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42553,"byte_end":42627,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42632,"byte_end":42709,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42714,"byte_end":42784,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42789,"byte_end":42842,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42847,"byte_end":42850,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42855,"byte_end":42927,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42932,"byte_end":42954,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42959,"byte_end":42962,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":42967,"byte_end":43006,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43011,"byte_end":43061,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46390,"byte_end":46399,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44703,"byte_end":44733,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44734,"byte_end":44737,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44738,"byte_end":44817,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44818,"byte_end":44892,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44893,"byte_end":44972,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":44973,"byte_end":45050,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45051,"byte_end":45062,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45063,"byte_end":45066,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45067,"byte_end":45144,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45145,"byte_end":45163,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45164,"byte_end":45167,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45168,"byte_end":45248,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45249,"byte_end":45322,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45323,"byte_end":45402,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45403,"byte_end":45447,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45448,"byte_end":45451,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45452,"byte_end":45517,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45518,"byte_end":45598,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45599,"byte_end":45678,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45679,"byte_end":45752,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45753,"byte_end":45826,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45827,"byte_end":45848,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45849,"byte_end":45852,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45853,"byte_end":45937,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45938,"byte_end":45962,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45963,"byte_end":45966,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":45967,"byte_end":46040,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46041,"byte_end":46120,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46121,"byte_end":46124,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46125,"byte_end":46190,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46191,"byte_end":46212,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46213,"byte_end":46216,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46217,"byte_end":46256,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46257,"byte_end":46293,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46294,"byte_end":46333,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46334,"byte_end":46379,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46889,"byte_end":46898,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46406,"byte_end":46459,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46464,"byte_end":46467,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46472,"byte_end":46543,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46548,"byte_end":46621,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46626,"byte_end":46651,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46656,"byte_end":46659,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46664,"byte_end":46739,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46744,"byte_end":46813,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":46818,"byte_end":46881,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49494,"byte_end":49503,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49012,"byte_end":49042,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49043,"byte_end":49046,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49047,"byte_end":49121,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49122,"byte_end":49192,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49193,"byte_end":49262,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49263,"byte_end":49266,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49267,"byte_end":49332,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49333,"byte_end":49354,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49355,"byte_end":49358,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49359,"byte_end":49395,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49396,"byte_end":49437,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49438,"byte_end":49483,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50145,"byte_end":50155,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49510,"byte_end":49567,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49572,"byte_end":49575,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49580,"byte_end":49653,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49658,"byte_end":49684,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49689,"byte_end":49692,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49697,"byte_end":49772,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49777,"byte_end":49833,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49838,"byte_end":49841,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49846,"byte_end":49858,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49863,"byte_end":49866,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49871,"byte_end":49941,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":49946,"byte_end":50020,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50025,"byte_end":50099,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50104,"byte_end":50137,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50678,"byte_end":50691,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50222,"byte_end":50265,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50270,"byte_end":50273,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50278,"byte_end":50327,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50332,"byte_end":50402,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50407,"byte_end":50479,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50484,"byte_end":50555,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50560,"byte_end":50576,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50581,"byte_end":50584,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50589,"byte_end":50601,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50606,"byte_end":50609,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":50614,"byte_end":50670,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53982,"byte_end":53992,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":172}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52119,"byte_end":52151,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52152,"byte_end":52155,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52156,"byte_end":52238,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52239,"byte_end":52314,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52315,"byte_end":52382,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52383,"byte_end":52386,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52387,"byte_end":52467,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52468,"byte_end":52486,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52487,"byte_end":52490,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52491,"byte_end":52562,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52563,"byte_end":52577,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52578,"byte_end":52581,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52582,"byte_end":52650,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52651,"byte_end":52731,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52732,"byte_end":52811,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52812,"byte_end":52885,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52886,"byte_end":52959,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52960,"byte_end":52981,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52982,"byte_end":52985,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":52986,"byte_end":53070,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53071,"byte_end":53095,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53096,"byte_end":53099,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53100,"byte_end":53182,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53183,"byte_end":53266,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53267,"byte_end":53270,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53271,"byte_end":53355,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53356,"byte_end":53440,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53441,"byte_end":53519,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53520,"byte_end":53599,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53600,"byte_end":53661,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53662,"byte_end":53665,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53666,"byte_end":53732,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53733,"byte_end":53755,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53756,"byte_end":53759,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53760,"byte_end":53798,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53799,"byte_end":53843,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53844,"byte_end":53883,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53884,"byte_end":53923,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53924,"byte_end":53971,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54376,"byte_end":54386,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":53999,"byte_end":54053,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54058,"byte_end":54061,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54066,"byte_end":54127,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54132,"byte_end":54135,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54140,"byte_end":54202,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54207,"byte_end":54265,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54270,"byte_end":54337,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54342,"byte_end":54368,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54927,"byte_end":54937,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54514,"byte_end":54585,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54590,"byte_end":54612,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54617,"byte_end":54620,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54625,"byte_end":54671,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54676,"byte_end":54679,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54684,"byte_end":54748,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54753,"byte_end":54811,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54816,"byte_end":54884,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":54889,"byte_end":54919,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58223,"byte_end":58236,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55019,"byte_end":55093,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55098,"byte_end":55146,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55151,"byte_end":55154,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55159,"byte_end":55230,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55235,"byte_end":55311,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55316,"byte_end":55392,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55397,"byte_end":55472,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55477,"byte_end":55548,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55553,"byte_end":55629,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55634,"byte_end":55662,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55667,"byte_end":55670,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55675,"byte_end":55736,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55741,"byte_end":55812,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55817,"byte_end":55889,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55894,"byte_end":55969,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":55974,"byte_end":56047,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56052,"byte_end":56127,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56132,"byte_end":56204,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56209,"byte_end":56220,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56225,"byte_end":56228,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56233,"byte_end":56307,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56312,"byte_end":56384,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56389,"byte_end":56458,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56463,"byte_end":56531,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56536,"byte_end":56597,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56602,"byte_end":56605,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56610,"byte_end":56628,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56633,"byte_end":56636,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56641,"byte_end":56711,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56716,"byte_end":56719,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56724,"byte_end":56787,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56792,"byte_end":56861,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56866,"byte_end":56941,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":56946,"byte_end":57019,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57024,"byte_end":57075,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57080,"byte_end":57083,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57088,"byte_end":57158,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57163,"byte_end":57238,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57243,"byte_end":57315,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57320,"byte_end":57390,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57395,"byte_end":57470,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57475,"byte_end":57478,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57483,"byte_end":57564,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57569,"byte_end":57644,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57649,"byte_end":57716,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57721,"byte_end":57724,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57729,"byte_end":57741,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57746,"byte_end":57749,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57754,"byte_end":57825,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57830,"byte_end":57896,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57901,"byte_end":57975,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":57980,"byte_end":58044,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58049,"byte_end":58088,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58093,"byte_end":58096,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58101,"byte_end":58113,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58118,"byte_end":58121,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58126,"byte_end":58201,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58206,"byte_end":58215,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59349,"byte_end":59368,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, bufs: &[IoSlice<'_>]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58318,"byte_end":58389,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58394,"byte_end":58397,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58402,"byte_end":58469,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58474,"byte_end":58544,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58549,"byte_end":58619,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58624,"byte_end":58627,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58632,"byte_end":58714,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58719,"byte_end":58771,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58776,"byte_end":58779,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58784,"byte_end":58845,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58850,"byte_end":58853,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58858,"byte_end":58920,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58925,"byte_end":58983,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":58988,"byte_end":59055,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59060,"byte_end":59086,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59091,"byte_end":59094,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59099,"byte_end":59109,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59114,"byte_end":59117,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59122,"byte_end":59194,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59199,"byte_end":59269,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59274,"byte_end":59286,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59291,"byte_end":59294,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59299,"byte_end":59341,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":60136,"byte_end":60153,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"fn (&self) -> bool","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59666,"byte_end":59736,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59741,"byte_end":59760,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59765,"byte_end":59768,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59773,"byte_end":59842,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59847,"byte_end":59922,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":59927,"byte_end":59995,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":60000,"byte_end":60003,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":60008,"byte_end":60055,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":60060,"byte_end":60063,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":60068,"byte_end":60128,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":221},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67393,"byte_end":67400,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66445,"byte_end":66525,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66526,"byte_end":66529,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66530,"byte_end":66604,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66605,"byte_end":66680,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66681,"byte_end":66759,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66760,"byte_end":66836,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66837,"byte_end":66914,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66915,"byte_end":66918,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66919,"byte_end":66983,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66984,"byte_end":66987,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":66988,"byte_end":67003,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67004,"byte_end":67045,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67046,"byte_end":67087,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67088,"byte_end":67129,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67130,"byte_end":67137,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67138,"byte_end":67141,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67142,"byte_end":67220,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67221,"byte_end":67299,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67300,"byte_end":67381,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67602,"byte_end":67605,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"fn (buf: &'a mut [u8]) -> ReadBuf<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67516,"byte_end":67576,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67581,"byte_end":67590,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68051,"byte_end":68057,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"fn (buf: &'a mut [MaybeUninit<u8>]) -> ReadBuf<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67870,"byte_end":67932,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67937,"byte_end":67940,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67945,"byte_end":68025,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68030,"byte_end":68039,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68285,"byte_end":68293,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68214,"byte_end":68259,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68264,"byte_end":68273,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68439,"byte_end":68445,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68346,"byte_end":68413,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68418,"byte_end":68427,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68899,"byte_end":68909,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68805,"byte_end":68873,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":68878,"byte_end":68887,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69387,"byte_end":69391,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"fn (&mut self, n: usize) -> ReadBuf<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69289,"byte_end":69361,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69366,"byte_end":69375,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69797,"byte_end":69808,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69649,"byte_end":69721,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69726,"byte_end":69729,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69734,"byte_end":69771,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":69776,"byte_end":69785,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70320,"byte_end":70335,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70171,"byte_end":70244,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70249,"byte_end":70252,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70257,"byte_end":70294,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70299,"byte_end":70308,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71558,"byte_end":71567,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70718,"byte_end":70811,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70816,"byte_end":70832,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70837,"byte_end":70840,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70845,"byte_end":70933,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":70938,"byte_end":71029,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71034,"byte_end":71037,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71042,"byte_end":71137,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71142,"byte_end":71226,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71231,"byte_end":71307,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71312,"byte_end":71315,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71320,"byte_end":71332,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71337,"byte_end":71340,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71345,"byte_end":71441,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71446,"byte_end":71525,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71530,"byte_end":71539,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72013,"byte_end":72025,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71635,"byte_end":71741,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71746,"byte_end":71762,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71767,"byte_end":71770,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71775,"byte_end":71787,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71792,"byte_end":71795,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71800,"byte_end":71896,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71901,"byte_end":71980,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":71985,"byte_end":71994,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72387,"byte_end":72406,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72113,"byte_end":72214,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72219,"byte_end":72222,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72227,"byte_end":72338,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72343,"byte_end":72361,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72366,"byte_end":72375,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72744,"byte_end":72766,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"fn (&mut self, n: usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72498,"byte_end":72603,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72608,"byte_end":72630,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72635,"byte_end":72638,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72643,"byte_end":72655,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72660,"byte_end":72663,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72668,"byte_end":72718,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":72723,"byte_end":72732,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73611,"byte_end":73620,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73499,"byte_end":73585,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73590,"byte_end":73599,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73887,"byte_end":73892,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73688,"byte_end":73748,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73753,"byte_end":73756,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73761,"byte_end":73861,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73866,"byte_end":73875,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74221,"byte_end":74228,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":73942,"byte_end":73999,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74004,"byte_end":74007,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74012,"byte_end":74063,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74068,"byte_end":74071,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74076,"byte_end":74088,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74093,"byte_end":74096,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74101,"byte_end":74195,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74200,"byte_end":74209,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74838,"byte_end":74848,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74365,"byte_end":74418,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74423,"byte_end":74426,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74431,"byte_end":74482,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74487,"byte_end":74490,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74495,"byte_end":74600,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74605,"byte_end":74681,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74686,"byte_end":74689,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74694,"byte_end":74706,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74711,"byte_end":74714,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74719,"byte_end":74812,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":74817,"byte_end":74826,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75452,"byte_end":75463,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75032,"byte_end":75108,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75113,"byte_end":75116,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75121,"byte_end":75230,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75235,"byte_end":75286,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75291,"byte_end":75294,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75299,"byte_end":75311,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75316,"byte_end":75319,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75324,"byte_end":75419,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75424,"byte_end":75433,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75843,"byte_end":75852,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"fn (&mut self, buf: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75615,"byte_end":75721,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75726,"byte_end":75729,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75734,"byte_end":75746,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75751,"byte_end":75754,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75759,"byte_end":75817,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":75822,"byte_end":75831,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7902136,"byte_end":7902144,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":803}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7902273,"byte_end":7902282,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":806}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":807},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7902596,"byte_end":7902601,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903227,"byte_end":7903237,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"fn (&self, other: &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903124,"byte_end":7903199,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903204,"byte_end":7903215,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903644,"byte_end":7903651,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903320,"byte_end":7903369,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903374,"byte_end":7903377,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903382,"byte_end":7903394,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903399,"byte_end":7903402,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903407,"byte_end":7903481,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903486,"byte_end":7903536,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903541,"byte_end":7903605,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903610,"byte_end":7903632,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904152,"byte_end":7904162,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"fn (&self, other: &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904050,"byte_end":7904124,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904129,"byte_end":7904140,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":6268},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/seek.rs","byte_start":7907031,"byte_end":7907035,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1589},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7910323,"byte_end":7910338,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7913048,"byte_end":7913058,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7915949,"byte_end":7915958,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7917358,"byte_end":7917363,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7919203,"byte_end":7919208,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1597},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7921281,"byte_end":7921293,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7922413,"byte_end":7922418,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7925247,"byte_end":7925251,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7927554,"byte_end":7927562,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7929459,"byte_end":7929469,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7930906,"byte_end":7930913,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7932202,"byte_end":7932209,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7933540,"byte_end":7933548,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7934888,"byte_end":7934896,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7936177,"byte_end":7936185,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7937480,"byte_end":7937488,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7938851,"byte_end":7938859,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7940152,"byte_end":7940160,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7941620,"byte_end":7941629,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7943023,"byte_end":7943032,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7944379,"byte_end":7944390,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"fn <'a> (&'a mut self) -> ReadU16Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7945751,"byte_end":7945762,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"fn <'a> (&'a mut self) -> ReadI16Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7947063,"byte_end":7947074,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"fn <'a> (&'a mut self) -> ReadU32Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7948386,"byte_end":7948397,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"fn <'a> (&'a mut self) -> ReadI32Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7949778,"byte_end":7949789,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"fn <'a> (&'a mut self) -> ReadU64Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7951083,"byte_end":7951094,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"fn <'a> (&'a mut self) -> ReadI64Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7952572,"byte_end":7952584,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"fn <'a> (&'a mut self) -> ReadU128Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7953978,"byte_end":7953990,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"fn <'a> (&'a mut self) -> ReadI128Le<&'a mut Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7955649,"byte_end":7955660,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7957215,"byte_end":7957229,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7958521,"byte_end":7958525,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":1597},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1648},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_seek_ext.rs","byte_start":7959613,"byte_end":7959625,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1649}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_seek_ext.rs","byte_start":7960621,"byte_end":7960625,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1651},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7962749,"byte_end":7962762,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1659},{"krate":0,"index":1660}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7964604,"byte_end":7964609,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7967416,"byte_end":7967425,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7968767,"byte_end":7968776,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7970176,"byte_end":7970184,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7971445,"byte_end":7971453,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7972768,"byte_end":7972777,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7974090,"byte_end":7974099,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7975439,"byte_end":7975448,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7976783,"byte_end":7976792,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7978169,"byte_end":7978178,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7979565,"byte_end":7979574,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7981029,"byte_end":7981039,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7982429,"byte_end":7982439,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7983771,"byte_end":7983783,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7985110,"byte_end":7985122,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7986476,"byte_end":7986488,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7987837,"byte_end":7987849,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7989240,"byte_end":7989252,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7990653,"byte_end":7990665,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7992132,"byte_end":7992145,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7993547,"byte_end":7993560,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128Le<&'a mut Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7994580,"byte_end":7994585,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7995875,"byte_end":7995883,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6216},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997244,"byte_end":7997253,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6218},{"krate":0,"index":6219},{"krate":0,"index":6220},{"krate":0,"index":6221}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997589,"byte_end":7997592,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997447,"byte_end":7997539,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997544,"byte_end":7997577,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997754,"byte_end":7997767,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997677,"byte_end":7997742,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998121,"byte_end":7998128,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997984,"byte_end":7998030,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998035,"byte_end":7998038,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998043,"byte_end":7998109,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998320,"byte_end":7998327,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998175,"byte_end":7998229,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998234,"byte_end":7998237,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998242,"byte_end":7998308,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998538,"byte_end":7998549,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998386,"byte_end":7998447,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998452,"byte_end":7998455,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998460,"byte_end":7998526,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998780,"byte_end":7998790,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998629,"byte_end":7998692,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998697,"byte_end":7998700,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998705,"byte_end":7998768,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998994,"byte_end":7999000,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998834,"byte_end":7998890,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998895,"byte_end":7998898,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7998903,"byte_end":7998982,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":6185},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8002939,"byte_end":8002948,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":6187}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003227,"byte_end":8003230,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003073,"byte_end":8003130,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003135,"byte_end":8003138,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003143,"byte_end":8003215,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003562,"byte_end":8003575,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"fn (reader_capacity: usize, writer_capacity: usize, stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003362,"byte_end":8003447,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003452,"byte_end":8003465,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003470,"byte_end":8003473,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003478,"byte_end":8003550,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004032,"byte_end":8004039,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003887,"byte_end":8003937,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003942,"byte_end":8003945,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003950,"byte_end":8004020,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004259,"byte_end":8004266,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004106,"byte_end":8004164,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004169,"byte_end":8004172,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004177,"byte_end":8004247,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004501,"byte_end":8004512,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004341,"byte_end":8004406,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004411,"byte_end":8004414,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004419,"byte_end":8004489,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004776,"byte_end":8004786,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004621,"byte_end":8004688,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004693,"byte_end":8004696,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004701,"byte_end":8004764,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6139},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008363,"byte_end":8008372,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6141},{"krate":0,"index":6142},{"krate":0,"index":6143}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008680,"byte_end":8008683,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008538,"byte_end":8008630,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008635,"byte_end":8008668,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008845,"byte_end":8008858,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008768,"byte_end":8008833,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8009940,"byte_end":8009947,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8009882,"byte_end":8009928,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010138,"byte_end":8010145,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8009994,"byte_end":8010048,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010053,"byte_end":8010056,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010061,"byte_end":8010126,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010355,"byte_end":8010366,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010204,"byte_end":8010265,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010270,"byte_end":8010273,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010278,"byte_end":8010343,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010597,"byte_end":8010607,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010446,"byte_end":8010509,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010514,"byte_end":8010517,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010522,"byte_end":8010585,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010719,"byte_end":8010725,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010651,"byte_end":8010707,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6090},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013139,"byte_end":8013144,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013585,"byte_end":8013592,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013511,"byte_end":8013573,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013924,"byte_end":8013931,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013661,"byte_end":8013731,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013736,"byte_end":8013739,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013744,"byte_end":8013817,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013822,"byte_end":8013895,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013900,"byte_end":8013912,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014290,"byte_end":8014301,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014020,"byte_end":8014097,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014102,"byte_end":8014105,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014110,"byte_end":8014183,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014188,"byte_end":8014261,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014266,"byte_end":8014278,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014498,"byte_end":8014508,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014430,"byte_end":8014486,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1713},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy.rs","byte_start":8017901,"byte_end":8017905,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1719},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy_buf.rs","byte_start":8021710,"byte_end":8021718,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1737},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8023527,"byte_end":8023532,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":1738}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1739},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024211,"byte_end":8024216,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6048},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/flush.rs","byte_start":8025457,"byte_end":8025462,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":6051},{"krate":0,"index":6052}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5998},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8026896,"byte_end":8026901,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6003}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027748,"byte_end":8027757,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027258,"byte_end":8027298,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027303,"byte_end":8027306,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027311,"byte_end":8027325,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027330,"byte_end":8027333,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027338,"byte_end":8027345,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027350,"byte_end":8027384,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027389,"byte_end":8027424,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027429,"byte_end":8027432,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027437,"byte_end":8027520,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027525,"byte_end":8027565,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027570,"byte_end":8027573,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027578,"byte_end":8027631,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027636,"byte_end":8027679,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027684,"byte_end":8027689,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027694,"byte_end":8027706,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027711,"byte_end":8027718,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027723,"byte_end":8027730,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027984,"byte_end":8027991,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027917,"byte_end":8027972,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028110,"byte_end":8028117,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"fn (&mut self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028051,"byte_end":8028098,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028404,"byte_end":8028414,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028169,"byte_end":8028230,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028235,"byte_end":8028238,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028243,"byte_end":8028306,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028311,"byte_end":8028392,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029300,"byte_end":8029314,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028507,"byte_end":8028549,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028554,"byte_end":8028557,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028562,"byte_end":8028586,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028591,"byte_end":8028594,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028599,"byte_end":8028660,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028665,"byte_end":8028732,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028737,"byte_end":8028810,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028815,"byte_end":8028898,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028903,"byte_end":8028906,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028911,"byte_end":8028983,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028988,"byte_end":8029057,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029062,"byte_end":8029106,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029111,"byte_end":8029114,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029119,"byte_end":8029193,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029198,"byte_end":8029272,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8029277,"byte_end":8029288,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8031042,"byte_end":8031054,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030254,"byte_end":8030313,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030314,"byte_end":8030317,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030318,"byte_end":8030397,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030398,"byte_end":8030474,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030475,"byte_end":8030537,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030538,"byte_end":8030541,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030542,"byte_end":8030555,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030556,"byte_end":8030559,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030560,"byte_end":8030567,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030568,"byte_end":8030612,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030613,"byte_end":8030664,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030665,"byte_end":8030722,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030723,"byte_end":8030726,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030727,"byte_end":8030764,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030765,"byte_end":8030768,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030769,"byte_end":8030796,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030797,"byte_end":8030836,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030837,"byte_end":8030867,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030868,"byte_end":8030871,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030872,"byte_end":8030909,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030910,"byte_end":8030913,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030914,"byte_end":8030953,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030954,"byte_end":8030984,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030985,"byte_end":8030997,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8030998,"byte_end":8031005,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8031006,"byte_end":8031013,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032351,"byte_end":8032357,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"fn (max_buf_size: usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032117,"byte_end":8032200,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032201,"byte_end":8032204,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032205,"byte_end":8032279,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032280,"byte_end":8032343,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read.rs","byte_start":8037413,"byte_end":8037417,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5887},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_buf.rs","byte_start":8038634,"byte_end":8038641,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5893}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5832},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_exact.rs","byte_start":8040846,"byte_end":8040855,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5788},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8045879,"byte_end":8045885,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5791}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5751},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8045901,"byte_end":8045907,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":5753},{"krate":0,"index":5754}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5702},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8045923,"byte_end":8045930,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5707},{"krate":0,"index":5708}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5653},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8045955,"byte_end":8045962,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5658},{"krate":0,"index":5659}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5604},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8045987,"byte_end":8045994,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5609},{"krate":0,"index":5610}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5555},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046019,"byte_end":8046027,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5560},{"krate":0,"index":5561}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5506},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046055,"byte_end":8046062,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5511},{"krate":0,"index":5512}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5457},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046087,"byte_end":8046094,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5462},{"krate":0,"index":5463}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5408},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046119,"byte_end":8046126,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5414}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5359},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046151,"byte_end":8046159,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":5365}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5310},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046187,"byte_end":8046196,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5316}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5261},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046224,"byte_end":8046233,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5267}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5212},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046261,"byte_end":8046270,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5217},{"krate":0,"index":5218}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5163},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046298,"byte_end":8046308,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5169}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5114},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046339,"byte_end":8046348,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5119},{"krate":0,"index":5120}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5065},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046376,"byte_end":8046385,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5070},{"krate":0,"index":5071}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5016},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046413,"byte_end":8046422,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5022}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_int.rs","byte_start":8046450,"byte_end":8046460,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4973}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4913},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_line.rs","byte_start":8046977,"byte_end":8046985,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4856},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_end.rs","byte_start":8050941,"byte_end":8050950,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4795},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_string.rs","byte_start":8059270,"byte_end":8059282,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4734},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_until.rs","byte_start":8061692,"byte_end":8061701,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1905},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/repeat.rs","byte_start":8064043,"byte_end":8064049,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":1906}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/repeat.rs","byte_start":8064735,"byte_end":8064741,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4685},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/shutdown.rs","byte_start":8065780,"byte_end":8065788,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":4688},{"krate":0,"index":4689}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1909},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8066934,"byte_end":8066938,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":1910}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1911},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8067779,"byte_end":8067783,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069220,"byte_end":8069225,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070086,"byte_end":8070098,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069574,"byte_end":8069617,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069622,"byte_end":8069625,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069630,"byte_end":8069644,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069649,"byte_end":8069652,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069657,"byte_end":8069664,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069669,"byte_end":8069703,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069708,"byte_end":8069743,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069748,"byte_end":8069751,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069756,"byte_end":8069839,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069844,"byte_end":8069891,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069896,"byte_end":8069899,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069904,"byte_end":8069966,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069971,"byte_end":8070017,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070022,"byte_end":8070027,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070032,"byte_end":8070044,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070049,"byte_end":8070056,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070061,"byte_end":8070068,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8071135,"byte_end":8071152,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070310,"byte_end":8070355,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070360,"byte_end":8070363,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070368,"byte_end":8070392,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070397,"byte_end":8070400,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070405,"byte_end":8070469,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070474,"byte_end":8070547,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070552,"byte_end":8070628,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070633,"byte_end":8070705,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070710,"byte_end":8070730,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070735,"byte_end":8070738,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070743,"byte_end":8070815,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070820,"byte_end":8070889,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070894,"byte_end":8070938,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070943,"byte_end":8070946,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070951,"byte_end":8071023,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8071028,"byte_end":8071097,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8071102,"byte_end":8071123,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4595},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072309,"byte_end":8072313,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072903,"byte_end":8072908,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072600,"byte_end":8072653,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072658,"byte_end":8072704,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072709,"byte_end":8072712,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072717,"byte_end":8072727,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072732,"byte_end":8072735,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072740,"byte_end":8072817,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072822,"byte_end":8072891,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073227,"byte_end":8073236,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072956,"byte_end":8073027,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073032,"byte_end":8073106,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073111,"byte_end":8073186,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073191,"byte_end":8073215,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073359,"byte_end":8073366,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073301,"byte_end":8073347,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073658,"byte_end":8073665,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073413,"byte_end":8073467,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073472,"byte_end":8073475,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073480,"byte_end":8073553,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073558,"byte_end":8073630,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073635,"byte_end":8073646,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073976,"byte_end":8073987,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073724,"byte_end":8073785,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073790,"byte_end":8073793,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073798,"byte_end":8073871,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073876,"byte_end":8073948,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8073953,"byte_end":8073964,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074133,"byte_end":8074143,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074067,"byte_end":8074121,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4544},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write.rs","byte_start":8076127,"byte_end":8076132,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4491},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_all.rs","byte_start":8077270,"byte_end":8077278,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_buf.rs","byte_start":8078719,"byte_end":8078727,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4437}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4381},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083488,"byte_end":8083495,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4340},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083511,"byte_end":8083518,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4291},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083534,"byte_end":8083542,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4296},{"krate":0,"index":4297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4242},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083567,"byte_end":8083575,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4247},{"krate":0,"index":4248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083600,"byte_end":8083608,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4198},{"krate":0,"index":4199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4144},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083633,"byte_end":8083642,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4149},{"krate":0,"index":4150}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083670,"byte_end":8083678,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4046},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083703,"byte_end":8083711,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4051},{"krate":0,"index":4052}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3997},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083736,"byte_end":8083744,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4002},{"krate":0,"index":4003}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3948},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083769,"byte_end":8083778,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3953},{"krate":0,"index":3954}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3899},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083806,"byte_end":8083816,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3905}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3850},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083844,"byte_end":8083854,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3855},{"krate":0,"index":3856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3801},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083882,"byte_end":8083892,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3807}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083920,"byte_end":8083931,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3758}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8083962,"byte_end":8083972,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3709}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8084000,"byte_end":8084010,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3660}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3605},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8084038,"byte_end":8084048,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3611}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3556},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_int.rs","byte_start":8084076,"byte_end":8084087,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3562}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":8369633,"byte_end":8369642,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":254},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":320}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76770,"byte_end":76788,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76790,"byte_end":76828,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76829,"byte_end":76832,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76833,"byte_end":76916,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76917,"byte_end":76982,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76983,"byte_end":76986,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":76987,"byte_end":77005,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77006,"byte_end":77009,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77010,"byte_end":77098,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77099,"byte_end":77168,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77169,"byte_end":77257,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77258,"byte_end":77316,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77317,"byte_end":77380,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77381,"byte_end":77446,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77448,"byte_end":77451,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77452,"byte_end":77484,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77485,"byte_end":77513,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77514,"byte_end":77542,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77543,"byte_end":77577,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77578,"byte_end":77608,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/mod.rs","byte_start":77609,"byte_end":77643,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78965,"byte_end":78978,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78277,"byte_end":78354,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78355,"byte_end":78358,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78359,"byte_end":78368,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78369,"byte_end":78372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78373,"byte_end":78450,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78451,"byte_end":78522,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`net`** feature flag.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78523,"byte_end":78550,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78551,"byte_end":78554,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78555,"byte_end":78568,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78569,"byte_end":78572,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78573,"byte_end":78650,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78651,"byte_end":78723,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78724,"byte_end":78793,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78794,"byte_end":78797,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78798,"byte_end":78877,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78878,"byte_end":78954,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":314},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85418,"byte_end":85435,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":315},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85451,"byte_end":85455,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":316},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85516,"byte_end":85522,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85594,"byte_end":85609,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self, internal: Internal) -> Self::Future","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85720,"byte_end":85728,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":85665,"byte_end":85704,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":555},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":101002,"byte_end":101008,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":100939,"byte_end":100992,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":556},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":101061,"byte_end":101066,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":554},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":101023,"byte_end":101051,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":2120},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2297},{"krate":0,"index":2700},{"krate":0,"index":2789},{"krate":0,"index":2794},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2972},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3100},{"krate":0,"index":3104},{"krate":0,"index":3208},{"krate":0,"index":3212},{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"! Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084181,"byte_end":8084245,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084246,"byte_end":8084249,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084250,"byte_end":8084325,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084326,"byte_end":8084406,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084407,"byte_end":8084486,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tasks to communicate together.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084487,"byte_end":8084521,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084522,"byte_end":8084525,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084526,"byte_end":8084550,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084551,"byte_end":8084554,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Message passing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084555,"byte_end":8084576,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084577,"byte_end":8084580,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084581,"byte_end":8084654,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084655,"byte_end":8084734,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084735,"byte_end":8084804,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084805,"byte_end":8084808,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084809,"byte_end":8084888,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084889,"byte_end":8084966,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8084967,"byte_end":8085042,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085043,"byte_end":8085115,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085116,"byte_end":8085188,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085189,"byte_end":8085267,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"! messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085268,"byte_end":8085281,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085282,"byte_end":8085285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085286,"byte_end":8085364,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! patterns are best handled with different implementations.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085365,"byte_end":8085426,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085427,"byte_end":8085430,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## `oneshot` channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085431,"byte_end":8085455,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085456,"byte_end":8085459,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085460,"byte_end":8085539,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085540,"byte_end":8085618,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! the result of a computation to a waiter.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085619,"byte_end":8085663,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085664,"byte_end":8085667,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085668,"byte_end":8085748,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"! computation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085749,"byte_end":8085765,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085766,"byte_end":8085769,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085770,"byte_end":8085777,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085778,"byte_end":8085807,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085808,"byte_end":8085811,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085812,"byte_end":8085855,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085856,"byte_end":8085918,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085919,"byte_end":8085924,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085925,"byte_end":8085928,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085929,"byte_end":8085947,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085948,"byte_end":8085969,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8085970,"byte_end":8086012,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086013,"byte_end":8086016,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086017,"byte_end":8086050,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"!         let res = some_computation().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086051,"byte_end":8086098,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"!         tx.send(res).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086099,"byte_end":8086133,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086134,"byte_end":8086145,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086146,"byte_end":8086149,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086150,"byte_end":8086227,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086228,"byte_end":8086231,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086232,"byte_end":8086274,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"!     let res = rx.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086275,"byte_end":8086311,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086312,"byte_end":8086317,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086318,"byte_end":8086325,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086326,"byte_end":8086329,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Note, if the task produces a computation result as its final","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086330,"byte_end":8086394,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"! action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086395,"byte_end":8086459,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"! receive that value instead of allocating resources for the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086460,"byte_end":8086522,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"! `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086523,"byte_end":8086593,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"! the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086594,"byte_end":8086659,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"! cause.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086660,"byte_end":8086670,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086671,"byte_end":8086674,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! **Example:**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086675,"byte_end":8086691,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086692,"byte_end":8086695,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086696,"byte_end":8086703,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086704,"byte_end":8086747,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"!     \"the result of the computation\".to_string()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086748,"byte_end":8086799,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086800,"byte_end":8086805,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086806,"byte_end":8086809,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086810,"byte_end":8086828,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086829,"byte_end":8086850,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"!     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086851,"byte_end":8086902,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"!         some_computation().await","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086903,"byte_end":8086939,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086940,"byte_end":8086951,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086952,"byte_end":8086955,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8086956,"byte_end":8087033,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087034,"byte_end":8087037,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087038,"byte_end":8087080,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"!     let res = join_handle.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087081,"byte_end":8087126,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087127,"byte_end":8087132,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087133,"byte_end":8087140,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087141,"byte_end":8087144,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! [oneshot]: oneshot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087145,"byte_end":8087167,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087168,"byte_end":8087211,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087212,"byte_end":8087215,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ## `mpsc` channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087216,"byte_end":8087237,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087238,"byte_end":8087241,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087242,"byte_end":8087319,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"! producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087320,"byte_end":8087400,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"! task or to receive the result of many computations.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087401,"byte_end":8087456,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087457,"byte_end":8087460,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087461,"byte_end":8087539,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"! of computations.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087540,"byte_end":8087560,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087561,"byte_end":8087564,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087565,"byte_end":8087572,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087573,"byte_end":8087599,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087600,"byte_end":8087603,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087604,"byte_end":8087657,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"!     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087658,"byte_end":8087712,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087713,"byte_end":8087718,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087719,"byte_end":8087722,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087723,"byte_end":8087741,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087742,"byte_end":8087763,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087764,"byte_end":8087810,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087811,"byte_end":8087814,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087815,"byte_end":8087848,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"!         for i in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087849,"byte_end":8087877,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"!             let res = some_computation(i).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087878,"byte_end":8087930,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"!             tx.send(res).await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087931,"byte_end":8087975,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087976,"byte_end":8087989,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8087990,"byte_end":8088001,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088002,"byte_end":8088005,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088006,"byte_end":8088053,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"!         println!(\"got = {}\", res);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088054,"byte_end":8088092,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088093,"byte_end":8088102,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088103,"byte_end":8088108,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088109,"byte_end":8088116,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088117,"byte_end":8088120,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088121,"byte_end":8088201,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"! number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088202,"byte_end":8088279,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"! given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088280,"byte_end":8088353,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"! programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088354,"byte_end":8088429,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"! pressure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088430,"byte_end":8088443,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088444,"byte_end":8088447,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088448,"byte_end":8088523,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"! dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088524,"byte_end":8088603,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088604,"byte_end":8088682,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"! not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088683,"byte_end":8088762,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"! For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088763,"byte_end":8088843,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"! a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088844,"byte_end":8088909,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088910,"byte_end":8088913,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088914,"byte_end":8088994,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"! passing.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8088995,"byte_end":8089007,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089008,"byte_end":8089011,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089012,"byte_end":8089025,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089026,"byte_end":8089067,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"! use tokio::net::TcpStream;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089068,"byte_end":8089098,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089099,"byte_end":8089125,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089126,"byte_end":8089129,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089130,"byte_end":8089148,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089149,"byte_end":8089188,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"!     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089189,"byte_end":8089264,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089265,"byte_end":8089311,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089312,"byte_end":8089315,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089316,"byte_end":8089340,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"!         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089341,"byte_end":8089420,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!         // original handle.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089421,"byte_end":8089452,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"!         let tx = tx.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089453,"byte_end":8089485,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089486,"byte_end":8089489,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089490,"byte_end":8089527,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"!             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089528,"byte_end":8089590,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"!         });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089591,"byte_end":8089606,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089607,"byte_end":8089616,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089617,"byte_end":8089620,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"!     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089621,"byte_end":8089700,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"!     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089701,"byte_end":8089776,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"!     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089777,"byte_end":8089855,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"!     // be a single outstanding `tx` handle.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089856,"byte_end":8089903,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"!     drop(tx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089904,"byte_end":8089921,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089922,"byte_end":8089925,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089926,"byte_end":8089973,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"!         socket.write_all(res).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8089974,"byte_end":8090015,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090016,"byte_end":8090025,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090026,"byte_end":8090029,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090030,"byte_end":8090044,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090045,"byte_end":8090050,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090051,"byte_end":8090058,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090059,"byte_end":8090062,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090063,"byte_end":8090138,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"! provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090139,"byte_end":8090214,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"! resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090215,"byte_end":8090294,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"! received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090295,"byte_end":8090360,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"! [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090361,"byte_end":8090438,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090439,"byte_end":8090442,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090443,"byte_end":8090521,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"! \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090522,"byte_end":8090602,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! sent over the provided `oneshot` channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090603,"byte_end":8090648,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090649,"byte_end":8090652,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090653,"byte_end":8090660,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090661,"byte_end":8090698,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"! use Command::Increment;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090699,"byte_end":8090726,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090727,"byte_end":8090730,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! enum Command {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090731,"byte_end":8090749,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"!     Increment,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090750,"byte_end":8090768,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"!     // Other commands can be added here","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090769,"byte_end":8090812,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090813,"byte_end":8090818,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090819,"byte_end":8090822,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090823,"byte_end":8090841,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090842,"byte_end":8090863,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"!     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090864,"byte_end":8090953,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090954,"byte_end":8090957,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to manage the counter","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8090958,"byte_end":8091003,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091004,"byte_end":8091037,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"!         let mut counter: u64 = 0;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091038,"byte_end":8091075,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091076,"byte_end":8091079,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"!         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091080,"byte_end":8091147,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"!             match cmd {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091148,"byte_end":8091175,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"!                 Increment => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091176,"byte_end":8091210,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"!                     let prev = counter;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091211,"byte_end":8091254,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"!                     counter += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091255,"byte_end":8091292,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"!                     response.send(prev).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091293,"byte_end":8091346,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"!                 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091347,"byte_end":8091368,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091369,"byte_end":8091386,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091387,"byte_end":8091400,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091401,"byte_end":8091412,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091413,"byte_end":8091416,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"!     let mut join_handles = vec![];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091417,"byte_end":8091455,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091456,"byte_end":8091459,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091460,"byte_end":8091520,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091521,"byte_end":8091545,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"!         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091546,"byte_end":8091586,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091587,"byte_end":8091590,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"!         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091591,"byte_end":8091646,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"!             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091647,"byte_end":8091707,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091708,"byte_end":8091711,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"!             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091712,"byte_end":8091782,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"!             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091783,"byte_end":8091832,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091833,"byte_end":8091836,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"!             println!(\"previous value = {}\", res);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091837,"byte_end":8091890,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"!         }));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091891,"byte_end":8091907,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091908,"byte_end":8091917,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091918,"byte_end":8091921,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"!     // Wait for all tasks to complete","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091922,"byte_end":8091963,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"!     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8091964,"byte_end":8092015,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"!         join_handle.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092016,"byte_end":8092055,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092056,"byte_end":8092065,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092066,"byte_end":8092071,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092072,"byte_end":8092079,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092080,"byte_end":8092083,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! [mpsc]: mpsc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092084,"byte_end":8092100,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092101,"byte_end":8092104,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ## `broadcast` channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092105,"byte_end":8092131,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092132,"byte_end":8092135,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092136,"byte_end":8092203,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"! **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092204,"byte_end":8092276,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"! **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092277,"byte_end":8092350,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"! patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092351,"byte_end":8092404,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092405,"byte_end":8092408,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092409,"byte_end":8092489,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"! has its use cases.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092490,"byte_end":8092512,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092513,"byte_end":8092516,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092517,"byte_end":8092532,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092533,"byte_end":8092536,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092537,"byte_end":8092544,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092545,"byte_end":8092576,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092577,"byte_end":8092580,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092581,"byte_end":8092599,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092600,"byte_end":8092621,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092622,"byte_end":8092673,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092674,"byte_end":8092711,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092712,"byte_end":8092715,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092716,"byte_end":8092749,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092750,"byte_end":8092804,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092805,"byte_end":8092859,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092860,"byte_end":8092871,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092872,"byte_end":8092875,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092876,"byte_end":8092909,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092910,"byte_end":8092964,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8092965,"byte_end":8093019,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093020,"byte_end":8093031,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093032,"byte_end":8093035,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093036,"byte_end":8093065,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093066,"byte_end":8093095,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093096,"byte_end":8093101,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093102,"byte_end":8093109,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093110,"byte_end":8093113,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093114,"byte_end":8093163,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093164,"byte_end":8093167,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! ## `watch` channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093168,"byte_end":8093190,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093191,"byte_end":8093194,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093195,"byte_end":8093271,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"! producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093272,"byte_end":8093350,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"! stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093351,"byte_end":8093430,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"! there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093431,"byte_end":8093496,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093497,"byte_end":8093500,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093501,"byte_end":8093581,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093582,"byte_end":8093585,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093586,"byte_end":8093660,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"! changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093661,"byte_end":8093734,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"! shutdown.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093735,"byte_end":8093748,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093749,"byte_end":8093752,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"! **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093753,"byte_end":8093826,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"! changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093827,"byte_end":8093907,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"! the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093908,"byte_end":8093983,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093984,"byte_end":8093987,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093988,"byte_end":8093995,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8093996,"byte_end":8094023,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"! use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094024,"byte_end":8094071,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094072,"byte_end":8094075,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094076,"byte_end":8094092,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094093,"byte_end":8094096,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094097,"byte_end":8094139,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"! struct Config {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094140,"byte_end":8094159,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"!     timeout: Duration,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094160,"byte_end":8094186,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094187,"byte_end":8094192,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094193,"byte_end":8094196,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! impl Config {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094197,"byte_end":8094214,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"!     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094215,"byte_end":8094272,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"!         // file loading and deserialization logic here","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094273,"byte_end":8094331,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"! # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094332,"byte_end":8094384,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094385,"byte_end":8094394,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094395,"byte_end":8094400,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094401,"byte_end":8094404,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"! async fn my_async_operation() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094405,"byte_end":8094440,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"!     // Do something here","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094441,"byte_end":8094469,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094470,"byte_end":8094475,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094476,"byte_end":8094479,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094480,"byte_end":8094498,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094499,"byte_end":8094520,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"!     // Load initial configuration value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094521,"byte_end":8094564,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"!     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094565,"byte_end":8094630,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094631,"byte_end":8094634,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094635,"byte_end":8094713,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"!     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094714,"byte_end":8094768,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094769,"byte_end":8094772,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to monitor the file.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094773,"byte_end":8094817,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094818,"byte_end":8094851,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"!         loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094852,"byte_end":8094870,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"!             // Wait 10 seconds between checks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094871,"byte_end":8094920,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"!             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094921,"byte_end":8094980,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094981,"byte_end":8094984,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"!             // Load the configuration file","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8094985,"byte_end":8095031,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"!             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095032,"byte_end":8095105,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095106,"byte_end":8095109,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!             // If the configuration changed, send the new config value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095110,"byte_end":8095184,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"!             // on the watch channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095185,"byte_end":8095225,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"!             if new_config != config {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095226,"byte_end":8095267,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"!                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095268,"byte_end":8095325,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"!                 config = new_config;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095326,"byte_end":8095366,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"!             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095367,"byte_end":8095384,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095385,"byte_end":8095398,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095399,"byte_end":8095410,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095411,"byte_end":8095414,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"!     let mut handles = vec![];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095415,"byte_end":8095448,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095449,"byte_end":8095452,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095453,"byte_end":8095531,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"!     // the timeout elapses, restart the operation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095532,"byte_end":8095586,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095587,"byte_end":8095597,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"!     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095598,"byte_end":8095675,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"!     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095676,"byte_end":8095754,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"!     // the in-flight operation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095755,"byte_end":8095790,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"!     for _ in 0..5 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095791,"byte_end":8095814,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"!         // Clone a config watch handle for use in this task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095815,"byte_end":8095878,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"!         let mut rx = rx.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095879,"byte_end":8095915,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095916,"byte_end":8095919,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"!         let handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095920,"byte_end":8095970,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"!             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8095971,"byte_end":8096050,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"!             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096051,"byte_end":8096126,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"!             // across multiple calls to `select!`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096127,"byte_end":8096180,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"!             let op = my_async_operation();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096181,"byte_end":8096227,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"!             tokio::pin!(op);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096228,"byte_end":8096260,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096261,"byte_end":8096264,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"!             // Get the initial config value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096265,"byte_end":8096312,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"!             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096313,"byte_end":8096364,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096365,"byte_end":8096368,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"!             let mut op_start = Instant::now();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096369,"byte_end":8096419,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"!             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096420,"byte_end":8096491,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"!             tokio::pin!(sleep);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096492,"byte_end":8096527,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096528,"byte_end":8096531,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"!             loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096532,"byte_end":8096554,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"!                 tokio::select! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096555,"byte_end":8096591,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"!                     _ = &mut sleep => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096592,"byte_end":8096635,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"!                         // The operation elapsed. Restart it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096636,"byte_end":8096700,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"!                         op.set(my_async_operation());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096701,"byte_end":8096758,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096759,"byte_end":8096762,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"!                         // Track the new start time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096763,"byte_end":8096818,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"!                         op_start = Instant::now();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096819,"byte_end":8096873,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096874,"byte_end":8096877,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"!                         // Restart the timeout","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096878,"byte_end":8096928,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"!                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8096929,"byte_end":8097011,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"!                     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097012,"byte_end":8097037,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"!                     _ = rx.changed() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097038,"byte_end":8097083,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"!                         conf = rx.borrow().clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097084,"byte_end":8097139,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097140,"byte_end":8097143,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"!                         // The configuration has been updated. Update the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097144,"byte_end":8097221,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"!                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097222,"byte_end":8097291,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"!                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097292,"byte_end":8097366,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"!                     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097367,"byte_end":8097392,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"!                     _ = &mut op => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097393,"byte_end":8097433,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"!                         // The operation completed!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097434,"byte_end":8097489,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"!                         return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097490,"byte_end":8097524,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"!                     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097525,"byte_end":8097550,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097551,"byte_end":8097572,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097573,"byte_end":8097590,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097591,"byte_end":8097606,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097607,"byte_end":8097610,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"!         handles.push(handle);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097611,"byte_end":8097644,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097645,"byte_end":8097654,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097655,"byte_end":8097658,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"!     for handle in handles.drain(..) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097659,"byte_end":8097700,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"!         handle.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097701,"byte_end":8097735,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097736,"byte_end":8097745,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097746,"byte_end":8097751,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097752,"byte_end":8097759,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097760,"byte_end":8097763,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"! [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097764,"byte_end":8097809,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"! [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097810,"byte_end":8097863,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097864,"byte_end":8097867,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"! # State synchronization","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097868,"byte_end":8097895,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097896,"byte_end":8097899,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"! The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097900,"byte_end":8097974,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"! These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8097975,"byte_end":8098049,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"! operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098050,"byte_end":8098120,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"! asynchronously instead of blocking the thread.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098121,"byte_end":8098171,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098172,"byte_end":8098175,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"! * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098176,"byte_end":8098253,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"!   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098254,"byte_end":8098331,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098332,"byte_end":8098335,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"! * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098336,"byte_end":8098413,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"!   one thread at a time is able to access some data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098414,"byte_end":8098469,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098470,"byte_end":8098473,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"! * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098474,"byte_end":8098553,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"!   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098554,"byte_end":8098632,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"!   resumes processing.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098633,"byte_end":8098658,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098659,"byte_end":8098662,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"! * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098663,"byte_end":8098738,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"!   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098739,"byte_end":8098815,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"!   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098816,"byte_end":8098883,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098884,"byte_end":8098887,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"! * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098888,"byte_end":8098964,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"!   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8098965,"byte_end":8099041,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"!   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099042,"byte_end":8099116,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"!   bounding of any kind.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099117,"byte_end":8099144,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3311},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101453,"byte_end":8101460,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100500,"byte_end":8100588,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100589,"byte_end":8100592,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100593,"byte_end":8100600,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100601,"byte_end":8100621,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100622,"byte_end":8100645,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100646,"byte_end":8100675,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100676,"byte_end":8100679,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100680,"byte_end":8100714,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100715,"byte_end":8100738,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100739,"byte_end":8100742,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100743,"byte_end":8100788,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100789,"byte_end":8100834,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100835,"byte_end":8100855,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100856,"byte_end":8100888,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100889,"byte_end":8100943,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100944,"byte_end":8100989,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8100990,"byte_end":8101023,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101024,"byte_end":8101060,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101061,"byte_end":8101097,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101098,"byte_end":8101133,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101134,"byte_end":8101148,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101149,"byte_end":8101160,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101161,"byte_end":8101166,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101167,"byte_end":8101241,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101242,"byte_end":8101280,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101281,"byte_end":8101336,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101337,"byte_end":8101408,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101409,"byte_end":8101416,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101417,"byte_end":8101424,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101923,"byte_end":8101926,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (mut n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101683,"byte_end":8101750,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101755,"byte_end":8101758,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101763,"byte_end":8101851,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101856,"byte_end":8101911,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102999,"byte_end":8103003,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102525,"byte_end":8102585,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102590,"byte_end":8102593,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102598,"byte_end":8102674,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102679,"byte_end":8102704,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102709,"byte_end":8102712,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102717,"byte_end":8102810,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102815,"byte_end":8102908,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8102913,"byte_end":8102981,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3323},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8104924,"byte_end":8104941,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8104788,"byte_end":8104888,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8105189,"byte_end":8105198,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8104979,"byte_end":8105046,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8105051,"byte_end":8105054,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8105059,"byte_end":8105151,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8105156,"byte_end":8105177,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":2134},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2163},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2183},{"krate":0,"index":2188},{"krate":0,"index":2194},{"krate":0,"index":2199},{"krate":0,"index":2203},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2248},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2262},{"krate":0,"index":2267},{"krate":0,"index":2273},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2285},{"krate":0,"index":2290},{"krate":0,"index":2295}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105240,"byte_end":8105320,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105321,"byte_end":8105339,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105340,"byte_end":8105343,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105344,"byte_end":8105422,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105423,"byte_end":8105498,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105499,"byte_end":8105577,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105578,"byte_end":8105632,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105633,"byte_end":8105636,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105637,"byte_end":8105713,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105714,"byte_end":8105794,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105795,"byte_end":8105872,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105873,"byte_end":8105923,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105924,"byte_end":8105927,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8105928,"byte_end":8106006,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106007,"byte_end":8106064,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106065,"byte_end":8106068,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106069,"byte_end":8106147,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106148,"byte_end":8106220,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106221,"byte_end":8106237,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106238,"byte_end":8106241,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106242,"byte_end":8106256,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106257,"byte_end":8106260,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106261,"byte_end":8106341,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106342,"byte_end":8106421,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106422,"byte_end":8106499,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106500,"byte_end":8106578,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106579,"byte_end":8106586,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106587,"byte_end":8106590,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106591,"byte_end":8106668,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106669,"byte_end":8106744,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106745,"byte_end":8106825,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106826,"byte_end":8106829,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106830,"byte_end":8106902,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106903,"byte_end":8106981,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8106982,"byte_end":8107058,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107059,"byte_end":8107118,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107119,"byte_end":8107122,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107123,"byte_end":8107201,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107202,"byte_end":8107276,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107277,"byte_end":8107313,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107314,"byte_end":8107317,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107318,"byte_end":8107397,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107398,"byte_end":8107475,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107476,"byte_end":8107551,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107552,"byte_end":8107583,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107584,"byte_end":8107587,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107588,"byte_end":8107602,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107603,"byte_end":8107606,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107607,"byte_end":8107682,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107683,"byte_end":8107761,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107762,"byte_end":8107839,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107840,"byte_end":8107871,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107872,"byte_end":8107875,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107876,"byte_end":8107922,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107923,"byte_end":8107991,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8107992,"byte_end":8108042,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108043,"byte_end":8108091,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108092,"byte_end":8108167,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108168,"byte_end":8108243,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108244,"byte_end":8108296,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108297,"byte_end":8108300,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108301,"byte_end":8108315,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108316,"byte_end":8108319,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108320,"byte_end":8108335,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108336,"byte_end":8108339,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108340,"byte_end":8108347,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108348,"byte_end":8108379,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108380,"byte_end":8108383,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108384,"byte_end":8108402,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108403,"byte_end":8108424,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108425,"byte_end":8108476,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108477,"byte_end":8108514,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108515,"byte_end":8108518,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108519,"byte_end":8108552,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108553,"byte_end":8108607,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108608,"byte_end":8108662,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108663,"byte_end":8108674,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108675,"byte_end":8108678,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108679,"byte_end":8108712,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108713,"byte_end":8108767,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108768,"byte_end":8108822,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108823,"byte_end":8108834,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108835,"byte_end":8108838,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108839,"byte_end":8108868,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108869,"byte_end":8108898,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108899,"byte_end":8108904,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108905,"byte_end":8108912,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108913,"byte_end":8108916,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108917,"byte_end":8108933,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108934,"byte_end":8108937,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108938,"byte_end":8108945,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108946,"byte_end":8108977,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108978,"byte_end":8108981,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8108982,"byte_end":8109000,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109001,"byte_end":8109022,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109023,"byte_end":8109072,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109073,"byte_end":8109076,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109077,"byte_end":8109106,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109107,"byte_end":8109136,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109137,"byte_end":8109166,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109167,"byte_end":8109170,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109171,"byte_end":8109208,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109209,"byte_end":8109251,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109252,"byte_end":8109255,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109256,"byte_end":8109325,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109326,"byte_end":8109329,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109330,"byte_end":8109379,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109380,"byte_end":8109429,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109430,"byte_end":8109435,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109436,"byte_end":8109443,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2156},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110640,"byte_end":8110646,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":2158}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109847,"byte_end":8109893,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109894,"byte_end":8109897,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109898,"byte_end":8109958,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109959,"byte_end":8109986,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109987,"byte_end":8109990,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8109991,"byte_end":8110005,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110006,"byte_end":8110009,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110010,"byte_end":8110017,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110018,"byte_end":8110049,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110050,"byte_end":8110053,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110054,"byte_end":8110072,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110073,"byte_end":8110094,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110095,"byte_end":8110146,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110147,"byte_end":8110184,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110185,"byte_end":8110188,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110189,"byte_end":8110222,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110223,"byte_end":8110277,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110278,"byte_end":8110332,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110333,"byte_end":8110344,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110345,"byte_end":8110348,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110349,"byte_end":8110382,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110383,"byte_end":8110437,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110438,"byte_end":8110492,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110493,"byte_end":8110504,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110505,"byte_end":8110508,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110509,"byte_end":8110538,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110539,"byte_end":8110568,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110569,"byte_end":8110574,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110575,"byte_end":8110582,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110583,"byte_end":8110586,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110587,"byte_end":8110628,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2159},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111486,"byte_end":8111494,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110683,"byte_end":8110731,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110732,"byte_end":8110735,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110736,"byte_end":8110802,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110803,"byte_end":8110832,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110833,"byte_end":8110836,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110837,"byte_end":8110851,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110852,"byte_end":8110855,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110856,"byte_end":8110863,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110864,"byte_end":8110895,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110896,"byte_end":8110899,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110900,"byte_end":8110918,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110919,"byte_end":8110940,"line_start":172,"line_end":172,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110941,"byte_end":8110992,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8110993,"byte_end":8111030,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111031,"byte_end":8111034,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111035,"byte_end":8111068,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111069,"byte_end":8111123,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111124,"byte_end":8111178,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111179,"byte_end":8111190,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111191,"byte_end":8111194,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111195,"byte_end":8111228,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111229,"byte_end":8111283,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111284,"byte_end":8111338,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111339,"byte_end":8111350,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111351,"byte_end":8111354,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111355,"byte_end":8111384,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111385,"byte_end":8111414,"line_start":187,"line_end":187,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111415,"byte_end":8111420,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111421,"byte_end":8111428,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111429,"byte_end":8111432,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111433,"byte_end":8111474,"line_start":191,"line_end":191,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":2163},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111643,"byte_end":8111648,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":3330},{"krate":0,"index":3334},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":3337},{"krate":0,"index":3347},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":3349},{"krate":0,"index":3361},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":2173},{"krate":0,"index":2175}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"! Broadcast error types","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111655,"byte_end":8111680,"line_start":201,"line_end":201,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3330},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112152,"byte_end":8112161,"line_start":214,"line_end":214,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111705,"byte_end":8111770,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111775,"byte_end":8111778,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111783,"byte_end":8111855,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111860,"byte_end":8111937,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8111942,"byte_end":8112001,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112006,"byte_end":8112009,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112014,"byte_end":8112064,"line_start":211,"line_end":211,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112069,"byte_end":8112115,"line_start":212,"line_end":212,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3338},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112767,"byte_end":8112773,"line_start":232,"line_end":232,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":3337},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112662,"byte_end":8112737,"line_start":230,"line_end":230,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112746,"byte_end":8112758,"line_start":231,"line_end":231,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112999,"byte_end":8113005,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":3337},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112784,"byte_end":8112856,"line_start":234,"line_end":234,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112865,"byte_end":8112925,"line_start":235,"line_end":235,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112934,"byte_end":8112937,"line_start":236,"line_end":236,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112946,"byte_end":8112990,"line_start":237,"line_end":237,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3337},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112642,"byte_end":8112651,"line_start":229,"line_end":229,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"RecvError::{Closed, Lagged}","parent":null,"children":[{"krate":0,"index":3338},{"krate":0,"index":3340}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112409,"byte_end":8112476,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112481,"byte_end":8112484,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112489,"byte_end":8112541,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112546,"byte_end":8112596,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113845,"byte_end":8113850,"line_start":262,"line_end":262,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113645,"byte_end":8113703,"line_start":258,"line_end":258,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113712,"byte_end":8113769,"line_start":259,"line_end":259,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113778,"byte_end":8113781,"line_start":260,"line_end":260,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113790,"byte_end":8113836,"line_start":261,"line_end":261,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3352},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113966,"byte_end":8113972,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113861,"byte_end":8113936,"line_start":264,"line_end":264,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113945,"byte_end":8113957,"line_start":265,"line_end":265,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3354},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114245,"byte_end":8114251,"line_start":273,"line_end":273,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113983,"byte_end":8114057,"line_start":268,"line_end":268,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114066,"byte_end":8114134,"line_start":269,"line_end":269,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114143,"byte_end":8114171,"line_start":270,"line_end":270,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114180,"byte_end":8114183,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114192,"byte_end":8114236,"line_start":272,"line_end":272,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3349},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113622,"byte_end":8113634,"line_start":257,"line_end":257,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"TryRecvError::{Empty, Closed, Lagged}","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3354}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113377,"byte_end":8113448,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113453,"byte_end":8113456,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113461,"byte_end":8113521,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113526,"byte_end":8113576,"line_start":255,"line_end":255,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":2215},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118446,"byte_end":8118453,"line_start":423,"line_end":423,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn <T> (mut capacity: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116820,"byte_end":8116896,"line_start":378,"line_end":378,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116897,"byte_end":8116946,"line_start":379,"line_end":379,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116947,"byte_end":8116950,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116951,"byte_end":8117020,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117021,"byte_end":8117071,"line_start":382,"line_end":382,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117072,"byte_end":8117075,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117076,"byte_end":8117150,"line_start":384,"line_end":384,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117151,"byte_end":8117226,"line_start":385,"line_end":385,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117227,"byte_end":8117295,"line_start":386,"line_end":386,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117296,"byte_end":8117299,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117300,"byte_end":8117376,"line_start":388,"line_end":388,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117377,"byte_end":8117458,"line_start":389,"line_end":389,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117459,"byte_end":8117498,"line_start":390,"line_end":390,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117499,"byte_end":8117502,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117503,"byte_end":8117549,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117550,"byte_end":8117618,"line_start":393,"line_end":393,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117619,"byte_end":8117669,"line_start":394,"line_end":394,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117670,"byte_end":8117722,"line_start":395,"line_end":395,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117723,"byte_end":8117782,"line_start":396,"line_end":396,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117783,"byte_end":8117842,"line_start":397,"line_end":397,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117843,"byte_end":8117846,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117847,"byte_end":8117861,"line_start":399,"line_end":399,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117862,"byte_end":8117865,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117866,"byte_end":8117873,"line_start":401,"line_end":401,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117874,"byte_end":8117905,"line_start":402,"line_end":402,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117906,"byte_end":8117909,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117910,"byte_end":8117928,"line_start":404,"line_end":404,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117929,"byte_end":8117950,"line_start":405,"line_end":405,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8117951,"byte_end":8118002,"line_start":406,"line_end":406,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118003,"byte_end":8118040,"line_start":407,"line_end":407,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118041,"byte_end":8118044,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118045,"byte_end":8118078,"line_start":409,"line_end":409,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118079,"byte_end":8118133,"line_start":410,"line_end":410,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118134,"byte_end":8118188,"line_start":411,"line_end":411,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118189,"byte_end":8118200,"line_start":412,"line_end":412,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118201,"byte_end":8118204,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118205,"byte_end":8118238,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118239,"byte_end":8118293,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118294,"byte_end":8118348,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118349,"byte_end":8118360,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118361,"byte_end":8118364,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118365,"byte_end":8118394,"line_start":419,"line_end":419,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118395,"byte_end":8118424,"line_start":420,"line_end":420,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118425,"byte_end":8118430,"line_start":421,"line_end":421,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8118431,"byte_end":8118438,"line_start":422,"line_end":422,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121505,"byte_end":8121509,"line_start":520,"line_end":520,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119655,"byte_end":8119729,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119734,"byte_end":8119770,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119775,"byte_end":8119778,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119783,"byte_end":8119858,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119863,"byte_end":8119929,"line_start":474,"line_end":474,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119934,"byte_end":8119985,"line_start":475,"line_end":475,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119990,"byte_end":8119993,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119998,"byte_end":8120010,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120015,"byte_end":8120018,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120023,"byte_end":8120097,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120102,"byte_end":8120178,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120183,"byte_end":8120236,"line_start":481,"line_end":481,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120241,"byte_end":8120244,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120249,"byte_end":8120259,"line_start":483,"line_end":483,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120264,"byte_end":8120267,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120272,"byte_end":8120344,"line_start":485,"line_end":485,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120349,"byte_end":8120424,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120429,"byte_end":8120490,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120495,"byte_end":8120498,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120503,"byte_end":8120576,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120581,"byte_end":8120646,"line_start":490,"line_end":490,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120651,"byte_end":8120669,"line_start":491,"line_end":491,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120674,"byte_end":8120677,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120682,"byte_end":8120732,"line_start":493,"line_end":493,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120737,"byte_end":8120797,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120802,"byte_end":8120805,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120810,"byte_end":8120824,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120829,"byte_end":8120832,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120837,"byte_end":8120844,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120849,"byte_end":8120880,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120885,"byte_end":8120888,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120893,"byte_end":8120911,"line_start":501,"line_end":501,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120916,"byte_end":8120937,"line_start":502,"line_end":502,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120942,"byte_end":8120993,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8120998,"byte_end":8121035,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121040,"byte_end":8121043,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121048,"byte_end":8121081,"line_start":506,"line_end":506,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121086,"byte_end":8121140,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121145,"byte_end":8121199,"line_start":508,"line_end":508,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121204,"byte_end":8121215,"line_start":509,"line_end":509,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121220,"byte_end":8121223,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121228,"byte_end":8121261,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121266,"byte_end":8121320,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121325,"byte_end":8121379,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121384,"byte_end":8121395,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121400,"byte_end":8121403,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121408,"byte_end":8121437,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121442,"byte_end":8121471,"line_start":517,"line_end":517,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121476,"byte_end":8121481,"line_start":518,"line_end":518,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121486,"byte_end":8121493,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122269,"byte_end":8122278,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn (&self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121674,"byte_end":8121751,"line_start":525,"line_end":525,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121756,"byte_end":8121785,"line_start":526,"line_end":526,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121790,"byte_end":8121793,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121798,"byte_end":8121812,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121817,"byte_end":8121820,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121825,"byte_end":8121832,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121837,"byte_end":8121868,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121873,"byte_end":8121876,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121881,"byte_end":8121899,"line_start":533,"line_end":533,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121904,"byte_end":8121925,"line_start":534,"line_end":534,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121930,"byte_end":8121977,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121982,"byte_end":8121985,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8121990,"byte_end":8122017,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122022,"byte_end":8122051,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122056,"byte_end":8122059,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122064,"byte_end":8122100,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122105,"byte_end":8122108,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122113,"byte_end":8122142,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122147,"byte_end":8122150,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122155,"byte_end":8122200,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122205,"byte_end":8122235,"line_start":545,"line_end":545,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122240,"byte_end":8122245,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122250,"byte_end":8122257,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123537,"byte_end":8123551,"line_start":589,"line_end":589,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122385,"byte_end":8122427,"line_start":553,"line_end":553,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122432,"byte_end":8122435,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122440,"byte_end":8122516,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122521,"byte_end":8122594,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122599,"byte_end":8122619,"line_start":557,"line_end":557,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122624,"byte_end":8122627,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122632,"byte_end":8122642,"line_start":559,"line_end":559,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122647,"byte_end":8122650,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122655,"byte_end":8122725,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122730,"byte_end":8122798,"line_start":562,"line_end":562,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122803,"byte_end":8122816,"line_start":563,"line_end":563,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122821,"byte_end":8122824,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122829,"byte_end":8122881,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122886,"byte_end":8122936,"line_start":566,"line_end":566,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122941,"byte_end":8122987,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8122992,"byte_end":8123052,"line_start":568,"line_end":568,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123057,"byte_end":8123105,"line_start":569,"line_end":569,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123110,"byte_end":8123113,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123118,"byte_end":8123132,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123137,"byte_end":8123140,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123145,"byte_end":8123152,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123157,"byte_end":8123188,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123193,"byte_end":8123196,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123201,"byte_end":8123219,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123224,"byte_end":8123245,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123250,"byte_end":8123298,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123303,"byte_end":8123306,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123311,"byte_end":8123354,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123359,"byte_end":8123362,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123367,"byte_end":8123405,"line_start":582,"line_end":582,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123410,"byte_end":8123413,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123418,"byte_end":8123461,"line_start":584,"line_end":584,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123466,"byte_end":8123469,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123474,"byte_end":8123503,"line_start":586,"line_end":586,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123508,"byte_end":8123513,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8123518,"byte_end":8123525,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133114,"byte_end":8133118,"line_start":872,"line_end":872,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8130886,"byte_end":8130932,"line_start":807,"line_end":807,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8130937,"byte_end":8130940,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8130945,"byte_end":8131013,"line_start":809,"line_end":809,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131018,"byte_end":8131050,"line_start":810,"line_end":810,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131055,"byte_end":8131058,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131063,"byte_end":8131133,"line_start":812,"line_end":812,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131138,"byte_end":8131212,"line_start":813,"line_end":813,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131217,"byte_end":8131220,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131225,"byte_end":8131301,"line_start":815,"line_end":815,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131306,"byte_end":8131382,"line_start":816,"line_end":816,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131387,"byte_end":8131455,"line_start":817,"line_end":817,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131460,"byte_end":8131533,"line_start":818,"line_end":818,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131538,"byte_end":8131607,"line_start":819,"line_end":819,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131612,"byte_end":8131657,"line_start":820,"line_end":820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131662,"byte_end":8131665,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131670,"byte_end":8131720,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131725,"byte_end":8131777,"line_start":823,"line_end":823,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131782,"byte_end":8131785,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131790,"byte_end":8131804,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131809,"byte_end":8131812,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131817,"byte_end":8131824,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131829,"byte_end":8131860,"line_start":828,"line_end":828,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131865,"byte_end":8131868,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131873,"byte_end":8131891,"line_start":830,"line_end":830,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131896,"byte_end":8131917,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131922,"byte_end":8131973,"line_start":832,"line_end":832,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8131978,"byte_end":8132015,"line_start":833,"line_end":833,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132020,"byte_end":8132023,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132028,"byte_end":8132061,"line_start":835,"line_end":835,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132066,"byte_end":8132120,"line_start":836,"line_end":836,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132125,"byte_end":8132179,"line_start":837,"line_end":837,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132184,"byte_end":8132195,"line_start":838,"line_end":838,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132200,"byte_end":8132203,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132208,"byte_end":8132241,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132246,"byte_end":8132300,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132305,"byte_end":8132359,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132364,"byte_end":8132375,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132380,"byte_end":8132383,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132388,"byte_end":8132417,"line_start":845,"line_end":845,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132422,"byte_end":8132451,"line_start":846,"line_end":846,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132456,"byte_end":8132461,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132466,"byte_end":8132473,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132478,"byte_end":8132481,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132486,"byte_end":8132502,"line_start":850,"line_end":850,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132507,"byte_end":8132510,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132515,"byte_end":8132522,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132527,"byte_end":8132558,"line_start":853,"line_end":853,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132563,"byte_end":8132566,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132571,"byte_end":8132589,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132594,"byte_end":8132615,"line_start":856,"line_end":856,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132620,"byte_end":8132669,"line_start":857,"line_end":857,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132674,"byte_end":8132677,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132682,"byte_end":8132711,"line_start":859,"line_end":859,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132716,"byte_end":8132745,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132750,"byte_end":8132779,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132784,"byte_end":8132787,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132792,"byte_end":8132829,"line_start":863,"line_end":863,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132834,"byte_end":8132876,"line_start":864,"line_end":864,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132881,"byte_end":8132884,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132889,"byte_end":8132958,"line_start":866,"line_end":866,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132963,"byte_end":8132966,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8132971,"byte_end":8133020,"line_start":868,"line_end":868,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133025,"byte_end":8133074,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133079,"byte_end":8133084,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133089,"byte_end":8133096,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134879,"byte_end":8134887,"line_start":917,"line_end":917,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133220,"byte_end":8133293,"line_start":877,"line_end":877,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133298,"byte_end":8133301,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133306,"byte_end":8133378,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133383,"byte_end":8133407,"line_start":880,"line_end":880,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133412,"byte_end":8133415,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133420,"byte_end":8133500,"line_start":882,"line_end":882,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133505,"byte_end":8133579,"line_start":883,"line_end":883,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133584,"byte_end":8133587,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133592,"byte_end":8133665,"line_start":885,"line_end":885,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133670,"byte_end":8133744,"line_start":886,"line_end":886,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133749,"byte_end":8133752,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133757,"byte_end":8133833,"line_start":888,"line_end":888,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133838,"byte_end":8133914,"line_start":889,"line_end":889,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133919,"byte_end":8133990,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8133995,"byte_end":8134068,"line_start":891,"line_end":891,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134073,"byte_end":8134146,"line_start":892,"line_end":892,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134151,"byte_end":8134222,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134227,"byte_end":8134279,"line_start":894,"line_end":894,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134284,"byte_end":8134287,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134292,"byte_end":8134344,"line_start":896,"line_end":896,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134349,"byte_end":8134409,"line_start":897,"line_end":897,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134414,"byte_end":8134464,"line_start":898,"line_end":898,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134469,"byte_end":8134472,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134477,"byte_end":8134491,"line_start":900,"line_end":900,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134496,"byte_end":8134499,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134504,"byte_end":8134511,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134516,"byte_end":8134547,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134552,"byte_end":8134555,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134560,"byte_end":8134578,"line_start":905,"line_end":905,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134583,"byte_end":8134604,"line_start":906,"line_end":906,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134609,"byte_end":8134659,"line_start":907,"line_end":907,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134664,"byte_end":8134667,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134672,"byte_end":8134712,"line_start":909,"line_end":909,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134717,"byte_end":8134720,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134725,"byte_end":8134754,"line_start":911,"line_end":911,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134759,"byte_end":8134762,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134767,"byte_end":8134810,"line_start":913,"line_end":913,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134815,"byte_end":8134845,"line_start":914,"line_end":914,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134850,"byte_end":8134855,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8134860,"byte_end":8134867,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2297},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2372},{"krate":0,"index":2446},{"krate":0,"index":2451},{"krate":0,"index":2581},{"krate":0,"index":2626},{"krate":0,"index":2676},{"krate":0,"index":2680},{"krate":0,"index":2699}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139160,"byte_end":8139230,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139231,"byte_end":8139254,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139255,"byte_end":8139258,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139259,"byte_end":8139339,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139340,"byte_end":8139418,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139419,"byte_end":8139495,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"! wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139496,"byte_end":8139575,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139576,"byte_end":8139656,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139657,"byte_end":8139728,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"! asynchronous code.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139729,"byte_end":8139751,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139752,"byte_end":8139755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139756,"byte_end":8139833,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"! functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139834,"byte_end":8139905,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"! [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139906,"byte_end":8139971,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"! [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8139972,"byte_end":8140056,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"! the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140057,"byte_end":8140135,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"! [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140136,"byte_end":8140213,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140214,"byte_end":8140292,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"! when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140293,"byte_end":8140372,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! backpressure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140373,"byte_end":8140390,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140391,"byte_end":8140394,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140395,"byte_end":8140398,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140399,"byte_end":8140418,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140419,"byte_end":8140422,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140423,"byte_end":8140489,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140490,"byte_end":8140570,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140571,"byte_end":8140648,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140649,"byte_end":8140652,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140653,"byte_end":8140723,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140724,"byte_end":8140803,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140804,"byte_end":8140827,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140828,"byte_end":8140831,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140832,"byte_end":8140852,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140853,"byte_end":8140856,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140857,"byte_end":8140937,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8140938,"byte_end":8141018,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141019,"byte_end":8141097,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141098,"byte_end":8141170,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141171,"byte_end":8141245,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141246,"byte_end":8141258,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141259,"byte_end":8141262,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! # Communicating between sync and async code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141263,"byte_end":8141310,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141311,"byte_end":8141314,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141315,"byte_end":8141396,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"! are two situations to consider:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141397,"byte_end":8141432,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141433,"byte_end":8141436,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141437,"byte_end":8141517,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"! Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141518,"byte_end":8141599,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"! the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141600,"byte_end":8141674,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"! synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141675,"byte_end":8141756,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"! [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141757,"byte_end":8141802,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141803,"byte_end":8141806,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141807,"byte_end":8141887,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"! the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141888,"byte_end":8141966,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"! use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8141967,"byte_end":8142033,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"! [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142034,"byte_end":8142116,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"! to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142117,"byte_end":8142181,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142182,"byte_end":8142185,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142186,"byte_end":8142227,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"! [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142228,"byte_end":8142273,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"! [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142274,"byte_end":8142327,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"! [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142328,"byte_end":8142383,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"! [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142384,"byte_end":8142447,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"! [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142448,"byte_end":8142513,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"! [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142514,"byte_end":8142573,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"! [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142574,"byte_end":8142637,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"! [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142638,"byte_end":8142698,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"! [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142699,"byte_end":8142744,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"! [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8142745,"byte_end":8142835,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":2384},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8156955,"byte_end":8156961,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":2386}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8156830,"byte_end":8156875,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8156876,"byte_end":8156879,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8156880,"byte_end":8156943,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2387},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157255,"byte_end":8157261,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":2390}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157004,"byte_end":8157050,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157051,"byte_end":8157054,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and are used to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157055,"byte_end":8157128,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157129,"byte_end":8157196,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157197,"byte_end":8157200,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157201,"byte_end":8157243,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157628,"byte_end":8157636,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":2393}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157312,"byte_end":8157360,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157361,"byte_end":8157364,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157365,"byte_end":8157428,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157429,"byte_end":8157432,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157433,"byte_end":8157506,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157507,"byte_end":8157510,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157511,"byte_end":8157616,"line_start":39,"line_end":39,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":2394},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159094,"byte_end":8159101,"line_start":89,"line_end":89,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157708,"byte_end":8157787,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157788,"byte_end":8157810,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157811,"byte_end":8157814,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157815,"byte_end":8157891,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157892,"byte_end":8157972,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8157973,"byte_end":8158052,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158053,"byte_end":8158056,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158057,"byte_end":8158134,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158135,"byte_end":8158160,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158161,"byte_end":8158164,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158165,"byte_end":8158244,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158245,"byte_end":8158293,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158294,"byte_end":8158297,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158298,"byte_end":8158377,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158378,"byte_end":8158453,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158454,"byte_end":8158520,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158521,"byte_end":8158524,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158525,"byte_end":8158537,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158538,"byte_end":8158541,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158542,"byte_end":8158581,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158582,"byte_end":8158585,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158586,"byte_end":8158600,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158601,"byte_end":8158604,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158605,"byte_end":8158616,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158617,"byte_end":8158643,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158644,"byte_end":8158647,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158648,"byte_end":8158666,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158667,"byte_end":8158688,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158689,"byte_end":8158735,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158736,"byte_end":8158739,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158740,"byte_end":8158773,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158774,"byte_end":8158802,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158803,"byte_end":8158853,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158854,"byte_end":8158903,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158904,"byte_end":8158931,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158932,"byte_end":8158949,"line_start":80,"line_end":80,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158950,"byte_end":8158963,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158964,"byte_end":8158975,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158976,"byte_end":8158979,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8158980,"byte_end":8159025,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159026,"byte_end":8159062,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159063,"byte_end":8159072,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159073,"byte_end":8159078,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159079,"byte_end":8159086,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161463,"byte_end":8161467,"line_start":161,"line_end":161,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159701,"byte_end":8159747,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159752,"byte_end":8159755,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159760,"byte_end":8159835,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159840,"byte_end":8159913,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159918,"byte_end":8159994,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159999,"byte_end":8160074,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160079,"byte_end":8160082,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160087,"byte_end":8160160,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160165,"byte_end":8160239,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160244,"byte_end":8160270,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160275,"byte_end":8160278,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160283,"byte_end":8160352,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160357,"byte_end":8160429,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160434,"byte_end":8160486,"line_start":122,"line_end":122,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160491,"byte_end":8160494,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160499,"byte_end":8160525,"line_start":124,"line_end":124,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160530,"byte_end":8160579,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160584,"byte_end":8160587,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160592,"byte_end":8160606,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160611,"byte_end":8160614,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160619,"byte_end":8160626,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160631,"byte_end":8160657,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160662,"byte_end":8160665,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160670,"byte_end":8160688,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160693,"byte_end":8160714,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160719,"byte_end":8160765,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160770,"byte_end":8160773,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160778,"byte_end":8160811,"line_start":136,"line_end":136,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160816,"byte_end":8160860,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160865,"byte_end":8160876,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160881,"byte_end":8160884,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160889,"byte_end":8160940,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160945,"byte_end":8160987,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8160992,"byte_end":8160997,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161002,"byte_end":8161009,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161014,"byte_end":8161017,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161022,"byte_end":8161046,"line_start":145,"line_end":145,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161051,"byte_end":8161054,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161059,"byte_end":8161066,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161071,"byte_end":8161097,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161102,"byte_end":8161105,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161110,"byte_end":8161128,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161133,"byte_end":8161154,"line_start":151,"line_end":151,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161159,"byte_end":8161205,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161210,"byte_end":8161213,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161218,"byte_end":8161258,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161263,"byte_end":8161303,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161308,"byte_end":8161311,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161316,"byte_end":8161367,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161372,"byte_end":8161423,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161428,"byte_end":8161433,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161438,"byte_end":8161445,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163531,"byte_end":8163544,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161588,"byte_end":8161650,"line_start":166,"line_end":166,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161655,"byte_end":8161658,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161663,"byte_end":8161738,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161743,"byte_end":8161816,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161821,"byte_end":8161897,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161902,"byte_end":8161977,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161982,"byte_end":8161985,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8161990,"byte_end":8162063,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162068,"byte_end":8162142,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162147,"byte_end":8162173,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162178,"byte_end":8162181,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162186,"byte_end":8162254,"line_start":177,"line_end":177,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162259,"byte_end":8162334,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162339,"byte_end":8162394,"line_start":179,"line_end":179,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162399,"byte_end":8162402,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162407,"byte_end":8162476,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162481,"byte_end":8162553,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162558,"byte_end":8162619,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162624,"byte_end":8162627,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162632,"byte_end":8162658,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162663,"byte_end":8162712,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162717,"byte_end":8162783,"line_start":187,"line_end":187,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162788,"byte_end":8162791,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162796,"byte_end":8162808,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162813,"byte_end":8162816,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162821,"byte_end":8162888,"line_start":191,"line_end":191,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162893,"byte_end":8162905,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162910,"byte_end":8162913,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162918,"byte_end":8162932,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162937,"byte_end":8162940,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162945,"byte_end":8162952,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162957,"byte_end":8162977,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8162982,"byte_end":8163014,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163019,"byte_end":8163045,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163050,"byte_end":8163053,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163058,"byte_end":8163073,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163078,"byte_end":8163129,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163134,"byte_end":8163137,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163142,"byte_end":8163189,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163194,"byte_end":8163247,"line_start":205,"line_end":205,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163252,"byte_end":8163263,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163268,"byte_end":8163271,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163276,"byte_end":8163298,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163303,"byte_end":8163324,"line_start":209,"line_end":209,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163329,"byte_end":8163363,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163368,"byte_end":8163410,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163415,"byte_end":8163430,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163435,"byte_end":8163468,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163473,"byte_end":8163478,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163483,"byte_end":8163490,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8163495,"byte_end":8163519,"line_start":216,"line_end":216,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165632,"byte_end":8165637,"line_start":277,"line_end":277,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164360,"byte_end":8164423,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164428,"byte_end":8164431,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164436,"byte_end":8164511,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164516,"byte_end":8164588,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164593,"byte_end":8164663,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164668,"byte_end":8164671,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164676,"byte_end":8164747,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164752,"byte_end":8164818,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164823,"byte_end":8164898,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164903,"byte_end":8164932,"line_start":247,"line_end":247,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164937,"byte_end":8164940,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164945,"byte_end":8164967,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164972,"byte_end":8164975,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164980,"byte_end":8164994,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8164999,"byte_end":8165002,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165007,"byte_end":8165014,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165019,"byte_end":8165045,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165050,"byte_end":8165053,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165058,"byte_end":8165076,"line_start":256,"line_end":256,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165081,"byte_end":8165102,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165107,"byte_end":8165152,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165157,"byte_end":8165160,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165165,"byte_end":8165198,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165203,"byte_end":8165229,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165234,"byte_end":8165289,"line_start":262,"line_end":262,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165294,"byte_end":8165325,"line_start":263,"line_end":263,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165330,"byte_end":8165353,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165358,"byte_end":8165371,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165376,"byte_end":8165387,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165392,"byte_end":8165395,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165400,"byte_end":8165419,"line_start":268,"line_end":268,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165424,"byte_end":8165427,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165432,"byte_end":8165479,"line_start":270,"line_end":270,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165484,"byte_end":8165520,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165525,"byte_end":8165534,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165539,"byte_end":8165542,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165547,"byte_end":8165598,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165603,"byte_end":8165608,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165613,"byte_end":8165620,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166478,"byte_end":8166487,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165689,"byte_end":8165743,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165748,"byte_end":8165751,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165756,"byte_end":8165780,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165785,"byte_end":8165788,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165793,"byte_end":8165867,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165872,"byte_end":8165886,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165891,"byte_end":8165953,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8165958,"byte_end":8166032,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166037,"byte_end":8166089,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166094,"byte_end":8166097,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166102,"byte_end":8166174,"line_start":291,"line_end":291,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166179,"byte_end":8166255,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166260,"byte_end":8166336,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166341,"byte_end":8166412,"line_start":294,"line_end":294,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166417,"byte_end":8166466,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168583,"byte_end":8168587,"line_start":361,"line_end":361,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166943,"byte_end":8166994,"line_start":316,"line_end":316,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166999,"byte_end":8167002,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167007,"byte_end":8167083,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167088,"byte_end":8167164,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167169,"byte_end":8167243,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167248,"byte_end":8167323,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167328,"byte_end":8167397,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167402,"byte_end":8167474,"line_start":323,"line_end":323,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167479,"byte_end":8167510,"line_start":324,"line_end":324,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167515,"byte_end":8167518,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167523,"byte_end":8167535,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167540,"byte_end":8167543,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167548,"byte_end":8167621,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167626,"byte_end":8167700,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167705,"byte_end":8167765,"line_start":330,"line_end":330,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167770,"byte_end":8167773,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167778,"byte_end":8167808,"line_start":332,"line_end":332,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167813,"byte_end":8167839,"line_start":333,"line_end":333,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167844,"byte_end":8167847,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167852,"byte_end":8167866,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167871,"byte_end":8167874,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167879,"byte_end":8167949,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167954,"byte_end":8167993,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8167998,"byte_end":8168001,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168006,"byte_end":8168017,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168022,"byte_end":8168048,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168053,"byte_end":8168056,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168061,"byte_end":8168079,"line_start":343,"line_end":343,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168084,"byte_end":8168105,"line_start":344,"line_end":344,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168110,"byte_end":8168154,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168159,"byte_end":8168162,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168167,"byte_end":8168200,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168205,"byte_end":8168233,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168238,"byte_end":8168288,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168293,"byte_end":8168342,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168347,"byte_end":8168374,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168379,"byte_end":8168396,"line_start":352,"line_end":352,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168401,"byte_end":8168414,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168419,"byte_end":8168430,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168435,"byte_end":8168438,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168443,"byte_end":8168488,"line_start":356,"line_end":356,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168493,"byte_end":8168529,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168534,"byte_end":8168543,"line_start":358,"line_end":358,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168548,"byte_end":8168553,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168558,"byte_end":8168565,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169720,"byte_end":8169726,"line_start":402,"line_end":402,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168839,"byte_end":8168883,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168888,"byte_end":8168891,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168896,"byte_end":8168971,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8168976,"byte_end":8169031,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169036,"byte_end":8169039,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169044,"byte_end":8169058,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169063,"byte_end":8169066,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169071,"byte_end":8169078,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169083,"byte_end":8169109,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169114,"byte_end":8169117,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169122,"byte_end":8169140,"line_start":381,"line_end":381,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169145,"byte_end":8169166,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169171,"byte_end":8169218,"line_start":383,"line_end":383,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169223,"byte_end":8169253,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169258,"byte_end":8169288,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169293,"byte_end":8169323,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169328,"byte_end":8169358,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169363,"byte_end":8169396,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169401,"byte_end":8169422,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169427,"byte_end":8169438,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169443,"byte_end":8169446,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169451,"byte_end":8169474,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169479,"byte_end":8169504,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169509,"byte_end":8169534,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169539,"byte_end":8169564,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169569,"byte_end":8169594,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169599,"byte_end":8169623,"line_start":397,"line_end":397,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169628,"byte_end":8169638,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169643,"byte_end":8169680,"line_start":399,"line_end":399,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169685,"byte_end":8169690,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169695,"byte_end":8169702,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171900,"byte_end":8171908,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&self, message: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169780,"byte_end":8169839,"line_start":406,"line_end":406,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169844,"byte_end":8169847,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169852,"byte_end":8169931,"line_start":408,"line_end":408,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8169936,"byte_end":8170011,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170016,"byte_end":8170094,"line_start":410,"line_end":410,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170099,"byte_end":8170141,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170146,"byte_end":8170149,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170154,"byte_end":8170166,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170171,"byte_end":8170174,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170179,"byte_end":8170250,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170255,"byte_end":8170331,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170336,"byte_end":8170358,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170363,"byte_end":8170366,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170371,"byte_end":8170444,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170449,"byte_end":8170523,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170528,"byte_end":8170588,"line_start":421,"line_end":421,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170593,"byte_end":8170596,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170601,"byte_end":8170627,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170632,"byte_end":8170656,"line_start":424,"line_end":424,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170661,"byte_end":8170691,"line_start":425,"line_end":425,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170696,"byte_end":8170699,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170704,"byte_end":8170718,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170723,"byte_end":8170726,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170731,"byte_end":8170738,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170743,"byte_end":8170769,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170774,"byte_end":8170777,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170782,"byte_end":8170800,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170805,"byte_end":8170826,"line_start":433,"line_end":433,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170831,"byte_end":8170877,"line_start":434,"line_end":434,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170882,"byte_end":8170927,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170932,"byte_end":8170962,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170967,"byte_end":8170970,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8170975,"byte_end":8171008,"line_start":438,"line_end":438,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171013,"byte_end":8171052,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171057,"byte_end":8171096,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171101,"byte_end":8171163,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171168,"byte_end":8171179,"line_start":442,"line_end":442,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171184,"byte_end":8171187,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171192,"byte_end":8171225,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171230,"byte_end":8171279,"line_start":445,"line_end":445,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171284,"byte_end":8171331,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171336,"byte_end":8171372,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171377,"byte_end":8171388,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171393,"byte_end":8171396,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171401,"byte_end":8171421,"line_start":450,"line_end":450,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171426,"byte_end":8171465,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171470,"byte_end":8171515,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171520,"byte_end":8171523,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171528,"byte_end":8171567,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171572,"byte_end":8171617,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171622,"byte_end":8171625,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171630,"byte_end":8171679,"line_start":457,"line_end":457,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171684,"byte_end":8171715,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171720,"byte_end":8171782,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171787,"byte_end":8171852,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171857,"byte_end":8171866,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171871,"byte_end":8171876,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8171881,"byte_end":8171888,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175574,"byte_end":8175587,"line_start":576,"line_end":576,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"fn (&self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174502,"byte_end":8174561,"line_start":542,"line_end":542,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174566,"byte_end":8174569,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174574,"byte_end":8174642,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174647,"byte_end":8174715,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174720,"byte_end":8174787,"line_start":546,"line_end":546,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174792,"byte_end":8174795,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174800,"byte_end":8174868,"line_start":548,"line_end":548,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174873,"byte_end":8174876,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174881,"byte_end":8174893,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174898,"byte_end":8174901,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174906,"byte_end":8174973,"line_start":552,"line_end":552,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174978,"byte_end":8174990,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8174995,"byte_end":8174998,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175003,"byte_end":8175017,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175022,"byte_end":8175025,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175030,"byte_end":8175037,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175042,"byte_end":8175062,"line_start":558,"line_end":558,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175067,"byte_end":8175099,"line_start":559,"line_end":559,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175104,"byte_end":8175130,"line_start":560,"line_end":560,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175135,"byte_end":8175138,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175143,"byte_end":8175158,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175163,"byte_end":8175213,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175218,"byte_end":8175221,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175226,"byte_end":8175273,"line_start":565,"line_end":565,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175278,"byte_end":8175320,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175325,"byte_end":8175336,"line_start":567,"line_end":567,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175341,"byte_end":8175344,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175349,"byte_end":8175402,"line_start":569,"line_end":569,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175407,"byte_end":8175457,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175462,"byte_end":8175473,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175478,"byte_end":8175511,"line_start":572,"line_end":572,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175516,"byte_end":8175521,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175526,"byte_end":8175533,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175538,"byte_end":8175562,"line_start":575,"line_end":575,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176278,"byte_end":8176287,"line_start":598,"line_end":598,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175696,"byte_end":8175760,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175765,"byte_end":8175835,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175840,"byte_end":8175851,"line_start":582,"line_end":582,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175856,"byte_end":8175859,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175864,"byte_end":8175909,"line_start":584,"line_end":584,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175914,"byte_end":8175973,"line_start":585,"line_end":585,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175978,"byte_end":8175981,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175986,"byte_end":8175993,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8175998,"byte_end":8176054,"line_start":588,"line_end":588,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176059,"byte_end":8176088,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176093,"byte_end":8176096,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176101,"byte_end":8176126,"line_start":591,"line_end":591,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176131,"byte_end":8176161,"line_start":592,"line_end":592,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176166,"byte_end":8176169,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176174,"byte_end":8176187,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176192,"byte_end":8176220,"line_start":595,"line_end":595,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176225,"byte_end":8176254,"line_start":596,"line_end":596,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176259,"byte_end":8176266,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177678,"byte_end":8177685,"line_start":640,"line_end":640,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"fn (&self) -> Result<Permit<'_, T>, SendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176346,"byte_end":8176413,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176418,"byte_end":8176463,"line_start":603,"line_end":603,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176468,"byte_end":8176471,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176476,"byte_end":8176551,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176556,"byte_end":8176631,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176636,"byte_end":8176709,"line_start":607,"line_end":607,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176714,"byte_end":8176789,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176794,"byte_end":8176816,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176821,"byte_end":8176824,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176829,"byte_end":8176905,"line_start":611,"line_end":611,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176910,"byte_end":8176929,"line_start":612,"line_end":612,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176934,"byte_end":8176937,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176942,"byte_end":8176964,"line_start":614,"line_end":614,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8176969,"byte_end":8176995,"line_start":615,"line_end":615,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177000,"byte_end":8177003,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177008,"byte_end":8177022,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177027,"byte_end":8177030,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177035,"byte_end":8177042,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177047,"byte_end":8177073,"line_start":620,"line_end":620,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177078,"byte_end":8177081,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177086,"byte_end":8177104,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177109,"byte_end":8177130,"line_start":623,"line_end":623,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177135,"byte_end":8177179,"line_start":624,"line_end":624,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177184,"byte_end":8177187,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177192,"byte_end":8177219,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177224,"byte_end":8177273,"line_start":627,"line_end":627,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177278,"byte_end":8177281,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177286,"byte_end":8177352,"line_start":629,"line_end":629,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177357,"byte_end":8177387,"line_start":630,"line_end":630,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177392,"byte_end":8177435,"line_start":631,"line_end":631,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177440,"byte_end":8177443,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177448,"byte_end":8177489,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177494,"byte_end":8177519,"line_start":634,"line_end":634,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177524,"byte_end":8177527,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177532,"byte_end":8177583,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177588,"byte_end":8177638,"line_start":637,"line_end":637,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177643,"byte_end":8177648,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177653,"byte_end":8177660,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179448,"byte_end":8179459,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"fn (&self) -> Result<Permit<'_, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8177927,"byte_end":8178006,"line_start":649,"line_end":649,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178011,"byte_end":8178025,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178030,"byte_end":8178033,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178038,"byte_end":8178118,"line_start":652,"line_end":652,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178123,"byte_end":8178208,"line_start":653,"line_end":653,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178213,"byte_end":8178295,"line_start":654,"line_end":654,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] execpt it does not await for the slot to become available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178300,"byte_end":8178374,"line_start":655,"line_end":655,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178379,"byte_end":8178382,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178387,"byte_end":8178463,"line_start":657,"line_end":657,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178468,"byte_end":8178487,"line_start":658,"line_end":658,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178492,"byte_end":8178495,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178500,"byte_end":8178522,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178527,"byte_end":8178553,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178558,"byte_end":8178590,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178595,"byte_end":8178598,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178603,"byte_end":8178617,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178622,"byte_end":8178625,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178630,"byte_end":8178637,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178642,"byte_end":8178668,"line_start":667,"line_end":667,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178673,"byte_end":8178676,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178681,"byte_end":8178699,"line_start":669,"line_end":669,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178704,"byte_end":8178725,"line_start":670,"line_end":670,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178730,"byte_end":8178774,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178779,"byte_end":8178782,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178787,"byte_end":8178814,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178819,"byte_end":8178866,"line_start":674,"line_end":674,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178871,"byte_end":8178874,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178879,"byte_end":8178945,"line_start":676,"line_end":676,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178950,"byte_end":8178980,"line_start":677,"line_end":677,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8178985,"byte_end":8179028,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179033,"byte_end":8179036,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179041,"byte_end":8179105,"line_start":680,"line_end":680,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179110,"byte_end":8179155,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179160,"byte_end":8179203,"line_start":682,"line_end":682,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179208,"byte_end":8179211,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179216,"byte_end":8179257,"line_start":684,"line_end":684,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179262,"byte_end":8179287,"line_start":685,"line_end":685,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179292,"byte_end":8179295,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179300,"byte_end":8179351,"line_start":687,"line_end":687,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179356,"byte_end":8179406,"line_start":688,"line_end":688,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179411,"byte_end":8179414,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179419,"byte_end":8179424,"line_start":690,"line_end":690,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179429,"byte_end":8179436,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181176,"byte_end":8181180,"line_start":753,"line_end":753,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"fn (self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180103,"byte_end":8180149,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180154,"byte_end":8180157,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180162,"byte_end":8180237,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180242,"byte_end":8180316,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180321,"byte_end":8180395,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180400,"byte_end":8180448,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180453,"byte_end":8180456,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180461,"byte_end":8180501,"line_start":728,"line_end":728,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180506,"byte_end":8180509,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180514,"byte_end":8180528,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180533,"byte_end":8180536,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180541,"byte_end":8180548,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180553,"byte_end":8180579,"line_start":733,"line_end":733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180584,"byte_end":8180587,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180592,"byte_end":8180610,"line_start":735,"line_end":735,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180615,"byte_end":8180636,"line_start":736,"line_end":736,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180641,"byte_end":8180685,"line_start":737,"line_end":737,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180690,"byte_end":8180693,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180698,"byte_end":8180725,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180730,"byte_end":8180779,"line_start":740,"line_end":740,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180784,"byte_end":8180787,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180792,"byte_end":8180858,"line_start":742,"line_end":742,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180863,"byte_end":8180893,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180898,"byte_end":8180941,"line_start":744,"line_end":744,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180946,"byte_end":8180949,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180954,"byte_end":8180993,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180998,"byte_end":8181023,"line_start":747,"line_end":747,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181028,"byte_end":8181031,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181036,"byte_end":8181087,"line_start":749,"line_end":749,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181092,"byte_end":8181142,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181147,"byte_end":8181152,"line_start":751,"line_end":751,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181157,"byte_end":8181164,"line_start":752,"line_end":752,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203432,"byte_end":8203447,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":2636}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203274,"byte_end":8203328,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203329,"byte_end":8203332,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203333,"byte_end":8203365,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203366,"byte_end":8203420,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2643},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204240,"byte_end":8204257,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":2645}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203864,"byte_end":8203921,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203922,"byte_end":8203925,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203926,"byte_end":8203958,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203959,"byte_end":8204013,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204014,"byte_end":8204017,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204018,"byte_end":8204100,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204101,"byte_end":8204104,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204105,"byte_end":8204228,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":2649},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205089,"byte_end":8205106,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204556,"byte_end":8204632,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204633,"byte_end":8204664,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204665,"byte_end":8204668,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204669,"byte_end":8204749,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204750,"byte_end":8204829,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204830,"byte_end":8204843,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204844,"byte_end":8204847,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204848,"byte_end":8204927,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204928,"byte_end":8205004,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205005,"byte_end":8205081,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206585,"byte_end":8206589,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205515,"byte_end":8205561,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205566,"byte_end":8205569,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205574,"byte_end":8205646,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205651,"byte_end":8205705,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205710,"byte_end":8205713,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205718,"byte_end":8205732,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205737,"byte_end":8205740,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205745,"byte_end":8205752,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205757,"byte_end":8205783,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205788,"byte_end":8205791,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205796,"byte_end":8205814,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205819,"byte_end":8205840,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205845,"byte_end":8205898,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205903,"byte_end":8205906,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205911,"byte_end":8205944,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205949,"byte_end":8205987,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205992,"byte_end":8206003,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206008,"byte_end":8206011,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206016,"byte_end":8206067,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206072,"byte_end":8206114,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206119,"byte_end":8206124,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206129,"byte_end":8206136,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206141,"byte_end":8206144,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206149,"byte_end":8206173,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206178,"byte_end":8206181,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206186,"byte_end":8206193,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206198,"byte_end":8206224,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206229,"byte_end":8206232,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206237,"byte_end":8206255,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206260,"byte_end":8206281,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206286,"byte_end":8206339,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206344,"byte_end":8206347,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206352,"byte_end":8206386,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206391,"byte_end":8206425,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206430,"byte_end":8206433,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206438,"byte_end":8206489,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206494,"byte_end":8206545,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206550,"byte_end":8206555,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206560,"byte_end":8206567,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207396,"byte_end":8207409,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206711,"byte_end":8206773,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206778,"byte_end":8206781,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206786,"byte_end":8206798,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206803,"byte_end":8206806,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206811,"byte_end":8206878,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206883,"byte_end":8206895,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206900,"byte_end":8206903,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206908,"byte_end":8206922,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206927,"byte_end":8206930,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206935,"byte_end":8206942,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206947,"byte_end":8206967,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8206972,"byte_end":8206998,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207003,"byte_end":8207006,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207011,"byte_end":8207029,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207034,"byte_end":8207055,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207060,"byte_end":8207119,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207124,"byte_end":8207127,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207132,"byte_end":8207179,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207184,"byte_end":8207237,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207242,"byte_end":8207253,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207258,"byte_end":8207261,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207266,"byte_end":8207294,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207299,"byte_end":8207333,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207338,"byte_end":8207343,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207348,"byte_end":8207355,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207360,"byte_end":8207384,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207729,"byte_end":8207734,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207492,"byte_end":8207556,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207561,"byte_end":8207564,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207569,"byte_end":8207644,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207649,"byte_end":8207717,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208575,"byte_end":8208584,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207786,"byte_end":8207840,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207845,"byte_end":8207848,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207853,"byte_end":8207877,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207882,"byte_end":8207885,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207890,"byte_end":8207964,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207969,"byte_end":8207983,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8207988,"byte_end":8208050,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208055,"byte_end":8208129,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208134,"byte_end":8208186,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208191,"byte_end":8208194,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208199,"byte_end":8208271,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208276,"byte_end":8208352,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208357,"byte_end":8208433,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208438,"byte_end":8208509,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208514,"byte_end":8208563,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209512,"byte_end":8209516,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, message: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208824,"byte_end":8208898,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208903,"byte_end":8208906,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208911,"byte_end":8208996,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209001,"byte_end":8209082,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209087,"byte_end":8209155,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209160,"byte_end":8209163,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209168,"byte_end":8209241,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209246,"byte_end":8209317,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209322,"byte_end":8209399,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209404,"byte_end":8209407,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209412,"byte_end":8209451,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8209456,"byte_end":8209500,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211445,"byte_end":8211451,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210554,"byte_end":8210598,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210603,"byte_end":8210606,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210611,"byte_end":8210686,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210691,"byte_end":8210746,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210751,"byte_end":8210754,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210759,"byte_end":8210773,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210778,"byte_end":8210781,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210786,"byte_end":8210793,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210798,"byte_end":8210824,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210829,"byte_end":8210832,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210837,"byte_end":8210855,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210860,"byte_end":8210881,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210886,"byte_end":8210942,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210947,"byte_end":8210977,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8210982,"byte_end":8211012,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211017,"byte_end":8211047,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211052,"byte_end":8211082,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211087,"byte_end":8211120,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211125,"byte_end":8211146,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211151,"byte_end":8211162,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211167,"byte_end":8211170,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211175,"byte_end":8211198,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211203,"byte_end":8211228,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211233,"byte_end":8211258,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211263,"byte_end":8211288,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211293,"byte_end":8211318,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211323,"byte_end":8211347,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211352,"byte_end":8211362,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211410,"byte_end":8211415,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211420,"byte_end":8211427,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212148,"byte_end":8212157,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211504,"byte_end":8211568,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211573,"byte_end":8211622,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211627,"byte_end":8211677,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211682,"byte_end":8211685,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211690,"byte_end":8211753,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211758,"byte_end":8211835,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211840,"byte_end":8211843,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211848,"byte_end":8211855,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211860,"byte_end":8211924,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211929,"byte_end":8211958,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211963,"byte_end":8211966,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8211971,"byte_end":8211996,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212001,"byte_end":8212031,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212036,"byte_end":8212039,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212044,"byte_end":8212057,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212062,"byte_end":8212090,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212095,"byte_end":8212124,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8212129,"byte_end":8212136,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2680},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":3365},{"krate":0,"index":3369},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":3372},{"krate":0,"index":3380},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":2696},{"krate":0,"index":2698}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212214,"byte_end":8212237,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3365},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212341,"byte_end":8212350,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212277,"byte_end":8212312,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212903,"byte_end":8212907,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212771,"byte_end":8212839,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212844,"byte_end":8212898,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3377},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213008,"byte_end":8213014,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":3372},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212917,"byte_end":8212986,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212991,"byte_end":8213003,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":3372},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212749,"byte_end":8212761,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"TrySendError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":3374},{"krate":0,"index":3377}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212603,"byte_end":8212674,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212675,"byte_end":8212722,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3383},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213652,"byte_end":8213661,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213590,"byte_end":8213623,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220279,"byte_end":8220284,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216026,"byte_end":8216064,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216065,"byte_end":8216068,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216069,"byte_end":8216147,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216148,"byte_end":8216224,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216225,"byte_end":8216249,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216250,"byte_end":8216253,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216254,"byte_end":8216295,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216296,"byte_end":8216299,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216300,"byte_end":8216380,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216381,"byte_end":8216460,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216461,"byte_end":8216524,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216525,"byte_end":8216528,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216529,"byte_end":8216608,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216609,"byte_end":8216689,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216690,"byte_end":8216768,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216769,"byte_end":8216848,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216849,"byte_end":8216927,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8216928,"byte_end":8217008,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217009,"byte_end":8217022,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217023,"byte_end":8217026,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217027,"byte_end":8217106,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217107,"byte_end":8217183,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217184,"byte_end":8217261,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217262,"byte_end":8217295,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217296,"byte_end":8217299,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217300,"byte_end":8217375,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217376,"byte_end":8217454,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217455,"byte_end":8217497,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217498,"byte_end":8217501,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217502,"byte_end":8217529,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217530,"byte_end":8217578,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217579,"byte_end":8217657,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217658,"byte_end":8217661,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217662,"byte_end":8217677,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217678,"byte_end":8217681,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217682,"byte_end":8217700,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217701,"byte_end":8217728,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217729,"byte_end":8217752,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217753,"byte_end":8217756,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217757,"byte_end":8217775,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217776,"byte_end":8217797,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217798,"byte_end":8217842,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217843,"byte_end":8217882,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217883,"byte_end":8217886,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217887,"byte_end":8217920,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217921,"byte_end":8217967,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217968,"byte_end":8217991,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8217992,"byte_end":8218003,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218004,"byte_end":8218007,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218008,"byte_end":8218050,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218051,"byte_end":8218070,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218071,"byte_end":8218076,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218077,"byte_end":8218084,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218085,"byte_end":8218088,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218089,"byte_end":8218092,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218093,"byte_end":8218111,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218112,"byte_end":8218139,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218140,"byte_end":8218163,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218164,"byte_end":8218167,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218168,"byte_end":8218186,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218187,"byte_end":8218208,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218209,"byte_end":8218253,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218254,"byte_end":8218257,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218258,"byte_end":8218281,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218282,"byte_end":8218328,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218329,"byte_end":8218366,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218367,"byte_end":8218399,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218400,"byte_end":8218457,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218458,"byte_end":8218489,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218490,"byte_end":8218531,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218532,"byte_end":8218549,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218550,"byte_end":8218565,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218566,"byte_end":8218575,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218576,"byte_end":8218579,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218580,"byte_end":8218594,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218595,"byte_end":8218637,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218638,"byte_end":8218660,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218661,"byte_end":8218674,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218675,"byte_end":8218684,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218685,"byte_end":8218719,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218720,"byte_end":8218725,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218726,"byte_end":8218733,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218734,"byte_end":8218810,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218811,"byte_end":8218884,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218885,"byte_end":8218900,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218901,"byte_end":8218976,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8218977,"byte_end":8219053,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219054,"byte_end":8219106,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219107,"byte_end":8219110,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219111,"byte_end":8219189,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219190,"byte_end":8219270,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219271,"byte_end":8219347,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219348,"byte_end":8219425,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219426,"byte_end":8219504,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219505,"byte_end":8219585,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219586,"byte_end":8219666,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219667,"byte_end":8219736,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219737,"byte_end":8219740,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219741,"byte_end":8219820,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219821,"byte_end":8219900,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219901,"byte_end":8219979,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8219980,"byte_end":8220041,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220042,"byte_end":8220045,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220046,"byte_end":8220073,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220074,"byte_end":8220111,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220112,"byte_end":8220146,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220147,"byte_end":8220196,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220197,"byte_end":8220234,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220235,"byte_end":8220267,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2713},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220713,"byte_end":8220723,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":2716}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220352,"byte_end":8220383,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220384,"byte_end":8220387,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220388,"byte_end":8220467,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220468,"byte_end":8220543,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220544,"byte_end":8220577,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220578,"byte_end":8220581,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220582,"byte_end":8220660,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220661,"byte_end":8220701,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2717},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221511,"byte_end":8221526,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2719}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220768,"byte_end":8220806,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220807,"byte_end":8220810,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220811,"byte_end":8220892,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220893,"byte_end":8220973,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8220974,"byte_end":8221048,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221049,"byte_end":8221110,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221111,"byte_end":8221114,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221115,"byte_end":8221194,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221195,"byte_end":8221274,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221275,"byte_end":8221343,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221344,"byte_end":8221347,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221348,"byte_end":8221426,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221427,"byte_end":8221467,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221468,"byte_end":8221471,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221472,"byte_end":8221499,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3388},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222615,"byte_end":8222627,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222026,"byte_end":8222099,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222100,"byte_end":8222136,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222137,"byte_end":8222140,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222141,"byte_end":8222219,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222220,"byte_end":8222223,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222224,"byte_end":8222301,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222302,"byte_end":8222329,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222330,"byte_end":8222333,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222334,"byte_end":8222411,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222412,"byte_end":8222433,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222434,"byte_end":8222437,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222438,"byte_end":8222478,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222479,"byte_end":8222531,"line_start":176,"line_end":176,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222532,"byte_end":8222586,"line_start":177,"line_end":177,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223854,"byte_end":8223857,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223651,"byte_end":8223709,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223714,"byte_end":8223717,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223722,"byte_end":8223736,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223741,"byte_end":8223744,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223749,"byte_end":8223756,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223761,"byte_end":8223788,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223793,"byte_end":8223796,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223801,"byte_end":8223830,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223835,"byte_end":8223842,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225015,"byte_end":8225019,"line_start":271,"line_end":271,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224555,"byte_end":8224601,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224606,"byte_end":8224652,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224657,"byte_end":8224728,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224733,"byte_end":8224736,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224741,"byte_end":8224755,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224760,"byte_end":8224763,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224768,"byte_end":8224775,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224780,"byte_end":8224807,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224812,"byte_end":8224815,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224820,"byte_end":8224838,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224843,"byte_end":8224864,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224869,"byte_end":8224903,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224908,"byte_end":8224911,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224916,"byte_end":8224955,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224960,"byte_end":8224975,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224980,"byte_end":8224985,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8224990,"byte_end":8224997,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226046,"byte_end":8226056,"line_start":302,"line_end":302,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn (self: Arc<Self>) -> OwnedMutexGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225125,"byte_end":8225199,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225204,"byte_end":8225271,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225276,"byte_end":8225300,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225305,"byte_end":8225308,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225313,"byte_end":8225386,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225391,"byte_end":8225464,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225469,"byte_end":8225540,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225545,"byte_end":8225620,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225625,"byte_end":8225667,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225672,"byte_end":8225675,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225680,"byte_end":8225694,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225699,"byte_end":8225702,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225707,"byte_end":8225714,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225719,"byte_end":8225746,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225751,"byte_end":8225774,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225779,"byte_end":8225782,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225787,"byte_end":8225805,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225810,"byte_end":8225831,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225836,"byte_end":8225880,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225885,"byte_end":8225888,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225893,"byte_end":8225946,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225951,"byte_end":8225966,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225971,"byte_end":8225976,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225981,"byte_end":8225988,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8225993,"byte_end":8225996,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226001,"byte_end":8226028,"line_start":301,"line_end":301,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226933,"byte_end":8226941,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Result<MutexGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226465,"byte_end":8226534,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226539,"byte_end":8226581,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226586,"byte_end":8226589,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226594,"byte_end":8226628,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226633,"byte_end":8226647,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226652,"byte_end":8226655,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226660,"byte_end":8226667,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226672,"byte_end":8226699,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226704,"byte_end":8226767,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226772,"byte_end":8226775,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226780,"byte_end":8226810,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226815,"byte_end":8226818,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226823,"byte_end":8226853,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226858,"byte_end":8226880,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226885,"byte_end":8226897,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226902,"byte_end":8226909,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8226914,"byte_end":8226921,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227621,"byte_end":8227628,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227150,"byte_end":8227205,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227210,"byte_end":8227213,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227218,"byte_end":8227293,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227298,"byte_end":8227372,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227377,"byte_end":8227380,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227385,"byte_end":8227399,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227404,"byte_end":8227407,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227412,"byte_end":8227419,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227424,"byte_end":8227451,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227456,"byte_end":8227459,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227464,"byte_end":8227479,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227484,"byte_end":8227522,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227527,"byte_end":8227530,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227535,"byte_end":8227567,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227572,"byte_end":8227587,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227592,"byte_end":8227597,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227602,"byte_end":8227609,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228709,"byte_end":8228723,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn (self: Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227797,"byte_end":8227871,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227876,"byte_end":8227913,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227918,"byte_end":8227921,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227926,"byte_end":8227994,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8227999,"byte_end":8228072,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228077,"byte_end":8228153,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228158,"byte_end":8228232,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228237,"byte_end":8228285,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228290,"byte_end":8228293,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228298,"byte_end":8228332,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228337,"byte_end":8228364,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228369,"byte_end":8228383,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228388,"byte_end":8228391,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228396,"byte_end":8228403,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228408,"byte_end":8228435,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228440,"byte_end":8228463,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228468,"byte_end":8228531,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228536,"byte_end":8228539,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228544,"byte_end":8228584,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228589,"byte_end":8228592,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228597,"byte_end":8228641,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228646,"byte_end":8228668,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228673,"byte_end":8228685,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228690,"byte_end":8228697,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229281,"byte_end":8229291,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8228948,"byte_end":8229002,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229007,"byte_end":8229021,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229026,"byte_end":8229029,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229034,"byte_end":8229041,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229046,"byte_end":8229073,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229078,"byte_end":8229081,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229086,"byte_end":8229104,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229109,"byte_end":8229130,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229135,"byte_end":8229169,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229174,"byte_end":8229177,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229182,"byte_end":8229217,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229222,"byte_end":8229247,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229252,"byte_end":8229257,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229262,"byte_end":8229269,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3393},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8235195,"byte_end":8235201,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":3395}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232352,"byte_end":8232388,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232389,"byte_end":8232392,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232393,"byte_end":8232469,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232470,"byte_end":8232550,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232551,"byte_end":8232592,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232593,"byte_end":8232596,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232597,"byte_end":8232671,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232672,"byte_end":8232757,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232758,"byte_end":8232824,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232825,"byte_end":8232828,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232829,"byte_end":8232887,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232888,"byte_end":8232968,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8232969,"byte_end":8233049,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233050,"byte_end":8233133,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233134,"byte_end":8233184,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233185,"byte_end":8233188,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233189,"byte_end":8233273,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233274,"byte_end":8233349,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233350,"byte_end":8233420,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233421,"byte_end":8233424,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233425,"byte_end":8233509,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233510,"byte_end":8233583,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233584,"byte_end":8233655,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233656,"byte_end":8233659,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233660,"byte_end":8233674,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233675,"byte_end":8233678,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233679,"byte_end":8233695,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233696,"byte_end":8233699,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233700,"byte_end":8233707,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233708,"byte_end":8233736,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233737,"byte_end":8233760,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233761,"byte_end":8233764,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233765,"byte_end":8233783,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233784,"byte_end":8233805,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233806,"byte_end":8233851,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233852,"byte_end":8233889,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233890,"byte_end":8233893,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233894,"byte_end":8233927,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233928,"byte_end":8233965,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8233966,"byte_end":8234012,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234013,"byte_end":8234024,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234025,"byte_end":8234028,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234029,"byte_end":8234070,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234071,"byte_end":8234099,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234100,"byte_end":8234105,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234106,"byte_end":8234113,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234114,"byte_end":8234117,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234118,"byte_end":8234143,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234144,"byte_end":8234147,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234148,"byte_end":8234155,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234156,"byte_end":8234184,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234185,"byte_end":8234188,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234189,"byte_end":8234224,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234225,"byte_end":8234250,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234251,"byte_end":8234254,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234255,"byte_end":8234278,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234279,"byte_end":8234314,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234315,"byte_end":8234338,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234339,"byte_end":8234344,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234345,"byte_end":8234348,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234349,"byte_end":8234373,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234374,"byte_end":8234412,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234413,"byte_end":8234452,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234453,"byte_end":8234487,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234488,"byte_end":8234491,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234492,"byte_end":8234547,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234548,"byte_end":8234585,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234586,"byte_end":8234595,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234596,"byte_end":8234599,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234600,"byte_end":8234639,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234640,"byte_end":8234658,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234659,"byte_end":8234690,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234691,"byte_end":8234769,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234770,"byte_end":8234803,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234804,"byte_end":8234821,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234822,"byte_end":8234825,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234826,"byte_end":8234876,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234877,"byte_end":8234922,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234923,"byte_end":8234936,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234937,"byte_end":8234946,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234947,"byte_end":8234952,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234953,"byte_end":8234960,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234961,"byte_end":8234964,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234965,"byte_end":8234994,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8234995,"byte_end":8235036,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8235037,"byte_end":8235081,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8235082,"byte_end":8235124,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8235125,"byte_end":8235166,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8236051,"byte_end":8236059,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8235985,"byte_end":8236022,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237400,"byte_end":8237403,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"fn () -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237196,"byte_end":8237252,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237257,"byte_end":8237260,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237265,"byte_end":8237279,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237284,"byte_end":8237287,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237292,"byte_end":8237299,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237304,"byte_end":8237332,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237337,"byte_end":8237340,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237345,"byte_end":8237376,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237381,"byte_end":8237388,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239104,"byte_end":8239112,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"fn (&self) -> Notified<'_>","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238057,"byte_end":8238085,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238090,"byte_end":8238093,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238098,"byte_end":8238116,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238121,"byte_end":8238124,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238129,"byte_end":8238142,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238147,"byte_end":8238176,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238181,"byte_end":8238188,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238193,"byte_end":8238196,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238201,"byte_end":8238277,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238282,"byte_end":8238360,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238365,"byte_end":8238440,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238445,"byte_end":8238518,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238523,"byte_end":8238526,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238531,"byte_end":8238571,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238576,"byte_end":8238579,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238584,"byte_end":8238598,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238603,"byte_end":8238606,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238611,"byte_end":8238618,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238623,"byte_end":8238651,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238656,"byte_end":8238679,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238684,"byte_end":8238687,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238692,"byte_end":8238710,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238715,"byte_end":8238736,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238741,"byte_end":8238786,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238791,"byte_end":8238828,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238833,"byte_end":8238836,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238841,"byte_end":8238874,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238879,"byte_end":8238916,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238921,"byte_end":8238967,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238972,"byte_end":8238983,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238988,"byte_end":8238991,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8238996,"byte_end":8239037,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239042,"byte_end":8239070,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239075,"byte_end":8239080,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239085,"byte_end":8239092,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240808,"byte_end":8240818,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239637,"byte_end":8239664,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239669,"byte_end":8239672,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239677,"byte_end":8239748,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239753,"byte_end":8239821,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239826,"byte_end":8239902,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239907,"byte_end":8239952,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239957,"byte_end":8239960,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8239965,"byte_end":8240039,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240044,"byte_end":8240122,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240127,"byte_end":8240199,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240204,"byte_end":8240218,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240223,"byte_end":8240226,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240231,"byte_end":8240275,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240280,"byte_end":8240283,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240288,"byte_end":8240302,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240307,"byte_end":8240310,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240315,"byte_end":8240322,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240327,"byte_end":8240355,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240360,"byte_end":8240383,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240388,"byte_end":8240391,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240396,"byte_end":8240414,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240419,"byte_end":8240440,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240445,"byte_end":8240490,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240495,"byte_end":8240532,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240537,"byte_end":8240540,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240545,"byte_end":8240578,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240583,"byte_end":8240620,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240625,"byte_end":8240671,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240676,"byte_end":8240687,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240692,"byte_end":8240695,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240700,"byte_end":8240741,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240746,"byte_end":8240774,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240779,"byte_end":8240784,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8240789,"byte_end":8240796,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243151,"byte_end":8243165,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242061,"byte_end":8242091,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242096,"byte_end":8242099,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242104,"byte_end":8242174,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242179,"byte_end":8242245,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242250,"byte_end":8242319,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242324,"byte_end":8242395,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242400,"byte_end":8242476,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242481,"byte_end":8242484,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242489,"byte_end":8242503,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242508,"byte_end":8242511,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242516,"byte_end":8242523,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242528,"byte_end":8242556,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242561,"byte_end":8242584,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242589,"byte_end":8242592,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242597,"byte_end":8242615,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242620,"byte_end":8242641,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242646,"byte_end":8242691,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242696,"byte_end":8242733,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242738,"byte_end":8242741,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242746,"byte_end":8242788,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242793,"byte_end":8242835,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242840,"byte_end":8242843,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242848,"byte_end":8242894,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242899,"byte_end":8242945,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242950,"byte_end":8242987,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8242992,"byte_end":8243003,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243008,"byte_end":8243011,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243016,"byte_end":8243040,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243045,"byte_end":8243069,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243074,"byte_end":8243117,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243122,"byte_end":8243127,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8243132,"byte_end":8243139,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2853},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":2872},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":3470},{"krate":0,"index":3474},{"krate":0,"index":3473},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2916},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2948},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2970}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8257467,"byte_end":8257537,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3433},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258016,"byte_end":8258022,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3435}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8257869,"byte_end":8257916,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8257917,"byte_end":8257920,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8257921,"byte_end":8257987,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3439},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258214,"byte_end":8258222,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3441}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258065,"byte_end":8258114,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258115,"byte_end":8258118,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258119,"byte_end":8258185,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":2872},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258273,"byte_end":8258278,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":3445},{"krate":0,"index":3455},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3457},{"krate":0,"index":3468},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2879}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258285,"byte_end":8258308,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258450,"byte_end":8258459,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258333,"byte_end":8258398,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3458},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258681,"byte_end":8258686,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258614,"byte_end":8258672,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3460},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258775,"byte_end":8258781,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258697,"byte_end":8258766,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":3457},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258591,"byte_end":8258603,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3460}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258481,"byte_end":8258541,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260778,"byte_end":8260785,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259963,"byte_end":8260042,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260043,"byte_end":8260053,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260054,"byte_end":8260057,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260058,"byte_end":8260134,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260135,"byte_end":8260213,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260214,"byte_end":8260260,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260261,"byte_end":8260264,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260265,"byte_end":8260311,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260312,"byte_end":8260315,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260316,"byte_end":8260330,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260331,"byte_end":8260334,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260335,"byte_end":8260342,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260343,"byte_end":8260372,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260373,"byte_end":8260376,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260377,"byte_end":8260395,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260396,"byte_end":8260417,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260418,"byte_end":8260460,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260461,"byte_end":8260464,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260465,"byte_end":8260498,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260499,"byte_end":8260539,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260540,"byte_end":8260589,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260590,"byte_end":8260603,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260604,"byte_end":8260615,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260616,"byte_end":8260619,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260620,"byte_end":8260644,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260645,"byte_end":8260692,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260693,"byte_end":8260746,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260747,"byte_end":8260756,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260757,"byte_end":8260762,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8260763,"byte_end":8260770,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262796,"byte_end":8262800,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (mut self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261225,"byte_end":8261300,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261305,"byte_end":8261321,"line_start":144,"line_end":144,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261326,"byte_end":8261329,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261334,"byte_end":8261413,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261418,"byte_end":8261493,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261498,"byte_end":8261574,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261579,"byte_end":8261651,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261656,"byte_end":8261669,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261674,"byte_end":8261677,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261682,"byte_end":8261758,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261763,"byte_end":8261839,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261844,"byte_end":8261916,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261921,"byte_end":8261994,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261999,"byte_end":8262073,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262078,"byte_end":8262150,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262155,"byte_end":8262192,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262197,"byte_end":8262200,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262205,"byte_end":8262219,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262224,"byte_end":8262227,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262232,"byte_end":8262264,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262269,"byte_end":8262272,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262277,"byte_end":8262284,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262289,"byte_end":8262318,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262323,"byte_end":8262326,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262331,"byte_end":8262349,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262354,"byte_end":8262375,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262380,"byte_end":8262422,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262427,"byte_end":8262430,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262435,"byte_end":8262468,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262473,"byte_end":8262513,"line_start":172,"line_end":172,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262518,"byte_end":8262567,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262572,"byte_end":8262585,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262590,"byte_end":8262601,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262606,"byte_end":8262609,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262614,"byte_end":8262638,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262643,"byte_end":8262690,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262695,"byte_end":8262748,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262753,"byte_end":8262762,"line_start":180,"line_end":180,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262767,"byte_end":8262772,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8262777,"byte_end":8262784,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265164,"byte_end":8265170,"line_start":266,"line_end":266,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263159,"byte_end":8263217,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263222,"byte_end":8263225,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263230,"byte_end":8263304,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263309,"byte_end":8263343,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263348,"byte_end":8263351,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263356,"byte_end":8263421,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263426,"byte_end":8263498,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263503,"byte_end":8263506,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263511,"byte_end":8263523,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263528,"byte_end":8263531,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263536,"byte_end":8263584,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263589,"byte_end":8263592,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263597,"byte_end":8263623,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263628,"byte_end":8263658,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263663,"byte_end":8263666,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263671,"byte_end":8263685,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263690,"byte_end":8263693,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263698,"byte_end":8263713,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263718,"byte_end":8263721,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263726,"byte_end":8263733,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263738,"byte_end":8263767,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263772,"byte_end":8263775,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263780,"byte_end":8263798,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263803,"byte_end":8263824,"line_start":222,"line_end":222,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263829,"byte_end":8263881,"line_start":223,"line_end":223,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263886,"byte_end":8263889,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263894,"byte_end":8263927,"line_start":225,"line_end":225,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263932,"byte_end":8263953,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263958,"byte_end":8263969,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263974,"byte_end":8263977,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8263982,"byte_end":8264008,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264013,"byte_end":8264054,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264059,"byte_end":8264064,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264069,"byte_end":8264076,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264081,"byte_end":8264084,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264089,"byte_end":8264111,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264116,"byte_end":8264119,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264124,"byte_end":8264131,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264136,"byte_end":8264165,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264170,"byte_end":8264208,"line_start":238,"line_end":238,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264213,"byte_end":8264216,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264221,"byte_end":8264255,"line_start":240,"line_end":240,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264260,"byte_end":8264311,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264316,"byte_end":8264341,"line_start":242,"line_end":242,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264346,"byte_end":8264351,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264356,"byte_end":8264359,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264364,"byte_end":8264382,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264387,"byte_end":8264408,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264413,"byte_end":8264459,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264464,"byte_end":8264467,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264472,"byte_end":8264505,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264510,"byte_end":8264538,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264543,"byte_end":8264579,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264584,"byte_end":8264659,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264664,"byte_end":8264681,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264686,"byte_end":8264724,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264729,"byte_end":8264813,"line_start":255,"line_end":255,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264818,"byte_end":8264901,"line_start":256,"line_end":256,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264906,"byte_end":8264949,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264954,"byte_end":8264971,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264976,"byte_end":8264989,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8264994,"byte_end":8265005,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265010,"byte_end":8265013,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265018,"byte_end":8265054,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265059,"byte_end":8265124,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265129,"byte_end":8265134,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265139,"byte_end":8265146,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266040,"byte_end":8266049,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265281,"byte_end":8265355,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265360,"byte_end":8265363,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265368,"byte_end":8265442,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265447,"byte_end":8265481,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265486,"byte_end":8265489,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265494,"byte_end":8265569,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265574,"byte_end":8265577,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265582,"byte_end":8265608,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265613,"byte_end":8265643,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265648,"byte_end":8265651,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265656,"byte_end":8265670,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265675,"byte_end":8265678,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265683,"byte_end":8265690,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265695,"byte_end":8265724,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265729,"byte_end":8265732,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265737,"byte_end":8265755,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265760,"byte_end":8265781,"line_start":288,"line_end":288,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265786,"byte_end":8265828,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265833,"byte_end":8265836,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265841,"byte_end":8265874,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265879,"byte_end":8265882,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265887,"byte_end":8265904,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265909,"byte_end":8265912,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265917,"byte_end":8265949,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8265954,"byte_end":8266006,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266011,"byte_end":8266016,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266021,"byte_end":8266028,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267495,"byte_end":8267506,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266211,"byte_end":8266291,"line_start":306,"line_end":306,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266296,"byte_end":8266379,"line_start":307,"line_end":307,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266384,"byte_end":8266395,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266400,"byte_end":8266403,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266408,"byte_end":8266488,"line_start":310,"line_end":310,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266493,"byte_end":8266527,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266532,"byte_end":8266535,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266540,"byte_end":8266623,"line_start":313,"line_end":313,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266628,"byte_end":8266694,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266699,"byte_end":8266702,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266707,"byte_end":8266762,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266767,"byte_end":8266822,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266827,"byte_end":8266830,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266835,"byte_end":8266853,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266858,"byte_end":8266861,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266866,"byte_end":8266892,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266897,"byte_end":8266900,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266905,"byte_end":8266957,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8266962,"byte_end":8267012,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267017,"byte_end":8267020,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267025,"byte_end":8267039,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267044,"byte_end":8267047,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267052,"byte_end":8267059,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267064,"byte_end":8267093,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267098,"byte_end":8267101,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267106,"byte_end":8267139,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267144,"byte_end":8267147,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267152,"byte_end":8267170,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267175,"byte_end":8267196,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267201,"byte_end":8267257,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267262,"byte_end":8267265,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267270,"byte_end":8267303,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267308,"byte_end":8267331,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267336,"byte_end":8267347,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267352,"byte_end":8267355,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267360,"byte_end":8267407,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267412,"byte_end":8267415,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267420,"byte_end":8267461,"line_start":343,"line_end":343,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267466,"byte_end":8267471,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8267476,"byte_end":8267483,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270679,"byte_end":8270684,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269041,"byte_end":8269108,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269113,"byte_end":8269116,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269121,"byte_end":8269195,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269200,"byte_end":8269268,"line_start":407,"line_end":407,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269273,"byte_end":8269339,"line_start":408,"line_end":408,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269344,"byte_end":8269358,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269363,"byte_end":8269366,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269371,"byte_end":8269447,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269452,"byte_end":8269515,"line_start":412,"line_end":412,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269520,"byte_end":8269523,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269528,"byte_end":8269550,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269555,"byte_end":8269591,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269596,"byte_end":8269599,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269604,"byte_end":8269618,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269623,"byte_end":8269626,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269631,"byte_end":8269666,"line_start":419,"line_end":419,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269671,"byte_end":8269674,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269679,"byte_end":8269686,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269691,"byte_end":8269720,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269725,"byte_end":8269775,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269780,"byte_end":8269783,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269788,"byte_end":8269806,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269811,"byte_end":8269832,"line_start":426,"line_end":426,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269837,"byte_end":8269883,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269888,"byte_end":8269891,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269896,"byte_end":8269929,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269934,"byte_end":8269937,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269942,"byte_end":8269961,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269966,"byte_end":8269969,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269974,"byte_end":8270006,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270011,"byte_end":8270063,"line_start":434,"line_end":434,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270068,"byte_end":8270071,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270076,"byte_end":8270105,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270110,"byte_end":8270153,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270158,"byte_end":8270190,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270195,"byte_end":8270204,"line_start":439,"line_end":439,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270209,"byte_end":8270214,"line_start":440,"line_end":440,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270219,"byte_end":8270226,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270231,"byte_end":8270234,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270239,"byte_end":8270290,"line_start":443,"line_end":443,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270295,"byte_end":8270298,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270303,"byte_end":8270310,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270315,"byte_end":8270344,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270349,"byte_end":8270352,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270357,"byte_end":8270375,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270380,"byte_end":8270401,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270406,"byte_end":8270452,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270457,"byte_end":8270460,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270465,"byte_end":8270514,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270519,"byte_end":8270522,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270527,"byte_end":8270546,"line_start":454,"line_end":454,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270551,"byte_end":8270554,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270559,"byte_end":8270600,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270605,"byte_end":8270645,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270650,"byte_end":8270655,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270660,"byte_end":8270667,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272667,"byte_end":8272675,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270782,"byte_end":8270814,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270819,"byte_end":8270822,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270827,"byte_end":8270900,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270905,"byte_end":8270971,"line_start":468,"line_end":468,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8270976,"byte_end":8271000,"line_start":469,"line_end":469,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271005,"byte_end":8271008,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271013,"byte_end":8271079,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271084,"byte_end":8271106,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271111,"byte_end":8271114,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271119,"byte_end":8271131,"line_start":474,"line_end":474,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271136,"byte_end":8271139,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271144,"byte_end":8271195,"line_start":476,"line_end":476,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271200,"byte_end":8271263,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271268,"byte_end":8271343,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271348,"byte_end":8271362,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271367,"byte_end":8271370,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271375,"byte_end":8271389,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271394,"byte_end":8271397,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271402,"byte_end":8271452,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271457,"byte_end":8271460,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271465,"byte_end":8271472,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271477,"byte_end":8271506,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271511,"byte_end":8271561,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271566,"byte_end":8271569,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271574,"byte_end":8271592,"line_start":489,"line_end":489,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271597,"byte_end":8271618,"line_start":490,"line_end":490,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271623,"byte_end":8271669,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271674,"byte_end":8271677,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271682,"byte_end":8271711,"line_start":493,"line_end":493,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271716,"byte_end":8271761,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271766,"byte_end":8271808,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271813,"byte_end":8271845,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271850,"byte_end":8271859,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271864,"byte_end":8271867,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271872,"byte_end":8271895,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271900,"byte_end":8271934,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271939,"byte_end":8271942,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271947,"byte_end":8271976,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8271981,"byte_end":8272033,"line_start":503,"line_end":503,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272038,"byte_end":8272070,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272075,"byte_end":8272084,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272089,"byte_end":8272094,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272099,"byte_end":8272106,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272111,"byte_end":8272114,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272119,"byte_end":8272180,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272185,"byte_end":8272188,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272193,"byte_end":8272200,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272205,"byte_end":8272234,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272239,"byte_end":8272289,"line_start":513,"line_end":513,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272294,"byte_end":8272297,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272302,"byte_end":8272320,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272325,"byte_end":8272346,"line_start":516,"line_end":516,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272351,"byte_end":8272403,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272408,"byte_end":8272411,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272416,"byte_end":8272433,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272438,"byte_end":8272441,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272446,"byte_end":8272475,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272480,"byte_end":8272534,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272539,"byte_end":8272582,"line_start":523,"line_end":523,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272587,"byte_end":8272619,"line_start":524,"line_end":524,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272624,"byte_end":8272633,"line_start":525,"line_end":525,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272638,"byte_end":8272643,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8272648,"byte_end":8272655,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3477},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283431,"byte_end":8283437,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":3476},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283305,"byte_end":8283370,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283375,"byte_end":8283378,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283383,"byte_end":8283426,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3479},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283492,"byte_end":8283501,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":3476},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283444,"byte_end":8283487,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3476},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283283,"byte_end":8283298,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"TryAcquireError::{Closed, NoPermits}","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3479}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283109,"byte_end":8283173,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283174,"byte_end":8283177,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283178,"byte_end":8283245,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283787,"byte_end":8283799,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283505,"byte_end":8283565,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283566,"byte_end":8283569,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283570,"byte_end":8283636,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283637,"byte_end":8283650,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283651,"byte_end":8283654,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283655,"byte_end":8283698,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8283699,"byte_end":8283758,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3491},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303046,"byte_end":8303055,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":3492}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302196,"byte_end":8302262,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302263,"byte_end":8302266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302267,"byte_end":8302342,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302343,"byte_end":8302419,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302420,"byte_end":8302500,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302501,"byte_end":8302510,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302511,"byte_end":8302514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302515,"byte_end":8302588,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302589,"byte_end":8302668,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302669,"byte_end":8302747,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302748,"byte_end":8302819,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302820,"byte_end":8302823,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302824,"byte_end":8302904,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302905,"byte_end":8302917,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302918,"byte_end":8302921,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8302922,"byte_end":8303017,"line_start":20,"line_end":20,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":3495},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303304,"byte_end":8303319,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303120,"byte_end":8303152,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303153,"byte_end":8303156,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303157,"byte_end":8303208,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303209,"byte_end":8303212,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303213,"byte_end":8303263,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303264,"byte_end":8303275,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3502},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303580,"byte_end":8303600,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303371,"byte_end":8303410,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303411,"byte_end":8303414,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303415,"byte_end":8303472,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303473,"byte_end":8303476,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303477,"byte_end":8303539,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8303540,"byte_end":8303551,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304196,"byte_end":8304199,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn (permits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304121,"byte_end":8304184,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304705,"byte_end":8304722,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304641,"byte_end":8304693,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304969,"byte_end":8304980,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn (&self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304792,"byte_end":8304834,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304839,"byte_end":8304842,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304847,"byte_end":8304957,"line_start":90,"line_end":90,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305400,"byte_end":8305407,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, AcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305043,"byte_end":8305084,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305089,"byte_end":8305092,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305097,"byte_end":8305168,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305173,"byte_end":8305239,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305244,"byte_end":8305264,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305269,"byte_end":8305272,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305277,"byte_end":8305324,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305329,"byte_end":8305382,"line_start":102,"line_end":102,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305961,"byte_end":8305973,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"fn (&self, n: u32) -> Result<SemaphorePermit<'_>, AcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305600,"byte_end":8305644,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305649,"byte_end":8305652,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305657,"byte_end":8305728,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305733,"byte_end":8305799,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305804,"byte_end":8305825,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305830,"byte_end":8305833,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305838,"byte_end":8305885,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8305890,"byte_end":8305943,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306712,"byte_end":8306723,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306174,"byte_end":8306223,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306228,"byte_end":8306231,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306236,"byte_end":8306316,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306321,"byte_end":8306402,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306407,"byte_end":8306480,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306485,"byte_end":8306488,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306493,"byte_end":8306562,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306567,"byte_end":8306642,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306647,"byte_end":8306700,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307527,"byte_end":8307543,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"fn (&self, n: u32) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8306988,"byte_end":8307038,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307043,"byte_end":8307046,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307051,"byte_end":8307131,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307136,"byte_end":8307217,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307222,"byte_end":8307295,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307300,"byte_end":8307303,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307308,"byte_end":8307377,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307382,"byte_end":8307457,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307462,"byte_end":8307515,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308293,"byte_end":8308306,"line_start":175,"line_end":175,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"fn (self: Arc<Self>) -> Result<OwnedSemaphorePermit, AcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307816,"byte_end":8307857,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307862,"byte_end":8307865,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307870,"byte_end":8307938,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8307943,"byte_end":8308014,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308019,"byte_end":8308090,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308095,"byte_end":8308115,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308120,"byte_end":8308123,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308128,"byte_end":8308155,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308160,"byte_end":8308207,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308212,"byte_end":8308275,"line_start":174,"line_end":174,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309179,"byte_end":8309196,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"fn (self: Arc<Self>) -> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308514,"byte_end":8308563,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308568,"byte_end":8308571,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308576,"byte_end":8308647,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308652,"byte_end":8308729,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308734,"byte_end":8308804,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308809,"byte_end":8308880,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308885,"byte_end":8308905,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308910,"byte_end":8308913,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308918,"byte_end":8308945,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8308950,"byte_end":8309019,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309024,"byte_end":8309099,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309104,"byte_end":8309167,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310390,"byte_end":8310395,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309477,"byte_end":8309502,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309507,"byte_end":8309510,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309515,"byte_end":8309605,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309610,"byte_end":8309613,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309618,"byte_end":8309632,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309637,"byte_end":8309640,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309645,"byte_end":8309652,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309657,"byte_end":8309688,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309693,"byte_end":8309716,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309721,"byte_end":8309758,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309763,"byte_end":8309766,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309771,"byte_end":8309789,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309794,"byte_end":8309815,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309820,"byte_end":8309872,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309877,"byte_end":8309920,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309925,"byte_end":8309928,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309933,"byte_end":8309966,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8309971,"byte_end":8310028,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310033,"byte_end":8310070,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310075,"byte_end":8310121,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310126,"byte_end":8310137,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310142,"byte_end":8310145,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310150,"byte_end":8310188,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310193,"byte_end":8310220,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310225,"byte_end":8310228,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310233,"byte_end":8310270,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310275,"byte_end":8310356,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310361,"byte_end":8310366,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310371,"byte_end":8310378,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310653,"byte_end":8310659,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310478,"byte_end":8310548,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310553,"byte_end":8310622,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310627,"byte_end":8310641,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310914,"byte_end":8310920,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310739,"byte_end":8310809,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310814,"byte_end":8310883,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310888,"byte_end":8310902,"line_start":251,"line_end":251,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314030,"byte_end":8314036,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311499,"byte_end":8311538,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311539,"byte_end":8311542,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311543,"byte_end":8311620,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311621,"byte_end":8311700,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311701,"byte_end":8311780,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311781,"byte_end":8311839,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311840,"byte_end":8311843,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311844,"byte_end":8311922,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8311923,"byte_end":8312001,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312002,"byte_end":8312080,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312081,"byte_end":8312146,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312147,"byte_end":8312150,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312151,"byte_end":8312215,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312216,"byte_end":8312288,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312289,"byte_end":8312369,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312370,"byte_end":8312450,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312451,"byte_end":8312531,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312532,"byte_end":8312601,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312602,"byte_end":8312672,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312673,"byte_end":8312711,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312712,"byte_end":8312715,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312716,"byte_end":8312793,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312794,"byte_end":8312879,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312880,"byte_end":8312960,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8312961,"byte_end":8313008,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313009,"byte_end":8313081,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313082,"byte_end":8313085,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313086,"byte_end":8313100,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313101,"byte_end":8313104,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313105,"byte_end":8313112,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313113,"byte_end":8313141,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313142,"byte_end":8313145,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313146,"byte_end":8313164,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313165,"byte_end":8313186,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313187,"byte_end":8313221,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313222,"byte_end":8313225,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313226,"byte_end":8313274,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313275,"byte_end":8313284,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313285,"byte_end":8313324,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313325,"byte_end":8313364,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313365,"byte_end":8313396,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313397,"byte_end":8313428,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313429,"byte_end":8313478,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313479,"byte_end":8313482,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313483,"byte_end":8313534,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313535,"byte_end":8313544,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313545,"byte_end":8313588,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313589,"byte_end":8313609,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313610,"byte_end":8313640,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313641,"byte_end":8313680,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313681,"byte_end":8313686,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313687,"byte_end":8313694,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313695,"byte_end":8313698,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313699,"byte_end":8313733,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313734,"byte_end":8313763,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313764,"byte_end":8313811,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313812,"byte_end":8313861,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313862,"byte_end":8313899,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8313900,"byte_end":8314001,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":3115},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314411,"byte_end":8314426,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314170,"byte_end":8314242,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314243,"byte_end":8314255,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314256,"byte_end":8314259,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314260,"byte_end":8314315,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314316,"byte_end":8314331,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314332,"byte_end":8314335,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314336,"byte_end":8314369,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314370,"byte_end":8314399,"line_start":90,"line_end":90,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315744,"byte_end":8315747,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"fn <F, U> (this: Self, f: F) -> RwLockReadGuard<'a, U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314570,"byte_end":8314638,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314643,"byte_end":8314646,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314651,"byte_end":8314724,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314729,"byte_end":8314749,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314754,"byte_end":8314757,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314762,"byte_end":8314813,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314818,"byte_end":8314888,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314893,"byte_end":8314957,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314962,"byte_end":8314965,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314970,"byte_end":8315042,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315047,"byte_end":8315073,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315078,"byte_end":8315081,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315086,"byte_end":8315195,"line_start":110,"line_end":110,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315200,"byte_end":8315263,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315268,"byte_end":8315271,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315276,"byte_end":8315290,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315295,"byte_end":8315298,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315303,"byte_end":8315310,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315315,"byte_end":8315362,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315367,"byte_end":8315370,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315375,"byte_end":8315423,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315428,"byte_end":8315448,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315453,"byte_end":8315456,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315461,"byte_end":8315481,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315486,"byte_end":8315509,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315514,"byte_end":8315549,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315554,"byte_end":8315557,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315562,"byte_end":8315596,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315601,"byte_end":8315655,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315660,"byte_end":8315663,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315668,"byte_end":8315694,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315699,"byte_end":8315706,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315711,"byte_end":8315718,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8315723,"byte_end":8315732,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317442,"byte_end":8317449,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"fn <F, U> (this: Self, f: F) -> Result<RwLockReadGuard<'a, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316125,"byte_end":8316194,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316199,"byte_end":8316269,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316274,"byte_end":8316285,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316290,"byte_end":8316293,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316298,"byte_end":8316371,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316376,"byte_end":8316396,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316401,"byte_end":8316404,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316409,"byte_end":8316468,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316473,"byte_end":8316553,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316558,"byte_end":8316607,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316612,"byte_end":8316615,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316620,"byte_end":8316696,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316701,"byte_end":8316727,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316732,"byte_end":8316735,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316740,"byte_end":8316857,"line_start":161,"line_end":161,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316862,"byte_end":8316925,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316930,"byte_end":8316933,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316938,"byte_end":8316952,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316957,"byte_end":8316960,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316965,"byte_end":8316972,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8316977,"byte_end":8317024,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317029,"byte_end":8317032,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317037,"byte_end":8317085,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317090,"byte_end":8317110,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317115,"byte_end":8317118,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317123,"byte_end":8317143,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317148,"byte_end":8317171,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317176,"byte_end":8317211,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317216,"byte_end":8317219,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317224,"byte_end":8317258,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317263,"byte_end":8317353,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317358,"byte_end":8317361,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317366,"byte_end":8317392,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317397,"byte_end":8317404,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317409,"byte_end":8317416,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317421,"byte_end":8317430,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3142},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318698,"byte_end":8318714,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318446,"byte_end":8318522,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318523,"byte_end":8318535,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318536,"byte_end":8318539,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318540,"byte_end":8318597,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318598,"byte_end":8318616,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318617,"byte_end":8318620,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318621,"byte_end":8318656,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318657,"byte_end":8318686,"line_start":233,"line_end":233,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320032,"byte_end":8320041,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"fn (self) -> RwLockReadGuard<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318869,"byte_end":8318941,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318946,"byte_end":8319015,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319020,"byte_end":8319023,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319028,"byte_end":8319106,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319111,"byte_end":8319187,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319192,"byte_end":8319204,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319209,"byte_end":8319212,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this rwlock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319217,"byte_end":8319289,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319294,"byte_end":8319311,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319316,"byte_end":8319319,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319324,"byte_end":8319338,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319343,"byte_end":8319346,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319351,"byte_end":8319358,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319363,"byte_end":8319393,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319398,"byte_end":8319423,"line_start":255,"line_end":255,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319428,"byte_end":8319433,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319438,"byte_end":8319458,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319463,"byte_end":8319486,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319491,"byte_end":8319531,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319536,"byte_end":8319539,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319544,"byte_end":8319575,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319580,"byte_end":8319586,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319591,"byte_end":8319626,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319631,"byte_end":8319673,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319678,"byte_end":8319717,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319722,"byte_end":8319729,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319734,"byte_end":8319737,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319742,"byte_end":8319768,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319773,"byte_end":8319818,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319823,"byte_end":8319826,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319831,"byte_end":8319843,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319848,"byte_end":8319874,"line_start":272,"line_end":272,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319879,"byte_end":8319954,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319959,"byte_end":8319966,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319971,"byte_end":8319978,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319983,"byte_end":8319986,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8319991,"byte_end":8320020,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323037,"byte_end":8323040,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (value: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322827,"byte_end":8322890,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322895,"byte_end":8322898,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322903,"byte_end":8322917,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322922,"byte_end":8322925,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322930,"byte_end":8322937,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322942,"byte_end":8322970,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322975,"byte_end":8322978,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322983,"byte_end":8323013,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323018,"byte_end":8323025,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324808,"byte_end":8324812,"line_start":432,"line_end":432,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323769,"byte_end":8323840,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323845,"byte_end":8323891,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323896,"byte_end":8323899,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323904,"byte_end":8323973,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8323978,"byte_end":8324054,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324059,"byte_end":8324083,"line_start":406,"line_end":406,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324088,"byte_end":8324091,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324096,"byte_end":8324110,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324115,"byte_end":8324118,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324123,"byte_end":8324130,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324135,"byte_end":8324158,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324163,"byte_end":8324191,"line_start":412,"line_end":412,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324196,"byte_end":8324199,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324204,"byte_end":8324222,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324227,"byte_end":8324248,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324253,"byte_end":8324297,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324302,"byte_end":8324336,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324341,"byte_end":8324344,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324349,"byte_end":8324383,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324388,"byte_end":8324414,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324419,"byte_end":8324422,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324427,"byte_end":8324460,"line_start":422,"line_end":422,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324465,"byte_end":8324535,"line_start":423,"line_end":423,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324540,"byte_end":8324580,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324585,"byte_end":8324615,"line_start":425,"line_end":425,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324620,"byte_end":8324677,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324682,"byte_end":8324685,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324690,"byte_end":8324748,"line_start":428,"line_end":428,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324753,"byte_end":8324769,"line_start":429,"line_end":429,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324774,"byte_end":8324778,"line_start":430,"line_end":430,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8324783,"byte_end":8324790,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326278,"byte_end":8326286,"line_start":477,"line_end":477,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Result<RwLockReadGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325259,"byte_end":8325321,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325326,"byte_end":8325329,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325334,"byte_end":8325411,"line_start":447,"line_end":447,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325416,"byte_end":8325487,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325492,"byte_end":8325509,"line_start":449,"line_end":449,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325514,"byte_end":8325517,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325522,"byte_end":8325556,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325561,"byte_end":8325564,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325569,"byte_end":8325583,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325588,"byte_end":8325591,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325596,"byte_end":8325603,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325608,"byte_end":8325631,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325636,"byte_end":8325664,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325669,"byte_end":8325672,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325677,"byte_end":8325695,"line_start":459,"line_end":459,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325700,"byte_end":8325721,"line_start":460,"line_end":460,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325726,"byte_end":8325770,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325775,"byte_end":8325809,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325814,"byte_end":8325817,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325822,"byte_end":8325863,"line_start":464,"line_end":464,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325868,"byte_end":8325894,"line_start":465,"line_end":465,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325899,"byte_end":8325902,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325907,"byte_end":8325940,"line_start":467,"line_end":467,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8325945,"byte_end":8326015,"line_start":468,"line_end":468,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326020,"byte_end":8326060,"line_start":469,"line_end":469,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326065,"byte_end":8326095,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326100,"byte_end":8326157,"line_start":471,"line_end":471,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326162,"byte_end":8326165,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326170,"byte_end":8326223,"line_start":473,"line_end":473,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326228,"byte_end":8326244,"line_start":474,"line_end":474,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326249,"byte_end":8326254,"line_start":475,"line_end":475,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326259,"byte_end":8326266,"line_start":476,"line_end":476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327353,"byte_end":8327358,"line_start":513,"line_end":513,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326712,"byte_end":8326787,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326792,"byte_end":8326838,"line_start":492,"line_end":492,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326843,"byte_end":8326846,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326851,"byte_end":8326921,"line_start":494,"line_end":494,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326926,"byte_end":8326964,"line_start":495,"line_end":495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326969,"byte_end":8326972,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8326977,"byte_end":8327050,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327055,"byte_end":8327072,"line_start":498,"line_end":498,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327077,"byte_end":8327080,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327085,"byte_end":8327099,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327104,"byte_end":8327107,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327112,"byte_end":8327119,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327124,"byte_end":8327152,"line_start":503,"line_end":503,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327157,"byte_end":8327160,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327165,"byte_end":8327183,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327188,"byte_end":8327209,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327214,"byte_end":8327246,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327251,"byte_end":8327254,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327259,"byte_end":8327296,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327301,"byte_end":8327314,"line_start":510,"line_end":510,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327319,"byte_end":8327323,"line_start":511,"line_end":511,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327328,"byte_end":8327335,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328462,"byte_end":8328471,"line_start":549,"line_end":549,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Result<RwLockWriteGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327822,"byte_end":8327888,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327893,"byte_end":8327896,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327901,"byte_end":8327978,"line_start":528,"line_end":528,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8327983,"byte_end":8328055,"line_start":529,"line_end":529,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328060,"byte_end":8328077,"line_start":530,"line_end":530,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328082,"byte_end":8328085,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328090,"byte_end":8328124,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328129,"byte_end":8328132,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328137,"byte_end":8328151,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328156,"byte_end":8328159,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328164,"byte_end":8328171,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328176,"byte_end":8328204,"line_start":537,"line_end":537,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328209,"byte_end":8328212,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328217,"byte_end":8328235,"line_start":539,"line_end":539,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328240,"byte_end":8328261,"line_start":540,"line_end":540,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328266,"byte_end":8328298,"line_start":541,"line_end":541,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328303,"byte_end":8328306,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328311,"byte_end":8328343,"line_start":543,"line_end":543,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328348,"byte_end":8328374,"line_start":544,"line_end":544,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328379,"byte_end":8328382,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328387,"byte_end":8328428,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328433,"byte_end":8328438,"line_start":547,"line_end":547,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328443,"byte_end":8328450,"line_start":548,"line_end":548,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329386,"byte_end":8329393,"line_start":580,"line_end":580,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328914,"byte_end":8328969,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328974,"byte_end":8328977,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8328982,"byte_end":8329058,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329063,"byte_end":8329137,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329142,"byte_end":8329145,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329150,"byte_end":8329164,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329169,"byte_end":8329172,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329177,"byte_end":8329184,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329189,"byte_end":8329217,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329222,"byte_end":8329225,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329230,"byte_end":8329245,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329250,"byte_end":8329288,"line_start":574,"line_end":574,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329293,"byte_end":8329296,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329301,"byte_end":8329332,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329337,"byte_end":8329352,"line_start":577,"line_end":577,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329357,"byte_end":8329362,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329367,"byte_end":8329374,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329627,"byte_end":8329637,"line_start":588,"line_end":588,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329562,"byte_end":8329615,"line_start":587,"line_end":587,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3258},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3268},{"krate":0,"index":3514},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3531},{"krate":0,"index":3535},{"krate":0,"index":3542},{"krate":0,"index":3269},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3304},{"krate":0,"index":3307}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343110,"byte_end":8343189,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343190,"byte_end":8343200,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343201,"byte_end":8343204,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343205,"byte_end":8343281,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343282,"byte_end":8343356,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343357,"byte_end":8343360,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343361,"byte_end":8343372,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343373,"byte_end":8343376,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343377,"byte_end":8343457,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"! and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343458,"byte_end":8343534,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343535,"byte_end":8343605,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"! [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343606,"byte_end":8343682,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"! value to sent by the [`Sender`] half.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343683,"byte_end":8343724,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343725,"byte_end":8343728,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343729,"byte_end":8343743,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343744,"byte_end":8343747,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343748,"byte_end":8343755,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343756,"byte_end":8343783,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343784,"byte_end":8343787,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343788,"byte_end":8343852,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343853,"byte_end":8343904,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343905,"byte_end":8343908,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343909,"byte_end":8343942,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"!         while rx.changed().await.is_ok() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343943,"byte_end":8343989,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"!             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8343990,"byte_end":8344048,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344049,"byte_end":8344062,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344063,"byte_end":8344074,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344075,"byte_end":8344078,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"!     tx.send(\"world\")?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344079,"byte_end":8344105,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"! # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344106,"byte_end":8344118,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344119,"byte_end":8344126,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344127,"byte_end":8344134,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344135,"byte_end":8344138,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344139,"byte_end":8344152,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344153,"byte_end":8344156,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344157,"byte_end":8344234,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344235,"byte_end":8344313,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"! is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344314,"byte_end":8344394,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344395,"byte_end":8344398,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344399,"byte_end":8344418,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344419,"byte_end":8344422,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344423,"byte_end":8344503,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344504,"byte_end":8344583,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344584,"byte_end":8344656,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344657,"byte_end":8344660,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344661,"byte_end":8344703,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344704,"byte_end":8344750,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"! [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344751,"byte_end":8344817,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"! [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344818,"byte_end":8344882,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344883,"byte_end":8344927,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"! [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344928,"byte_end":8344992,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8344993,"byte_end":8345051,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3514},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345419,"byte_end":8345427,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345253,"byte_end":8345319,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345320,"byte_end":8345323,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345324,"byte_end":8345390,"line_start":63,"line_end":63,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3521},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345716,"byte_end":8345722,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3523}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345551,"byte_end":8345616,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345617,"byte_end":8345620,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345621,"byte_end":8345687,"line_start":75,"line_end":75,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346042,"byte_end":8346045,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":3530}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345759,"byte_end":8345801,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345802,"byte_end":8345805,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345806,"byte_end":8345882,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345883,"byte_end":8345962,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8345963,"byte_end":8346013,"line_start":85,"line_end":85,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":3269},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346622,"byte_end":8346627,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3270},{"krate":0,"index":3545},{"krate":0,"index":3548},{"krate":0,"index":3271},{"krate":0,"index":3274},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3276},{"krate":0,"index":3278}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346634,"byte_end":8346655,"line_start":113,"line_end":113,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3545},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346763,"byte_end":8346772,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":3547}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346680,"byte_end":8346726,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3551},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347193,"byte_end":8347202,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347100,"byte_end":8347156,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3280},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348257,"byte_end":8348264,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn <T> (init: T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347494,"byte_end":8347570,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347571,"byte_end":8347574,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347575,"byte_end":8347657,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347658,"byte_end":8347734,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347735,"byte_end":8347771,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347772,"byte_end":8347775,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347776,"byte_end":8347790,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347791,"byte_end":8347794,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347795,"byte_end":8347802,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347803,"byte_end":8347830,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347831,"byte_end":8347834,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347835,"byte_end":8347899,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347900,"byte_end":8347951,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347952,"byte_end":8347955,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347956,"byte_end":8347989,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347990,"byte_end":8348036,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348037,"byte_end":8348095,"line_start":166,"line_end":166,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348096,"byte_end":8348109,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348110,"byte_end":8348121,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348122,"byte_end":8348125,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348126,"byte_end":8348152,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348153,"byte_end":8348165,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348166,"byte_end":8348173,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348174,"byte_end":8348181,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348182,"byte_end":8348185,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348186,"byte_end":8348215,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348216,"byte_end":8348249,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349147,"byte_end":8349153,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348685,"byte_end":8348740,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348745,"byte_end":8348748,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348753,"byte_end":8348829,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348834,"byte_end":8348910,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348915,"byte_end":8348946,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348951,"byte_end":8348954,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348959,"byte_end":8348973,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348978,"byte_end":8348981,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348986,"byte_end":8348993,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348998,"byte_end":8349025,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349030,"byte_end":8349033,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349038,"byte_end":8349080,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349085,"byte_end":8349123,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349128,"byte_end":8349135,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8350079,"byte_end":8350086,"line_start":243,"line_end":243,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"fn (&mut self) -> Result<(), error::RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349265,"byte_end":8349299,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349304,"byte_end":8349307,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349312,"byte_end":8349387,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349392,"byte_end":8349468,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349473,"byte_end":8349486,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349491,"byte_end":8349494,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349499,"byte_end":8349528,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349533,"byte_end":8349536,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349541,"byte_end":8349555,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349560,"byte_end":8349563,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349568,"byte_end":8349575,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349580,"byte_end":8349607,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349612,"byte_end":8349615,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349620,"byte_end":8349638,"line_start":228,"line_end":228,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349643,"byte_end":8349664,"line_start":229,"line_end":229,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349669,"byte_end":8349720,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349725,"byte_end":8349728,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349733,"byte_end":8349766,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349771,"byte_end":8349811,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349816,"byte_end":8349827,"line_start":234,"line_end":234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349832,"byte_end":8349835,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349840,"byte_end":8349884,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349889,"byte_end":8349933,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349938,"byte_end":8349941,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349946,"byte_end":8349989,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8349994,"byte_end":8350039,"line_start":240,"line_end":240,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8350044,"byte_end":8350049,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8350054,"byte_end":8350061,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352023,"byte_end":8352027,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351948,"byte_end":8352011,"line_start":307,"line_end":307,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353054,"byte_end":8353060,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352592,"byte_end":8352647,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352652,"byte_end":8352655,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352660,"byte_end":8352736,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352741,"byte_end":8352817,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352822,"byte_end":8352853,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352858,"byte_end":8352861,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352866,"byte_end":8352880,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352885,"byte_end":8352888,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352893,"byte_end":8352900,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352905,"byte_end":8352932,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352937,"byte_end":8352940,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352945,"byte_end":8352987,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8352992,"byte_end":8353030,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353035,"byte_end":8353042,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353488,"byte_end":8353497,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353172,"byte_end":8353246,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353251,"byte_end":8353268,"line_start":345,"line_end":345,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353273,"byte_end":8353276,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353281,"byte_end":8353295,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353300,"byte_end":8353303,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353308,"byte_end":8353315,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353320,"byte_end":8353371,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353376,"byte_end":8353405,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353410,"byte_end":8353413,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353418,"byte_end":8353431,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353436,"byte_end":8353464,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353469,"byte_end":8353476,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354241,"byte_end":8354247,"line_start":384,"line_end":384,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353578,"byte_end":8353624,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353629,"byte_end":8353632,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353637,"byte_end":8353711,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353716,"byte_end":8353771,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353776,"byte_end":8353779,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353784,"byte_end":8353798,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353803,"byte_end":8353806,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353811,"byte_end":8353818,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353823,"byte_end":8353850,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353855,"byte_end":8353858,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353863,"byte_end":8353881,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353886,"byte_end":8353907,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353912,"byte_end":8353959,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353964,"byte_end":8353967,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8353972,"byte_end":8354005,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354010,"byte_end":8354033,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354038,"byte_end":8354059,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354064,"byte_end":8354075,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354080,"byte_end":8354083,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354088,"byte_end":8354121,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354126,"byte_end":8354152,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354157,"byte_end":8354201,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354206,"byte_end":8354211,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354216,"byte_end":8354223,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":586},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"! Asynchronous green-threads.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123037,"byte_end":123068,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123069,"byte_end":123072,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123073,"byte_end":123095,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123096,"byte_end":123099,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123100,"byte_end":123181,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123182,"byte_end":123262,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123263,"byte_end":123343,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123344,"byte_end":123418,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123419,"byte_end":123494,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123495,"byte_end":123517,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123518,"byte_end":123521,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123522,"byte_end":123557,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123558,"byte_end":123561,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123562,"byte_end":123636,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123637,"byte_end":123716,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123717,"byte_end":123789,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123790,"byte_end":123865,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123866,"byte_end":123919,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123920,"byte_end":123923,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":123924,"byte_end":124001,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124002,"byte_end":124075,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124076,"byte_end":124155,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124156,"byte_end":124234,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124235,"byte_end":124307,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124308,"byte_end":124383,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124384,"byte_end":124458,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124459,"byte_end":124534,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124535,"byte_end":124565,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124566,"byte_end":124569,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124570,"byte_end":124648,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124649,"byte_end":124724,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124725,"byte_end":124802,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124803,"byte_end":124882,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124883,"byte_end":124961,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":124962,"byte_end":125037,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125038,"byte_end":125113,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125114,"byte_end":125175,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125176,"byte_end":125179,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125180,"byte_end":125204,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125205,"byte_end":125269,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125270,"byte_end":125330,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125331,"byte_end":125420,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125421,"byte_end":125509,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125510,"byte_end":125513,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125514,"byte_end":125539,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125540,"byte_end":125543,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125544,"byte_end":125611,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125612,"byte_end":125615,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125616,"byte_end":125632,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125633,"byte_end":125636,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125637,"byte_end":125716,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125717,"byte_end":125796,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125797,"byte_end":125876,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125877,"byte_end":125944,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125945,"byte_end":125948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125949,"byte_end":125956,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125957,"byte_end":125977,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125978,"byte_end":125981,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":125982,"byte_end":126004,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126005,"byte_end":126028,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126029,"byte_end":126065,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126066,"byte_end":126073,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126074,"byte_end":126081,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126082,"byte_end":126089,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126090,"byte_end":126093,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126094,"byte_end":126173,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126174,"byte_end":126252,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126253,"byte_end":126287,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126288,"byte_end":126291,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126292,"byte_end":126299,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126300,"byte_end":126320,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126321,"byte_end":126324,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126325,"byte_end":126405,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126406,"byte_end":126440,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126441,"byte_end":126455,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126456,"byte_end":126478,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126479,"byte_end":126486,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126487,"byte_end":126490,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126491,"byte_end":126501,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126502,"byte_end":126505,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126506,"byte_end":126550,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126551,"byte_end":126580,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126581,"byte_end":126620,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126621,"byte_end":126633,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126634,"byte_end":126641,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126642,"byte_end":126649,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126650,"byte_end":126653,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126654,"byte_end":126734,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126735,"byte_end":126811,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126812,"byte_end":126824,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126825,"byte_end":126828,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126829,"byte_end":126836,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126837,"byte_end":126857,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126858,"byte_end":126861,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126862,"byte_end":126900,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126901,"byte_end":126935,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126936,"byte_end":126977,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126978,"byte_end":126985,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126986,"byte_end":126989,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":126990,"byte_end":127048,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127049,"byte_end":127082,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127083,"byte_end":127090,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127091,"byte_end":127098,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127099,"byte_end":127102,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127103,"byte_end":127171,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"! feature flag is enabled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127172,"byte_end":127200,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127201,"byte_end":127204,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127205,"byte_end":127246,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127247,"byte_end":127280,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127281,"byte_end":127327,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127328,"byte_end":127371,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127372,"byte_end":127414,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127415,"byte_end":127456,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127457,"byte_end":127460,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127461,"byte_end":127490,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127491,"byte_end":127494,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127495,"byte_end":127575,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127576,"byte_end":127655,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127656,"byte_end":127735,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127736,"byte_end":127776,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127777,"byte_end":127780,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127781,"byte_end":127855,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127856,"byte_end":127936,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127937,"byte_end":127940,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127941,"byte_end":127964,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127965,"byte_end":127968,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":127969,"byte_end":128049,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128050,"byte_end":128116,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128117,"byte_end":128184,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128185,"byte_end":128259,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128260,"byte_end":128272,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128273,"byte_end":128276,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128277,"byte_end":128284,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128285,"byte_end":128305,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128306,"byte_end":128309,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128310,"byte_end":128333,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128334,"byte_end":128363,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128364,"byte_end":128426,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128427,"byte_end":128434,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128435,"byte_end":128442,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128443,"byte_end":128450,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128451,"byte_end":128454,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128455,"byte_end":128529,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128530,"byte_end":128597,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128598,"byte_end":128601,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128602,"byte_end":128613,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128614,"byte_end":128636,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128637,"byte_end":128701,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128702,"byte_end":128742,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128743,"byte_end":128805,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128806,"byte_end":128834,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128835,"byte_end":128842,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128843,"byte_end":128846,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128847,"byte_end":128876,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128877,"byte_end":128922,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128923,"byte_end":128935,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128936,"byte_end":128943,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128944,"byte_end":128951,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128952,"byte_end":128955,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128956,"byte_end":128979,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128980,"byte_end":128983,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":128984,"byte_end":129074,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129075,"byte_end":129149,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129150,"byte_end":129226,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129227,"byte_end":129301,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129302,"byte_end":129381,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129382,"byte_end":129464,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129465,"byte_end":129486,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129487,"byte_end":129490,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129491,"byte_end":129507,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129508,"byte_end":129511,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129512,"byte_end":129519,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129520,"byte_end":129540,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129541,"byte_end":129544,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129545,"byte_end":129568,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129569,"byte_end":129611,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129612,"byte_end":129674,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129675,"byte_end":129703,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129704,"byte_end":129711,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129712,"byte_end":129715,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129716,"byte_end":129761,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129762,"byte_end":129769,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129770,"byte_end":129777,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129778,"byte_end":129781,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129782,"byte_end":129800,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129801,"byte_end":129804,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129805,"byte_end":129879,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129880,"byte_end":129958,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":129959,"byte_end":130035,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130036,"byte_end":130093,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130094,"byte_end":130172,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130173,"byte_end":130201,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130202,"byte_end":130205,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130206,"byte_end":130217,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130218,"byte_end":130238,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130239,"byte_end":130242,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130243,"byte_end":130281,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130282,"byte_end":130293,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130294,"byte_end":130321,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130322,"byte_end":130340,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130341,"byte_end":130383,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130384,"byte_end":130395,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130396,"byte_end":130399,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130400,"byte_end":130467,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130468,"byte_end":130500,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130501,"byte_end":130537,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130538,"byte_end":130543,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130544,"byte_end":130557,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130558,"byte_end":130565,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130566,"byte_end":130573,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130574,"byte_end":130577,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130578,"byte_end":130635,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130636,"byte_end":130693,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130694,"byte_end":130757,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130758,"byte_end":130807,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/task/mod.rs","byte_start":130808,"byte_end":130857,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":604},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133624,"byte_end":133630,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133533,"byte_end":133562,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133567,"byte_end":133570,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133575,"byte_end":133614,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":605},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133660,"byte_end":133666,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133637,"byte_end":133650,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":643},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16448,"byte_end":16454,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14953,"byte_end":15034,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15035,"byte_end":15124,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15125,"byte_end":15135,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15140,"byte_end":15189,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15190,"byte_end":15193,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15194,"byte_end":15270,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15271,"byte_end":15345,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15346,"byte_end":15424,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15425,"byte_end":15502,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15503,"byte_end":15582,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15583,"byte_end":15665,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15666,"byte_end":15701,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15706,"byte_end":15785,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15786,"byte_end":15868,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15869,"byte_end":15948,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15949,"byte_end":15952,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":15953,"byte_end":16003,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16004,"byte_end":16054,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16055,"byte_end":16109,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16110,"byte_end":16113,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16114,"byte_end":16127,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16128,"byte_end":16131,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16132,"byte_end":16191,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16192,"byte_end":16195,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16196,"byte_end":16214,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16215,"byte_end":16241,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16242,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16246,"byte_end":16296,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16297,"byte_end":16300,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16301,"byte_end":16341,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16342,"byte_end":16390,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16391,"byte_end":16414,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16415,"byte_end":16424,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16425,"byte_end":16431,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":16432,"byte_end":16439,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30305,"byte_end":30311,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30525,"byte_end":30531,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30673,"byte_end":30679,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900808,"byte_end":7900813,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900840,"byte_end":7900845,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43516,"byte_end":43519,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43679,"byte_end":43682,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":44311,"byte_end":44317,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":47357,"byte_end":47360,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":47503,"byte_end":47506,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":48175,"byte_end":48181,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51175,"byte_end":51178,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51321,"byte_end":51324,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51715,"byte_end":51721,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":61191,"byte_end":61194,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":61342,"byte_end":61345,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":62222,"byte_end":62225,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":63023,"byte_end":63029,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":63832,"byte_end":63838,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":64644,"byte_end":64650,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":65451,"byte_end":65457,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67498,"byte_end":67505,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":76483,"byte_end":76490,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903106,"byte_end":7903114,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904031,"byte_end":7904040,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904290,"byte_end":7904298,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904593,"byte_end":7904602,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7905281,"byte_end":7905286,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7905742,"byte_end":7905747,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906000,"byte_end":7906005,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906128,"byte_end":7906136,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906173,"byte_end":7906182,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906219,"byte_end":7906227,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906264,"byte_end":7906273,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906316,"byte_end":7906324,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906492,"byte_end":7906501,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/seek.rs","byte_start":7907458,"byte_end":7907462,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7919373,"byte_end":7919374,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7958701,"byte_end":7958702,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_seek_ext.rs","byte_start":7960811,"byte_end":7960812,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7996059,"byte_end":7996060,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997428,"byte_end":7997437,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7999294,"byte_end":7999303,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8000113,"byte_end":8000122,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8001035,"byte_end":8001044,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8001555,"byte_end":8001564,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003053,"byte_end":8003062,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004899,"byte_end":8004908,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8005050,"byte_end":8005059,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8005771,"byte_end":8005780,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8006310,"byte_end":8006319,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8006574,"byte_end":8006583,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008519,"byte_end":8008528,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010806,"byte_end":8010815,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8011705,"byte_end":8011714,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8011968,"byte_end":8011977,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8012264,"byte_end":8012273,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013451,"byte_end":8013456,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014596,"byte_end":8014601,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014880,"byte_end":8014885,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8015471,"byte_end":8015476,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy.rs","byte_start":8018311,"byte_end":8018315,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy_buf.rs","byte_start":8022009,"byte_end":8022016,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024283,"byte_end":8024288,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024502,"byte_end":8024507,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024740,"byte_end":8024745,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/flush.rs","byte_start":8025872,"byte_end":8025877,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027208,"byte_end":8027213,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028465,"byte_end":8028470,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032748,"byte_end":8032760,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8033304,"byte_end":8033316,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034014,"byte_end":8034026,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034177,"byte_end":8034181,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034587,"byte_end":8034591,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8035457,"byte_end":8035461,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read.rs","byte_start":8037642,"byte_end":8037646,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_buf.rs","byte_start":8038780,"byte_end":8038787,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_exact.rs","byte_start":8041168,"byte_end":8041177,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_line.rs","byte_start":8050267,"byte_end":8050275,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_end.rs","byte_start":8053928,"byte_end":8053937,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054332,"byte_end":8054335,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054624,"byte_end":8054627,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8055327,"byte_end":8055345,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8055525,"byte_end":8055543,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_string.rs","byte_start":8060913,"byte_end":8060925,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_until.rs","byte_start":8063229,"byte_end":8063238,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/repeat.rs","byte_start":8064816,"byte_end":8064822,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/shutdown.rs","byte_start":8066201,"byte_end":8066209,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8067849,"byte_end":8067853,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8068363,"byte_end":8068367,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069524,"byte_end":8069529,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070268,"byte_end":8070273,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072586,"byte_end":8072590,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074218,"byte_end":8074222,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074866,"byte_end":8074870,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write.rs","byte_start":8076669,"byte_end":8076674,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_all.rs","byte_start":8077709,"byte_end":8077717,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_buf.rs","byte_start":8079202,"byte_end":8079210,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":79658,"byte_end":79668,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":79708,"byte_end":79718,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80020,"byte_end":80032,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80072,"byte_end":80084,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80381,"byte_end":80393,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80433,"byte_end":80445,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90650,"byte_end":90659,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90833,"byte_end":90842,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90989,"byte_end":90998,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":91111,"byte_end":91120,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91464,"byte_end":91473,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91498,"byte_end":91507,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91517,"byte_end":91526,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":92018,"byte_end":92027,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":92312,"byte_end":92321,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92662,"byte_end":92671,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92696,"byte_end":92705,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92715,"byte_end":92724,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92909,"byte_end":92918,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":93203,"byte_end":93212,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95723,"byte_end":95731,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95756,"byte_end":95764,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95774,"byte_end":95782,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95963,"byte_end":95971,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":96255,"byte_end":96263,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96603,"byte_end":96614,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96639,"byte_end":96650,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96660,"byte_end":96671,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97360,"byte_end":97371,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97661,"byte_end":97672,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97836,"byte_end":97847,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/mutex.rs","byte_start":98178,"byte_end":98183,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/unsafe_cell.rs","byte_start":98861,"byte_end":98871,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104035,"byte_end":104045,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104310,"byte_end":104320,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104846,"byte_end":104851,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":109616,"byte_end":109626,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":109735,"byte_end":109747,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":110102,"byte_end":110118,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":111381,"byte_end":111397,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":111992,"byte_end":112004,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":112184,"byte_end":112189,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":103082,"byte_end":103085,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":103174,"byte_end":103177,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":115773,"byte_end":115779,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":117139,"byte_end":117149,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":118120,"byte_end":118136,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":118268,"byte_end":118284,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":120024,"byte_end":120030,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101669,"byte_end":8101676,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8104955,"byte_end":8104972,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112203,"byte_end":8112212,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112388,"byte_end":8112397,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113045,"byte_end":8113054,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113359,"byte_end":8113368,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114291,"byte_end":8114303,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114681,"byte_end":8114693,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116656,"byte_end":8116660,"line_start":372,"line_end":372,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116705,"byte_end":8116709,"line_start":373,"line_end":373,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119483,"byte_end":8119489,"line_start":463,"line_end":463,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119526,"byte_end":8119532,"line_start":464,"line_end":464,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119570,"byte_end":8119578,"line_start":466,"line_end":466,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119615,"byte_end":8119623,"line_start":467,"line_end":467,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119639,"byte_end":8119645,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125255,"byte_end":8125259,"line_start":656,"line_end":656,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125651,"byte_end":8125657,"line_start":671,"line_end":671,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125837,"byte_end":8125843,"line_start":680,"line_end":680,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125997,"byte_end":8126005,"line_start":688,"line_end":688,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8130868,"byte_end":8130876,"line_start":806,"line_end":806,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8135052,"byte_end":8135060,"line_start":923,"line_end":923,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8135686,"byte_end":8135690,"line_start":946,"line_end":946,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8136469,"byte_end":8136473,"line_start":972,"line_end":972,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8137134,"byte_end":8137138,"line_start":992,"line_end":992,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8137886,"byte_end":8137892,"line_start":1018,"line_end":1018,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138307,"byte_end":8138313,"line_start":1035,"line_end":1035,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138457,"byte_end":8138465,"line_start":1041,"line_end":1041,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138600,"byte_end":8138609,"line_start":1047,"line_end":1047,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138782,"byte_end":8138791,"line_start":1056,"line_end":1056,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8145673,"byte_end":8145678,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8155779,"byte_end":8155785,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8156267,"byte_end":8156273,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159581,"byte_end":8159589,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166601,"byte_end":8166609,"line_start":301,"line_end":301,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166805,"byte_end":8166813,"line_start":309,"line_end":309,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166829,"byte_end":8166835,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179727,"byte_end":8179733,"line_start":702,"line_end":702,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179865,"byte_end":8179871,"line_start":710,"line_end":710,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180083,"byte_end":8180089,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181339,"byte_end":8181345,"line_start":763,"line_end":763,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181672,"byte_end":8181678,"line_start":778,"line_end":778,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8182339,"byte_end":8182341,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8182634,"byte_end":8182636,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8183573,"byte_end":8183577,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184210,"byte_end":8184218,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184484,"byte_end":8184488,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184537,"byte_end":8184541,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8185048,"byte_end":8185050,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8185482,"byte_end":8185484,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186034,"byte_end":8186036,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186375,"byte_end":8186377,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186700,"byte_end":8186702,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190093,"byte_end":8190095,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190507,"byte_end":8190511,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190696,"byte_end":8190700,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8191701,"byte_end":8191712,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8193453,"byte_end":8193455,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8199168,"byte_end":8199170,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2616}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8199447,"byte_end":8199449,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8202848,"byte_end":8202850,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203508,"byte_end":8203523,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203664,"byte_end":8203679,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204352,"byte_end":8204369,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205368,"byte_end":8205385,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208683,"byte_end":8208698,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2672},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212388,"byte_end":8212397,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212557,"byte_end":8212566,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213052,"byte_end":8213064,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213097,"byte_end":8213109,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213449,"byte_end":8213461,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213690,"byte_end":8213699,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213829,"byte_end":8213838,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221780,"byte_end":8221785,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221839,"byte_end":8221844,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221898,"byte_end":8221908,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221973,"byte_end":8221988,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222667,"byte_end":8222679,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222816,"byte_end":8222828,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223636,"byte_end":8223641,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229394,"byte_end":8229399,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229483,"byte_end":8229488,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229612,"byte_end":8229617,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230012,"byte_end":8230022,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230123,"byte_end":8230133,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230280,"byte_end":8230290,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230447,"byte_end":8230457,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230623,"byte_end":8230633,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230811,"byte_end":8230826,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230923,"byte_end":8230938,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231081,"byte_end":8231096,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231249,"byte_end":8231264,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231426,"byte_end":8231441,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8236304,"byte_end":8236312,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8236345,"byte_end":8236353,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237183,"byte_end":8237189,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8245765,"byte_end":8245771,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8247681,"byte_end":8247689,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8248202,"byte_end":8248210,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8253906,"byte_end":8253914,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8256969,"byte_end":8256975,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258851,"byte_end":8258860,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259022,"byte_end":8259031,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259100,"byte_end":8259112,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259411,"byte_end":8259423,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261209,"byte_end":8261215,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8268878,"byte_end":8268884,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269023,"byte_end":8269031,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8273422,"byte_end":8273430,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8273577,"byte_end":8273585,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8274048,"byte_end":8274053,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2924},{"krate":0,"index":2928},{"krate":0,"index":2932},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278425,"byte_end":8278430,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278467,"byte_end":8278472,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278497,"byte_end":8278502,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278871,"byte_end":8278876,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8279271,"byte_end":8279276,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8280989,"byte_end":8280994,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8285053,"byte_end":8285062,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8296087,"byte_end":8296096,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8296295,"byte_end":8296301,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8297167,"byte_end":8297174,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8297852,"byte_end":8297859,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8298658,"byte_end":8298665,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8299915,"byte_end":8299922,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8299969,"byte_end":8299981,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300074,"byte_end":8300086,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300230,"byte_end":8300242,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300289,"byte_end":8300304,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300822,"byte_end":8300837,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8301123,"byte_end":8301138,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8301231,"byte_end":8301237,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304105,"byte_end":8304114,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310452,"byte_end":8310467,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310712,"byte_end":8310732,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310986,"byte_end":8311001,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8311109,"byte_end":8311129,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314541,"byte_end":8314556,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317974,"byte_end":8317989,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318169,"byte_end":8318184,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318360,"byte_end":8318375,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318839,"byte_end":8318855,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320475,"byte_end":8320491,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320671,"byte_end":8320687,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320863,"byte_end":8320879,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8321955,"byte_end":8321961,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322015,"byte_end":8322021,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322255,"byte_end":8322270,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322328,"byte_end":8322343,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322408,"byte_end":8322424,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322737,"byte_end":8322753,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322811,"byte_end":8322817,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329751,"byte_end":8329766,"line_start":596,"line_end":596,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329897,"byte_end":8329913,"line_start":604,"line_end":604,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330047,"byte_end":8330063,"line_start":612,"line_end":612,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330177,"byte_end":8330183,"line_start":618,"line_end":618,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330275,"byte_end":8330281,"line_start":624,"line_end":624,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8336556,"byte_end":8336567,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3238},{"krate":0,"index":3239}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342468,"byte_end":8342479,"line_start":283,"line_end":283,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342565,"byte_end":8342576,"line_start":289,"line_end":289,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342709,"byte_end":8342720,"line_start":295,"line_end":295,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342745,"byte_end":8342756,"line_start":296,"line_end":296,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342852,"byte_end":8342857,"line_start":303,"line_end":303,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346890,"byte_end":8346899,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347079,"byte_end":8347088,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347281,"byte_end":8347290,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347452,"byte_end":8347461,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348667,"byte_end":8348675,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351208,"byte_end":8351216,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351554,"byte_end":8351562,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351932,"byte_end":8351938,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354522,"byte_end":8354528,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354718,"byte_end":8354721,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":132960,"byte_end":132970,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133040,"byte_end":133050,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134350,"byte_end":134358,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134395,"byte_end":134403,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134454,"byte_end":134464,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134699,"byte_end":134709,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":137558,"byte_end":137568,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":137925,"byte_end":137935,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":138122,"byte_end":138132,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":140368,"byte_end":140376,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":140575,"byte_end":140583,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14339,"byte_end":14345,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/macros/mod.rs","byte_start":18014,"byte_end":18021,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14398,"byte_end":14400,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14410,"byte_end":14413,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":254}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14816,"byte_end":14820,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2120}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099239,"byte_end":8099248,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":2134}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099263,"byte_end":8099267,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2297}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/mod.rs","byte_start":8143073,"byte_end":8143078,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2680}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099425,"byte_end":8099432,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2853}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mod.rs","byte_start":8099776,"byte_end":8099781,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":3258}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/lib.rs","byte_start":14865,"byte_end":14869,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":586}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30305,"byte_end":30311,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30525,"byte_end":30531,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/poll_fn.rs","byte_start":30673,"byte_end":30679,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900808,"byte_end":7900813,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/future/ready.rs","byte_start":7900840,"byte_end":7900845,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":41057,"byte_end":41066,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43516,"byte_end":43519,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":43679,"byte_end":43682,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":29654},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_buf_read.rs","byte_start":44311,"byte_end":44317,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":47357,"byte_end":47360,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":47503,"byte_end":47506,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":29654},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_read.rs","byte_start":48175,"byte_end":48181,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51175,"byte_end":51178,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51321,"byte_end":51324,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":29654},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_seek.rs","byte_start":51715,"byte_end":51721,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":61191,"byte_end":61194,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":61342,"byte_end":61345,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":29654},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":62222,"byte_end":62225,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":63023,"byte_end":63029,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":63832,"byte_end":63838,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":64644,"byte_end":64650,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/async_write.rs","byte_start":65451,"byte_end":65457,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6509},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":67498,"byte_end":67505,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/read_buf.rs","byte_start":76483,"byte_end":76490,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7903106,"byte_end":7903114,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904031,"byte_end":7904040,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904290,"byte_end":7904298,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7904593,"byte_end":7904602,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":804},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7905281,"byte_end":7905286,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7905742,"byte_end":7905747,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906000,"byte_end":7906005,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906128,"byte_end":7906136,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906173,"byte_end":7906182,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906219,"byte_end":7906227,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906264,"byte_end":7906273,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906316,"byte_end":7906324,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/split.rs","byte_start":7906492,"byte_end":7906501,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/seek.rs","byte_start":7907458,"byte_end":7907462,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6268},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7910340,"byte_end":7910352,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":86},"to":{"krate":0,"index":1589}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_buf_read_ext.rs","byte_start":7919373,"byte_end":7919374,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":1589}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7921295,"byte_end":7921304,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":1597}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_read_ext.rs","byte_start":7958701,"byte_end":7958702,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":871},"to":{"krate":0,"index":1597}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_seek_ext.rs","byte_start":7959627,"byte_end":7959636,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":139},"to":{"krate":0,"index":1648}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_seek_ext.rs","byte_start":7960811,"byte_end":7960812,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":1648}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7962764,"byte_end":7962774,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":165},"to":{"krate":0,"index":1651}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/async_write_ext.rs","byte_start":7996059,"byte_end":7996060,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":921},"to":{"krate":0,"index":1651}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7997428,"byte_end":7997437,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":7999294,"byte_end":7999303,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6216},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8000113,"byte_end":8000122,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6216},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8001035,"byte_end":8001044,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6216},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_reader.rs","byte_start":8001555,"byte_end":8001564,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6216},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8003053,"byte_end":8003062,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8004899,"byte_end":8004908,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8005050,"byte_end":8005059,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8005771,"byte_end":8005780,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6185},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8006310,"byte_end":8006319,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6185},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_stream.rs","byte_start":8006574,"byte_end":8006583,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6185},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8008519,"byte_end":8008528,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8010806,"byte_end":8010815,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6139},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8011705,"byte_end":8011714,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6139},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8011968,"byte_end":8011977,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6139},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/buf_writer.rs","byte_start":8012264,"byte_end":8012273,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8013451,"byte_end":8013456,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014596,"byte_end":8014601,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6090},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8014880,"byte_end":8014885,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6090},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/chain.rs","byte_start":8015471,"byte_end":8015476,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6090},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy.rs","byte_start":8018311,"byte_end":8018315,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/copy_buf.rs","byte_start":8022009,"byte_end":8022016,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1725},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024283,"byte_end":8024288,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1737},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024502,"byte_end":8024507,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1737},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/empty.rs","byte_start":8024740,"byte_end":8024745,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1737},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/flush.rs","byte_start":8025872,"byte_end":8025877,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6048},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8027208,"byte_end":8027213,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/lines.rs","byte_start":8028465,"byte_end":8028470,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8032748,"byte_end":8032760,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1740},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8033304,"byte_end":8033316,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1740},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034014,"byte_end":8034026,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034177,"byte_end":8034181,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8034587,"byte_end":8034591,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/mem.rs","byte_start":8035457,"byte_end":8035461,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read.rs","byte_start":8037642,"byte_end":8037646,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5947},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_buf.rs","byte_start":8038780,"byte_end":8038787,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_exact.rs","byte_start":8041168,"byte_end":8041177,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5832},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_line.rs","byte_start":8050267,"byte_end":8050275,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4913},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_end.rs","byte_start":8053928,"byte_end":8053937,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4856},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054332,"byte_end":8054335,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":1353}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054572,"byte_end":8054577,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1819},"to":{"krate":0,"index":1356}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054598,"byte_end":8054604,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1353},"to":{"krate":0,"index":1356}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8054624,"byte_end":8054627,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":1356}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8055327,"byte_end":8055345,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/vec_with_initialized.rs","byte_start":8055525,"byte_end":8055543,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_to_string.rs","byte_start":8060913,"byte_end":8060925,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4795},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/read_until.rs","byte_start":8063229,"byte_end":8063238,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4734},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/repeat.rs","byte_start":8064816,"byte_end":8064822,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1905},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/shutdown.rs","byte_start":8066201,"byte_end":8066209,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4685},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8067849,"byte_end":8067853,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1909},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/sink.rs","byte_start":8068363,"byte_end":8068367,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1909},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8069524,"byte_end":8069529,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/split.rs","byte_start":8070268,"byte_end":8070273,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8072586,"byte_end":8072590,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074218,"byte_end":8074222,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4595},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/take.rs","byte_start":8074866,"byte_end":8074870,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4595},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write.rs","byte_start":8076669,"byte_end":8076674,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4544},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_all.rs","byte_start":8077709,"byte_end":8077717,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4491},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/io/util/write_buf.rs","byte_start":8079202,"byte_end":8079210,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":78988,"byte_end":79005,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":314},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":79658,"byte_end":79668,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":79708,"byte_end":79718,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":99}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":314}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80020,"byte_end":80032,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":1,"index":6685},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80072,"byte_end":80084,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"kind":{"Impl":{"id":101}},"from":{"krate":1,"index":6685},"to":{"krate":0,"index":314}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80381,"byte_end":80393,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":1,"index":6688},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/net/addr.rs","byte_start":80433,"byte_end":80445,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":1,"index":6688},"to":{"krate":0,"index":314}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90650,"byte_end":90659,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90833,"byte_end":90842,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":90989,"byte_end":90998,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_ptr.rs","byte_start":91111,"byte_end":91120,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91464,"byte_end":91473,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91498,"byte_end":91507,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":91517,"byte_end":91526,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":92018,"byte_end":92027,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u16.rs","byte_start":92312,"byte_end":92321,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92662,"byte_end":92671,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92696,"byte_end":92705,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92715,"byte_end":92724,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":92909,"byte_end":92918,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u32.rs","byte_start":93203,"byte_end":93212,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95723,"byte_end":95731,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95756,"byte_end":95764,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95774,"byte_end":95782,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":95963,"byte_end":95971,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_u8.rs","byte_start":96255,"byte_end":96263,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96603,"byte_end":96614,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96639,"byte_end":96650,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":96660,"byte_end":96671,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97360,"byte_end":97371,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97661,"byte_end":97672,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/atomic_usize.rs","byte_start":97836,"byte_end":97847,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/mutex.rs","byte_start":98178,"byte_end":98183,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/loom/std/unsafe_cell.rs","byte_start":98861,"byte_end":98871,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104035,"byte_end":104045,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104310,"byte_end":104320,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2068},"to":{"krate":0,"index":554}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":104846,"byte_end":104851,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":109616,"byte_end":109626,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":109735,"byte_end":109747,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2072},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":110102,"byte_end":110118,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":111381,"byte_end":111397,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":554}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":111992,"byte_end":112004,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/thread.rs","byte_start":112184,"byte_end":112189,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":102602,"byte_end":102606,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":102609,"byte_end":102613,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":103082,"byte_end":103085,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":140}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/park/mod.rs","byte_start":103174,"byte_end":103177,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":5,"index":3840},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":115773,"byte_end":115779,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":117139,"byte_end":117149,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":118120,"byte_end":118136,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":118268,"byte_end":118284,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2107},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/coop.rs","byte_start":120024,"byte_end":120030,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8101669,"byte_end":8101676,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/barrier.rs","byte_start":8104955,"byte_end":8104972,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112203,"byte_end":8112212,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3330},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8112388,"byte_end":8112397,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3330},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113045,"byte_end":8113054,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3337},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8113359,"byte_end":8113368,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3337},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114291,"byte_end":8114303,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8114681,"byte_end":8114693,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3349},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116656,"byte_end":8116660,"line_start":372,"line_end":372,"column_start":35,"column_end":39},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8116705,"byte_end":8116709,"line_start":373,"line_end":373,"column_start":35,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119483,"byte_end":8119489,"line_start":463,"line_end":463,"column_start":31,"column_end":37},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119526,"byte_end":8119532,"line_start":464,"line_end":464,"column_start":31,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119570,"byte_end":8119578,"line_start":466,"line_end":466,"column_start":31,"column_end":39},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119615,"byte_end":8119623,"line_start":467,"line_end":467,"column_start":31,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8119639,"byte_end":8119645,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125255,"byte_end":8125259,"line_start":656,"line_end":656,"column_start":6,"column_end":10},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125651,"byte_end":8125657,"line_start":671,"line_end":671,"column_start":19,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125837,"byte_end":8125843,"line_start":680,"line_end":680,"column_start":18,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8125997,"byte_end":8126005,"line_start":688,"line_end":688,"column_start":9,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8130868,"byte_end":8130876,"line_start":806,"line_end":806,"column_start":16,"column_end":24},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8135052,"byte_end":8135060,"line_start":923,"line_end":923,"column_start":18,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8135686,"byte_end":8135690,"line_start":946,"line_end":946,"column_start":13,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8136469,"byte_end":8136473,"line_start":972,"line_end":972,"column_start":24,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8137134,"byte_end":8137138,"line_start":992,"line_end":992,"column_start":22,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8137886,"byte_end":8137892,"line_start":1018,"line_end":1018,"column_start":35,"column_end":41},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":603}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138307,"byte_end":8138313,"line_start":1035,"line_end":1035,"column_start":24,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2156},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138457,"byte_end":8138465,"line_start":1041,"line_end":1041,"column_start":24,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138600,"byte_end":8138609,"line_start":1047,"line_end":1047,"column_start":13,"column_end":22},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/broadcast.rs","byte_start":8138782,"byte_end":8138791,"line_start":1056,"line_end":1056,"column_start":22,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2199},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8145673,"byte_end":8145678,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8155779,"byte_end":8155785,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/block.rs","byte_start":8156267,"byte_end":8156273,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2328},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8159581,"byte_end":8159589,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166601,"byte_end":8166609,"line_start":301,"line_end":301,"column_start":24,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166805,"byte_end":8166813,"line_start":309,"line_end":309,"column_start":19,"column_end":27},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8166829,"byte_end":8166835,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179727,"byte_end":8179733,"line_start":702,"line_end":702,"column_start":19,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2384},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8179865,"byte_end":8179871,"line_start":710,"line_end":710,"column_start":24,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2384},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8180083,"byte_end":8180089,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181339,"byte_end":8181345,"line_start":763,"line_end":763,"column_start":18,"column_end":24},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/bounded.rs","byte_start":8181672,"byte_end":8181678,"line_start":778,"line_end":778,"column_start":24,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8182339,"byte_end":8182341,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8182634,"byte_end":8182636,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8183573,"byte_end":8183577,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2490},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184210,"byte_end":8184218,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2503},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184484,"byte_end":8184488,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2490},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8184537,"byte_end":8184541,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2490},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8185048,"byte_end":8185050,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8185482,"byte_end":8185484,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186034,"byte_end":8186036,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186375,"byte_end":8186377,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2469},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8186700,"byte_end":8186702,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190093,"byte_end":8190095,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190507,"byte_end":8190511,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8190696,"byte_end":8190700,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2490},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/chan.rs","byte_start":8191701,"byte_end":8191712,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":2485}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8193453,"byte_end":8193455,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8199168,"byte_end":8199170,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2596},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8199447,"byte_end":8199449,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/list.rs","byte_start":8202848,"byte_end":8202850,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2600},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203508,"byte_end":8203523,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2634},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8203664,"byte_end":8203679,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2634},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8204352,"byte_end":8204369,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2643},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8205368,"byte_end":8205385,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/unbounded.rs","byte_start":8208683,"byte_end":8208698,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212388,"byte_end":8212397,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3365},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8212557,"byte_end":8212566,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3365},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213052,"byte_end":8213064,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3372},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213097,"byte_end":8213109,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213449,"byte_end":8213461,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213690,"byte_end":8213699,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3383},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mpsc/error.rs","byte_start":8213829,"byte_end":8213838,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3383},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221780,"byte_end":8221785,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221839,"byte_end":8221844,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221898,"byte_end":8221908,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8221973,"byte_end":8221988,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222667,"byte_end":8222679,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3388},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8222816,"byte_end":8222828,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3388},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8223636,"byte_end":8223641,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229394,"byte_end":8229399,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229483,"byte_end":8229488,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8229612,"byte_end":8229617,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230012,"byte_end":8230022,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230123,"byte_end":8230133,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230280,"byte_end":8230290,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230447,"byte_end":8230457,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230623,"byte_end":8230633,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230811,"byte_end":8230826,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8230923,"byte_end":8230938,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231081,"byte_end":8231096,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231249,"byte_end":8231264,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/mutex.rs","byte_start":8231426,"byte_end":8231441,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8236304,"byte_end":8236312,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8236345,"byte_end":8236353,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8237183,"byte_end":8237189,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8245765,"byte_end":8245771,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3393},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8247681,"byte_end":8247689,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8248202,"byte_end":8248210,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8253906,"byte_end":8253914,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/notify.rs","byte_start":8256969,"byte_end":8256975,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":603}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8258851,"byte_end":8258860,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3445},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259022,"byte_end":8259031,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3445},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259100,"byte_end":8259112,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3457},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8259411,"byte_end":8259423,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3457},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8261209,"byte_end":8261215,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8268878,"byte_end":8268884,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3433},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8269023,"byte_end":8269031,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8273422,"byte_end":8273430,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3439},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8273577,"byte_end":8273585,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3439},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8274048,"byte_end":8274053,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278425,"byte_end":8278430,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278467,"byte_end":8278472,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278497,"byte_end":8278502,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8278871,"byte_end":8278876,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8279271,"byte_end":8279276,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/oneshot.rs","byte_start":8280989,"byte_end":8280994,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8285053,"byte_end":8285062,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8296087,"byte_end":8296096,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2994},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8296295,"byte_end":8296301,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8297167,"byte_end":8297174,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3000},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8297852,"byte_end":8297859,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8298658,"byte_end":8298665,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3000},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8299915,"byte_end":8299922,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3000},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8299969,"byte_end":8299981,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300074,"byte_end":8300086,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3486},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300230,"byte_end":8300242,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3486},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300289,"byte_end":8300304,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8300822,"byte_end":8300837,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8301123,"byte_end":8301138,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3476},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/batch_semaphore.rs","byte_start":8301231,"byte_end":8301237,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3006},"to":{"krate":0,"index":603}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8304105,"byte_end":8304114,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310452,"byte_end":8310467,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310712,"byte_end":8310732,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8310986,"byte_end":8311001,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3495},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/semaphore.rs","byte_start":8311109,"byte_end":8311129,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3502},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8314541,"byte_end":8314556,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8317974,"byte_end":8317989,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318169,"byte_end":8318184,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318360,"byte_end":8318375,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8318839,"byte_end":8318855,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320475,"byte_end":8320491,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320671,"byte_end":8320687,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8320863,"byte_end":8320879,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8321955,"byte_end":8321961,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322015,"byte_end":8322021,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322255,"byte_end":8322270,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322328,"byte_end":8322343,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322408,"byte_end":8322424,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322737,"byte_end":8322753,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8322811,"byte_end":8322817,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329751,"byte_end":8329766,"line_start":596,"line_end":596,"column_start":32,"column_end":47},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8329897,"byte_end":8329913,"line_start":604,"line_end":604,"column_start":32,"column_end":48},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330047,"byte_end":8330063,"line_start":612,"line_end":612,"column_start":35,"column_end":51},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3142},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330177,"byte_end":8330183,"line_start":618,"line_end":618,"column_start":21,"column_end":27},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/rwlock.rs","byte_start":8330275,"byte_end":8330281,"line_start":624,"line_end":624,"column_start":29,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8336556,"byte_end":8336567,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342468,"byte_end":8342479,"line_start":283,"line_end":283,"column_start":18,"column_end":29},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342565,"byte_end":8342576,"line_start":289,"line_end":289,"column_start":21,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342709,"byte_end":8342720,"line_start":295,"line_end":295,"column_start":22,"column_end":33},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342745,"byte_end":8342756,"line_start":296,"line_end":296,"column_start":22,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/task/atomic_waker.rs","byte_start":8342852,"byte_end":8342857,"line_start":303,"line_end":303,"column_start":19,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":2,"index":8292},"to":{"krate":0,"index":3247}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8346890,"byte_end":8346899,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3545},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347079,"byte_end":8347088,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3545},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347281,"byte_end":8347290,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3551},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8347452,"byte_end":8347461,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3551},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8348667,"byte_end":8348675,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351208,"byte_end":8351216,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351554,"byte_end":8351562,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8351932,"byte_end":8351938,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354522,"byte_end":8354528,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3521},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/sync/watch.rs","byte_start":8354718,"byte_end":8354721,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":132960,"byte_end":132970,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":133040,"byte_end":133050,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134350,"byte_end":134358,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134395,"byte_end":134403,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134454,"byte_end":134464,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":134699,"byte_end":134709,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":137558,"byte_end":137568,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":137925,"byte_end":137935,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":138122,"byte_end":138132,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":140368,"byte_end":140376,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.1.1/src/util/linked_list.rs","byte_start":140575,"byte_end":140583,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":6069}}]}