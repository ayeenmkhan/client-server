{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3","program":"/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=d0d9effbb08abda2","-C","extra-filename=-d0d9effbb08abda2","--out-dir","/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","-L","dependency=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps","--extern","bytes=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libbytes-e504daa11419f9b9.rmeta","--extern","futures_core=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libfutures_core-adb13fe34de1d44a.rmeta","--extern","futures_sink=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libfutures_sink-7b8fe56e0ac86fd0.rmeta","--extern","log=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/liblog-06e09773a3633e88.rmeta","--extern","pin_project_lite=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libpin_project_lite-edd840e14ddf2b1f.rmeta","--extern","tokio=/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libtokio-0a5c7735a9fec495.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ayeen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ayeen/piaic/Quarter3/client-server/client-server/server/target/rls/debug/deps/libtokio_util-d0d9effbb08abda2.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[8918211926183584859,13609201909995639908]},"crate_root":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src","external_crates":[{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","num":15,"id":{"name":"futures_core","disambiguator":[6355392958590333347,8658035993768974256]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","num":16,"id":{"name":"tokio","disambiguator":[9446137399931027498,15956076130649653772]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[15649699270831883493,4107600799607912892]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","num":18,"id":{"name":"bytes","disambiguator":[10469414217249695206,12744635208089738798]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","num":19,"id":{"name":"memchr","disambiguator":[17588520053350620333,14094386727991713583]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","num":20,"id":{"name":"futures_sink","disambiguator":[18011462823937725691,13280342952808247559]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","num":21,"id":{"name":"log","disambiguator":[17835550197125769906,417537377187276701]}},{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","num":22,"id":{"name":"cfg_if","disambiguator":[12590448931978699531,2707295624415321777]}}],"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700984,"byte_end":8700994,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701033,"byte_end":8701040,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701079,"byte_end":8701086,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701248,"byte_end":8701254,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701256,"byte_end":8701267,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701315,"byte_end":8701325,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701374,"byte_end":8701385,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701447,"byte_end":8701467,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701469,"byte_end":8701494,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":759},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701543,"byte_end":8701553,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701555,"byte_end":8701570,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":6572,"byte_end":6589,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":6591,"byte_end":6616,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":6699,"byte_end":6712,"line_start":9,"line_end":9,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":6755,"byte_end":6772,"line_start":12,"line_end":12,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":11}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":300},{"krate":0,"index":11},{"krate":0,"index":228},{"krate":0,"index":275}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":416,"byte_end":453,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":454,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This crate is not versioned in lockstep with the core","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":458,"byte_end":515,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"! [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":516,"byte_end":580,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"! semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":581,"byte_end":656,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":657,"byte_end":660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":661,"byte_end":697,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":683}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/cfg.rs","byte_start":5512,"byte_end":5537,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690712,"byte_end":8690765,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690766,"byte_end":8690769,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690770,"byte_end":8690845,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690846,"byte_end":8690911,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690912,"byte_end":8690915,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690916,"byte_end":8690996,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8690997,"byte_end":8691072,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691073,"byte_end":8691121,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691122,"byte_end":8691125,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # The Decoder trait","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691126,"byte_end":8691149,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691150,"byte_end":8691153,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691154,"byte_end":8691233,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"! [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691234,"byte_end":8691313,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691314,"byte_end":8691385,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"! determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691386,"byte_end":8691456,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691457,"byte_end":8691535,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"! resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691536,"byte_end":8691612,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! decode another frame of data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691613,"byte_end":8691646,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691647,"byte_end":8691650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691651,"byte_end":8691731,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"! takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691732,"byte_end":8691812,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"! it will be in one of the following situations:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691813,"byte_end":8691863,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691864,"byte_end":8691867,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!  1. The buffer contains less than a full frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691868,"byte_end":8691919,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"!  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691920,"byte_end":8691969,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"!  3. The buffer contains more than a full frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8691970,"byte_end":8692021,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692022,"byte_end":8692025,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692026,"byte_end":8692091,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692092,"byte_end":8692095,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692096,"byte_end":8692173,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"! return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692174,"byte_end":8692215,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692216,"byte_end":8692219,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692220,"byte_end":8692300,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692301,"byte_end":8692380,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"! buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692381,"byte_end":8692459,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"! the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692460,"byte_end":8692539,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"! this case.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692540,"byte_end":8692554,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692555,"byte_end":8692558,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692559,"byte_end":8692638,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692639,"byte_end":8692718,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"! a full frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692719,"byte_end":8692736,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692737,"byte_end":8692740,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692741,"byte_end":8692818,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692819,"byte_end":8692898,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"! has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692899,"byte_end":8692976,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"! the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8692977,"byte_end":8693047,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"! essentially equivalent to the following loop:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693048,"byte_end":8693097,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693098,"byte_end":8693101,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693102,"byte_end":8693115,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"! use tokio::io::AsyncReadExt;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693116,"byte_end":8693148,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"! # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693149,"byte_end":8693216,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"! # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693217,"byte_end":8693331,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"! # use tokio_util::codec::Decoder;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693332,"byte_end":8693369,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"! # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693370,"byte_end":8693431,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"! # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693432,"byte_end":8693481,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693482,"byte_end":8693485,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693486,"byte_end":8693527,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"! loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693528,"byte_end":8693538,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"!     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693539,"byte_end":8693623,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"!     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693624,"byte_end":8693680,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693681,"byte_end":8693684,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"!     if len == 0 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693685,"byte_end":8693706,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"!         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693707,"byte_end":8693774,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"!             yield frame;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693775,"byte_end":8693803,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693804,"byte_end":8693817,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"!         break;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693818,"byte_end":8693836,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693837,"byte_end":8693846,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693847,"byte_end":8693850,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"!     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693851,"byte_end":8693910,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"!         yield frame;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693911,"byte_end":8693935,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693936,"byte_end":8693945,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693946,"byte_end":8693951,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"! # }}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693952,"byte_end":8693960,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693961,"byte_end":8693968,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"! The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8693969,"byte_end":8694043,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694044,"byte_end":8694047,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ## Example decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694048,"byte_end":8694070,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694071,"byte_end":8694074,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694075,"byte_end":8694152,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"! each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694153,"byte_end":8694229,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"! followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694230,"byte_end":8694309,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"! if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694310,"byte_end":8694364,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694365,"byte_end":8694368,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! Such a decoder can be written like this:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694369,"byte_end":8694413,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694414,"byte_end":8694421,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! use tokio_util::codec::Decoder;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694422,"byte_end":8694457,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"! use bytes::{BytesMut, Buf};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694458,"byte_end":8694489,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694490,"byte_end":8694493,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! struct MyStringDecoder {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694494,"byte_end":8694523,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694524,"byte_end":8694527,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694528,"byte_end":8694567,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694568,"byte_end":8694571,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! impl Decoder for MyStringDecoder {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694572,"byte_end":8694610,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"!     type Item = String;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694611,"byte_end":8694638,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"!     type Error = std::io::Error;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694639,"byte_end":8694675,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694676,"byte_end":8694679,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"!     fn decode(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694680,"byte_end":8694698,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"!         &mut self,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694699,"byte_end":8694721,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"!         src: &mut BytesMut","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694722,"byte_end":8694752,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"!     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694753,"byte_end":8694807,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"!         if src.len() < 4 {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694808,"byte_end":8694838,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"!             // Not enough data to read length marker.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694839,"byte_end":8694896,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"!             return Ok(None);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694897,"byte_end":8694929,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694930,"byte_end":8694943,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694944,"byte_end":8694947,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"!         // Read length marker.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694948,"byte_end":8694982,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"!         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8694983,"byte_end":8695027,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"!         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695028,"byte_end":8695080,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"!         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695081,"byte_end":8695148,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695149,"byte_end":8695152,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695153,"byte_end":8695227,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"!         // service attack where the server runs out of memory.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695228,"byte_end":8695294,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"!         if length > MAX {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695295,"byte_end":8695324,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"!             return Err(std::io::Error::new(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695325,"byte_end":8695372,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"!                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695373,"byte_end":8695425,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"!                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695426,"byte_end":8695497,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"!             ));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695498,"byte_end":8695517,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695518,"byte_end":8695531,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695532,"byte_end":8695535,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"!         if src.len() < 4 + length {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695536,"byte_end":8695575,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"!             // The full string has not yet arrived.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695576,"byte_end":8695631,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"!             //","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695632,"byte_end":8695650,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"!             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695651,"byte_end":8695727,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"!             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695728,"byte_end":8695794,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"!             src.reserve(4 + length - src.len());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695795,"byte_end":8695847,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695848,"byte_end":8695851,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"!             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695852,"byte_end":8695932,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"!             // frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695933,"byte_end":8695958,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"!             return Ok(None);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695959,"byte_end":8695991,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8695992,"byte_end":8696005,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696006,"byte_end":8696009,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"!         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696010,"byte_end":8696082,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"!         // this frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696083,"byte_end":8696109,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"!         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696110,"byte_end":8696161,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"!         src.advance(4 + length);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696162,"byte_end":8696198,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696199,"byte_end":8696202,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"!         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696203,"byte_end":8696281,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"!         match String::from_utf8(data) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696282,"byte_end":8696325,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"!             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696326,"byte_end":8696373,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"!             Err(utf8_error) => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696374,"byte_end":8696410,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"!                 Err(std::io::Error::new(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696411,"byte_end":8696455,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"!                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696456,"byte_end":8696512,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"!                     utf8_error.utf8_error(),","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696513,"byte_end":8696561,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"!                 ))","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696562,"byte_end":8696584,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"!             },","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696585,"byte_end":8696603,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696604,"byte_end":8696617,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696618,"byte_end":8696627,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696628,"byte_end":8696633,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696634,"byte_end":8696641,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696642,"byte_end":8696645,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! # The Encoder trait","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696646,"byte_end":8696669,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696670,"byte_end":8696673,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696674,"byte_end":8696752,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"! an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696753,"byte_end":8696826,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"! specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696827,"byte_end":8696903,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"! `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696904,"byte_end":8696984,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"! IO resource.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8696985,"byte_end":8697001,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697002,"byte_end":8697005,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697006,"byte_end":8697086,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697087,"byte_end":8697166,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697167,"byte_end":8697247,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"! the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697248,"byte_end":8697320,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697321,"byte_end":8697324,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697325,"byte_end":8697402,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"! buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697403,"byte_end":8697481,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"! data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697482,"byte_end":8697555,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"! `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697556,"byte_end":8697622,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697623,"byte_end":8697626,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697627,"byte_end":8697640,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"! use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697641,"byte_end":8697674,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"! use bytes::Buf; // for advance","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697675,"byte_end":8697709,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"! # use tokio_util::codec::Encoder;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697710,"byte_end":8697747,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"! # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697748,"byte_end":8697815,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"! # async fn no_more_frames() { }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697816,"byte_end":8697851,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"! # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697852,"byte_end":8697913,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"! # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697914,"byte_end":8697960,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"! # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8697961,"byte_end":8698022,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698023,"byte_end":8698026,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"! const MAX: usize = 8192;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698027,"byte_end":8698055,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698056,"byte_end":8698059,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698060,"byte_end":8698101,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"! loop {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698102,"byte_end":8698112,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"!     tokio::select! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698113,"byte_end":8698137,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"!         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698138,"byte_end":8698212,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"!             buf.advance(num_written?);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698213,"byte_end":8698255,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"!         },","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698256,"byte_end":8698270,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"!         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698271,"byte_end":8698328,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"!             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698329,"byte_end":8698378,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"!         },","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698379,"byte_end":8698393,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"!         _ = no_more_frames() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698394,"byte_end":8698431,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"!             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698432,"byte_end":8698483,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"!             io_resource.shutdown().await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698484,"byte_end":8698530,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"!             return Ok(());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698531,"byte_end":8698561,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"!         },","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698562,"byte_end":8698576,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698577,"byte_end":8698586,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698587,"byte_end":8698592,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698593,"byte_end":8698600,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698601,"byte_end":8698608,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"! Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698609,"byte_end":8698684,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"! `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698685,"byte_end":8698758,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"! `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698759,"byte_end":8698801,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698802,"byte_end":8698805,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! ## Example encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698806,"byte_end":8698828,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698829,"byte_end":8698832,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"! As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698833,"byte_end":8698910,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"! each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698911,"byte_end":8698987,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"! followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8698988,"byte_end":8699064,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"! string is too long.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699065,"byte_end":8699088,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699089,"byte_end":8699092,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"! Such an encoder can be written like this:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699093,"byte_end":8699138,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699139,"byte_end":8699146,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"! use tokio_util::codec::Encoder;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699147,"byte_end":8699182,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"! use bytes::BytesMut;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699183,"byte_end":8699207,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699208,"byte_end":8699211,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! struct MyStringEncoder {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699212,"byte_end":8699241,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699242,"byte_end":8699245,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699246,"byte_end":8699285,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699286,"byte_end":8699289,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699290,"byte_end":8699336,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"!     type Error = std::io::Error;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699337,"byte_end":8699373,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699374,"byte_end":8699377,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"!     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699378,"byte_end":8699469,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"!         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699470,"byte_end":8699544,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"!         // accept.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699545,"byte_end":8699567,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"!         if item.len() > MAX {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699568,"byte_end":8699601,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"!             return Err(std::io::Error::new(","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699602,"byte_end":8699649,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"!                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699650,"byte_end":8699702,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"!                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699703,"byte_end":8699778,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"!             ));","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699779,"byte_end":8699798,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699799,"byte_end":8699812,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699813,"byte_end":8699816,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"!         // Convert the length into a byte array.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699817,"byte_end":8699869,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"!         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699870,"byte_end":8699947,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"!         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8699948,"byte_end":8700012,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700013,"byte_end":8700016,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"!         // Reserve space in the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700017,"byte_end":8700060,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"!         dst.reserve(4 + item.len());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700061,"byte_end":8700101,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700102,"byte_end":8700105,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"!         // Write the length and string to the buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700106,"byte_end":8700163,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"!         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700164,"byte_end":8700210,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"!         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700211,"byte_end":8700262,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"!         Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700263,"byte_end":8700281,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700282,"byte_end":8700291,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700292,"byte_end":8700297,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700298,"byte_end":8700305,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700306,"byte_end":8700309,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700310,"byte_end":8700349,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700350,"byte_end":8700391,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"! [`Stream`]: futures_core::Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700392,"byte_end":8700428,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"! [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700429,"byte_end":8700461,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"! [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700462,"byte_end":8700558,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"! [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700559,"byte_end":8700610,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"! [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700611,"byte_end":8700664,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"! [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700665,"byte_end":8700708,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"! [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700709,"byte_end":8700753,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"! [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700754,"byte_end":8700802,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"! [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700803,"byte_end":8700851,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"! [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700852,"byte_end":8700898,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"! [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8700899,"byte_end":8700938,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702856,"byte_end":8702866,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701699,"byte_end":8701784,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701785,"byte_end":8701788,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701789,"byte_end":8701827,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701828,"byte_end":8701866,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701867,"byte_end":8701870,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701871,"byte_end":8701884,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701885,"byte_end":8701888,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701889,"byte_end":8701970,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701971,"byte_end":8701974,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8701975,"byte_end":8702014,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702015,"byte_end":8702048,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702049,"byte_end":8702078,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702079,"byte_end":8702082,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702083,"byte_end":8702090,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702091,"byte_end":8702109,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702110,"byte_end":8702140,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702141,"byte_end":8702165,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702166,"byte_end":8702173,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702174,"byte_end":8702203,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702204,"byte_end":8702256,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702257,"byte_end":8702260,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702261,"byte_end":8702279,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702280,"byte_end":8702297,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702298,"byte_end":8702378,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702379,"byte_end":8702413,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702414,"byte_end":8702467,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702468,"byte_end":8702479,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702480,"byte_end":8702487,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702488,"byte_end":8702493,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702494,"byte_end":8702541,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702542,"byte_end":8702595,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702596,"byte_end":8702654,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702655,"byte_end":8702734,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702735,"byte_end":8702747,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702748,"byte_end":8702755,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702756,"byte_end":8702763,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702764,"byte_end":8702767,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702968,"byte_end":8702971,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702895,"byte_end":8702956,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704283,"byte_end":8704290,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703686,"byte_end":8703721,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703722,"byte_end":8703725,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703726,"byte_end":8703795,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703796,"byte_end":8703875,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703876,"byte_end":8703948,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703949,"byte_end":8703973,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703974,"byte_end":8703977,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8703978,"byte_end":8704046,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704047,"byte_end":8704124,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704125,"byte_end":8704186,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704187,"byte_end":8704190,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704191,"byte_end":8704227,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704228,"byte_end":8704272,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":327},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704338,"byte_end":8704342,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704297,"byte_end":8704328,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705108,"byte_end":8705113,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704349,"byte_end":8704401,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704406,"byte_end":8704409,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704414,"byte_end":8704483,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704488,"byte_end":8704558,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704563,"byte_end":8704609,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704614,"byte_end":8704617,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704622,"byte_end":8704698,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704703,"byte_end":8704778,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704783,"byte_end":8704858,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704863,"byte_end":8704903,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704908,"byte_end":8704911,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704916,"byte_end":8704990,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8704995,"byte_end":8705041,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705046,"byte_end":8705049,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705054,"byte_end":8705098,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708049,"byte_end":8708055,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705137,"byte_end":8705202,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705207,"byte_end":8705210,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705215,"byte_end":8705289,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705294,"byte_end":8705366,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705371,"byte_end":8705444,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705449,"byte_end":8705492,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705497,"byte_end":8705500,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705505,"byte_end":8705578,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705583,"byte_end":8705646,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705651,"byte_end":8705726,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705731,"byte_end":8705806,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705811,"byte_end":8705834,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705839,"byte_end":8705842,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705847,"byte_end":8705919,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8705924,"byte_end":8705998,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706003,"byte_end":8706073,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706078,"byte_end":8706081,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706086,"byte_end":8706154,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706159,"byte_end":8706230,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706235,"byte_end":8706315,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706320,"byte_end":8706332,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706337,"byte_end":8706340,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706345,"byte_end":8706415,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706420,"byte_end":8706495,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706500,"byte_end":8706537,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706542,"byte_end":8706545,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706550,"byte_end":8706586,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706591,"byte_end":8706635,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706640,"byte_end":8706643,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706648,"byte_end":8706671,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706676,"byte_end":8706679,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706684,"byte_end":8706758,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706763,"byte_end":8706837,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706842,"byte_end":8706895,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706900,"byte_end":8706903,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706908,"byte_end":8706979,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8706984,"byte_end":8707054,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707059,"byte_end":8707075,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707080,"byte_end":8707083,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707088,"byte_end":8707101,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707106,"byte_end":8707124,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707129,"byte_end":8707134,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707139,"byte_end":8707165,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707170,"byte_end":8707207,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707212,"byte_end":8707217,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707222,"byte_end":8707243,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707248,"byte_end":8707253,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707258,"byte_end":8707288,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707293,"byte_end":8707307,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707312,"byte_end":8707343,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707348,"byte_end":8707381,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707386,"byte_end":8707389,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707394,"byte_end":8707487,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707492,"byte_end":8707510,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707515,"byte_end":8707518,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707523,"byte_end":8707595,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707600,"byte_end":8707660,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707665,"byte_end":8707717,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707722,"byte_end":8707784,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707789,"byte_end":8707856,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707861,"byte_end":8707864,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707869,"byte_end":8707897,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707902,"byte_end":8707911,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707916,"byte_end":8707921,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707926,"byte_end":8707933,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707938,"byte_end":8707941,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8707946,"byte_end":8708015,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708020,"byte_end":8708041,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708914,"byte_end":8708924,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708136,"byte_end":8708208,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708213,"byte_end":8708262,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708267,"byte_end":8708270,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708275,"byte_end":8708343,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708348,"byte_end":8708415,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708420,"byte_end":8708488,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708493,"byte_end":8708541,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708546,"byte_end":8708549,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708554,"byte_end":8708622,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708627,"byte_end":8708702,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708707,"byte_end":8708782,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708787,"byte_end":8708859,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8708864,"byte_end":8708906,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710532,"byte_end":8710538,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709342,"byte_end":8709422,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709427,"byte_end":8709503,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709508,"byte_end":8709511,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709516,"byte_end":8709591,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709596,"byte_end":8709666,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709671,"byte_end":8709742,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709747,"byte_end":8709819,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709824,"byte_end":8709882,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709887,"byte_end":8709890,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709895,"byte_end":8709964,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8709969,"byte_end":8710044,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710049,"byte_end":8710125,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710130,"byte_end":8710152,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710157,"byte_end":8710160,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710165,"byte_end":8710238,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710243,"byte_end":8710316,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710321,"byte_end":8710397,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710402,"byte_end":8710405,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710410,"byte_end":8710446,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710451,"byte_end":8710483,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/decoder.rs","byte_start":8710488,"byte_end":8710524,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710872,"byte_end":8710879,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710717,"byte_end":8710789,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710790,"byte_end":8710810,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710811,"byte_end":8710814,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710815,"byte_end":8710861,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":339},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711144,"byte_end":8711149,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710892,"byte_end":8710924,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710929,"byte_end":8710932,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8710937,"byte_end":8711014,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711019,"byte_end":8711075,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711080,"byte_end":8711083,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711088,"byte_end":8711134,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711500,"byte_end":8711506,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711173,"byte_end":8711218,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711223,"byte_end":8711226,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711231,"byte_end":8711305,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711310,"byte_end":8711390,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711395,"byte_end":8711433,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711438,"byte_end":8711441,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/encoder.rs","byte_start":8711446,"byte_end":8711492,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8718687,"byte_end":8718693,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720176,"byte_end":8720179,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8718835,"byte_end":8718915,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8718920,"byte_end":8719001,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719006,"byte_end":8719009,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719014,"byte_end":8719089,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719094,"byte_end":8719164,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719169,"byte_end":8719238,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719243,"byte_end":8719315,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719320,"byte_end":8719378,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719383,"byte_end":8719386,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719391,"byte_end":8719462,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719467,"byte_end":8719544,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719549,"byte_end":8719625,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719630,"byte_end":8719652,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719657,"byte_end":8719660,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719665,"byte_end":8719738,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719743,"byte_end":8719816,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719821,"byte_end":8719897,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719902,"byte_end":8719905,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719910,"byte_end":8719946,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719951,"byte_end":8719983,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8719988,"byte_end":8720025,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720030,"byte_end":8720068,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720073,"byte_end":8720164,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721787,"byte_end":8721800,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn (inner: T, codec: U, capacity: usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720392,"byte_end":8720472,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720477,"byte_end":8720558,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720563,"byte_end":8720612,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720617,"byte_end":8720620,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720625,"byte_end":8720700,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720705,"byte_end":8720775,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720780,"byte_end":8720849,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720854,"byte_end":8720926,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720931,"byte_end":8720989,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8720994,"byte_end":8720997,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721002,"byte_end":8721073,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721078,"byte_end":8721155,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721160,"byte_end":8721236,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721241,"byte_end":8721263,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721268,"byte_end":8721271,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721276,"byte_end":8721349,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721354,"byte_end":8721427,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721432,"byte_end":8721508,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721513,"byte_end":8721516,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721521,"byte_end":8721557,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721562,"byte_end":8721594,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721599,"byte_end":8721636,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721641,"byte_end":8721679,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8721684,"byte_end":8721775,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723903,"byte_end":8723913,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722326,"byte_end":8722406,"line_start":113,"line_end":113,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722411,"byte_end":8722492,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722497,"byte_end":8722500,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722505,"byte_end":8722580,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722585,"byte_end":8722655,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722660,"byte_end":8722731,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722736,"byte_end":8722808,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722813,"byte_end":8722871,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722876,"byte_end":8722879,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722884,"byte_end":8722955,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722960,"byte_end":8723037,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723042,"byte_end":8723118,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723123,"byte_end":8723145,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723150,"byte_end":8723153,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723158,"byte_end":8723237,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723242,"byte_end":8723319,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723324,"byte_end":8723327,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723332,"byte_end":8723405,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723410,"byte_end":8723483,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723488,"byte_end":8723564,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723569,"byte_end":8723572,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723577,"byte_end":8723613,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723618,"byte_end":8723650,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723655,"byte_end":8723693,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723698,"byte_end":8723736,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723741,"byte_end":8723795,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8723800,"byte_end":8723891,"line_start":139,"line_end":139,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724548,"byte_end":8724555,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724265,"byte_end":8724328,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724333,"byte_end":8724346,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724351,"byte_end":8724354,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724359,"byte_end":8724434,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724439,"byte_end":8724509,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724514,"byte_end":8724536,"line_start":158,"line_end":158,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724899,"byte_end":8724906,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724608,"byte_end":8724679,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724684,"byte_end":8724697,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724702,"byte_end":8724705,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724710,"byte_end":8724785,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724790,"byte_end":8724860,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724865,"byte_end":8724887,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725269,"byte_end":8725280,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8724971,"byte_end":8725049,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725054,"byte_end":8725067,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725072,"byte_end":8725075,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725080,"byte_end":8725155,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725160,"byte_end":8725230,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725235,"byte_end":8725257,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725627,"byte_end":8725632,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725376,"byte_end":8725434,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725439,"byte_end":8725452,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725457,"byte_end":8725460,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725465,"byte_end":8725539,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725544,"byte_end":8725615,"line_start":187,"line_end":187,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725944,"byte_end":8725953,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725685,"byte_end":8725751,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725756,"byte_end":8725769,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725774,"byte_end":8725777,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725782,"byte_end":8725856,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8725861,"byte_end":8725932,"line_start":196,"line_end":196,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726073,"byte_end":8726084,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726018,"byte_end":8726061,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726219,"byte_end":8726234,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn (&mut self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726156,"byte_end":8726207,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726374,"byte_end":8726386,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726318,"byte_end":8726362,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726523,"byte_end":8726539,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn (&mut self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726459,"byte_end":8726511,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726889,"byte_end":8726899,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726624,"byte_end":8726687,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726692,"byte_end":8726695,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726700,"byte_end":8726775,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726780,"byte_end":8726850,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726855,"byte_end":8726877,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727271,"byte_end":8727281,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8726949,"byte_end":8727023,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727028,"byte_end":8727069,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727074,"byte_end":8727077,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727082,"byte_end":8727157,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727162,"byte_end":8727232,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727237,"byte_end":8727259,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729255,"byte_end":8729266,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8728940,"byte_end":8729011,"line_start":299,"line_end":299,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729012,"byte_end":8729084,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729085,"byte_end":8729145,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729146,"byte_end":8729149,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729150,"byte_end":8729186,"line_start":303,"line_end":303,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729204,"byte_end":8729243,"line_start":305,"line_end":305,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729352,"byte_end":8729354,"line_start":308,"line_end":308,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729279,"byte_end":8729343,"line_start":307,"line_end":307,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729386,"byte_end":8729391,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729364,"byte_end":8729377,"line_start":310,"line_end":310,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":724},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729456,"byte_end":8729464,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729401,"byte_end":8729447,"line_start":313,"line_end":313,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":725},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729551,"byte_end":8729560,"line_start":317,"line_end":317,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729481,"byte_end":8729542,"line_start":316,"line_end":316,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729793,"byte_end":8729796,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn <I> (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729741,"byte_end":8729781,"line_start":325,"line_end":325,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":930},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8730525,"byte_end":8730535,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":933}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8730786,"byte_end":8730789,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8730718,"byte_end":8730774,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731137,"byte_end":8731150,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn (inner: T, decoder: D, capacity: usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731021,"byte_end":8731103,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731108,"byte_end":8731125,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731864,"byte_end":8731871,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731577,"byte_end":8731640,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731645,"byte_end":8731662,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731667,"byte_end":8731670,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731675,"byte_end":8731750,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731755,"byte_end":8731825,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731830,"byte_end":8731852,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732219,"byte_end":8732226,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731924,"byte_end":8731995,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732000,"byte_end":8732017,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732022,"byte_end":8732025,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732030,"byte_end":8732105,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732110,"byte_end":8732180,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732185,"byte_end":8732207,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732593,"byte_end":8732604,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732291,"byte_end":8732369,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732374,"byte_end":8732391,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732396,"byte_end":8732399,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732404,"byte_end":8732479,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732484,"byte_end":8732554,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732559,"byte_end":8732581,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732969,"byte_end":8732979,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732700,"byte_end":8732767,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732772,"byte_end":8732775,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732780,"byte_end":8732855,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732860,"byte_end":8732930,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8732935,"byte_end":8732957,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733091,"byte_end":8733098,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733029,"byte_end":8733079,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733221,"byte_end":8733232,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733151,"byte_end":8733209,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733352,"byte_end":8733363,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733297,"byte_end":8733340,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733493,"byte_end":8733508,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn (&mut self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733430,"byte_end":8733481,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":889},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8735609,"byte_end":8735620,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":892}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8735827,"byte_end":8735830,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8735758,"byte_end":8735815,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736388,"byte_end":8736395,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736100,"byte_end":8736163,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736168,"byte_end":8736186,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736191,"byte_end":8736194,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736199,"byte_end":8736274,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736279,"byte_end":8736349,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736354,"byte_end":8736376,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736744,"byte_end":8736751,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736448,"byte_end":8736519,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736524,"byte_end":8736542,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736547,"byte_end":8736550,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736555,"byte_end":8736630,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736635,"byte_end":8736705,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736710,"byte_end":8736732,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737119,"byte_end":8737130,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736816,"byte_end":8736894,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736899,"byte_end":8736917,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736922,"byte_end":8736925,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736930,"byte_end":8737005,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737010,"byte_end":8737080,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737085,"byte_end":8737107,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737496,"byte_end":8737506,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737226,"byte_end":8737294,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737299,"byte_end":8737302,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737307,"byte_end":8737382,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737387,"byte_end":8737457,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737462,"byte_end":8737484,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737618,"byte_end":8737625,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737556,"byte_end":8737606,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737748,"byte_end":8737759,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737678,"byte_end":8737736,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737880,"byte_end":8737892,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737824,"byte_end":8737868,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8738023,"byte_end":8738039,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn (&mut self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8737959,"byte_end":8738011,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":576},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":731},{"krate":0,"index":741},{"krate":0,"index":739},{"krate":0,"index":738},{"krate":0,"index":598},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":757},{"krate":0,"index":755},{"krate":0,"index":754},{"krate":0,"index":600},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739566,"byte_end":8739618,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739619,"byte_end":8739622,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739623,"byte_end":8739693,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739694,"byte_end":8739752,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739753,"byte_end":8739825,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739826,"byte_end":8739896,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739897,"byte_end":8739964,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739965,"byte_end":8739968,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739969,"byte_end":8739990,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739991,"byte_end":8739994,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8739995,"byte_end":8740070,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740071,"byte_end":8740142,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740143,"byte_end":8740214,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740215,"byte_end":8740285,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740286,"byte_end":8740326,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740327,"byte_end":8740330,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740331,"byte_end":8740338,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740339,"byte_end":8740382,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740383,"byte_end":8740441,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740442,"byte_end":8740445,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740446,"byte_end":8740501,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740502,"byte_end":8740544,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740545,"byte_end":8740550,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740551,"byte_end":8740603,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740604,"byte_end":8740609,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740610,"byte_end":8740632,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740633,"byte_end":8740640,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740641,"byte_end":8740644,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740645,"byte_end":8740717,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740718,"byte_end":8740789,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740790,"byte_end":8740809,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740810,"byte_end":8740813,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740814,"byte_end":8740825,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740826,"byte_end":8740875,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740876,"byte_end":8740925,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740926,"byte_end":8740975,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740976,"byte_end":8740983,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740984,"byte_end":8740987,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8740988,"byte_end":8741026,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741027,"byte_end":8741030,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741031,"byte_end":8741038,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741039,"byte_end":8741082,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741083,"byte_end":8741141,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741142,"byte_end":8741145,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741146,"byte_end":8741171,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741172,"byte_end":8741193,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741194,"byte_end":8741197,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741198,"byte_end":8741274,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741275,"byte_end":8741284,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741285,"byte_end":8741327,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741328,"byte_end":8741333,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741334,"byte_end":8741407,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741408,"byte_end":8741455,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741456,"byte_end":8741459,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741460,"byte_end":8741497,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741498,"byte_end":8741512,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741513,"byte_end":8741518,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741519,"byte_end":8741526,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741527,"byte_end":8741530,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741531,"byte_end":8741573,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741574,"byte_end":8741577,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741578,"byte_end":8741589,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741590,"byte_end":8741629,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741630,"byte_end":8741669,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741670,"byte_end":8741709,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741710,"byte_end":8741717,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741718,"byte_end":8741721,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741722,"byte_end":8741736,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741737,"byte_end":8741740,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741741,"byte_end":8741816,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741817,"byte_end":8741890,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741891,"byte_end":8741957,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8741958,"byte_end":8742027,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742028,"byte_end":8742093,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742094,"byte_end":8742097,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742098,"byte_end":8742114,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742115,"byte_end":8742118,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742119,"byte_end":8742195,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742196,"byte_end":8742237,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742238,"byte_end":8742241,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742242,"byte_end":8742249,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742250,"byte_end":8742281,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742282,"byte_end":8742332,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742333,"byte_end":8742374,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742375,"byte_end":8742410,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742411,"byte_end":8742459,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742460,"byte_end":8742491,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742492,"byte_end":8742540,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742541,"byte_end":8742590,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742591,"byte_end":8742613,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742614,"byte_end":8742621,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742622,"byte_end":8742644,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742645,"byte_end":8742652,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742653,"byte_end":8742656,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742657,"byte_end":8742705,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742706,"byte_end":8742709,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742710,"byte_end":8742721,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742722,"byte_end":8742774,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742775,"byte_end":8742840,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742841,"byte_end":8742906,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742907,"byte_end":8742972,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742973,"byte_end":8742980,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742981,"byte_end":8742984,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8742985,"byte_end":8743061,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743062,"byte_end":8743136,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743137,"byte_end":8743209,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743210,"byte_end":8743286,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743287,"byte_end":8743329,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743330,"byte_end":8743333,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743334,"byte_end":8743350,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743351,"byte_end":8743354,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743355,"byte_end":8743430,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743431,"byte_end":8743472,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743473,"byte_end":8743476,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743477,"byte_end":8743484,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743485,"byte_end":8743516,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743517,"byte_end":8743567,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743568,"byte_end":8743609,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743610,"byte_end":8743645,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743646,"byte_end":8743694,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743695,"byte_end":8743726,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743727,"byte_end":8743775,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743776,"byte_end":8743835,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743836,"byte_end":8743858,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743859,"byte_end":8743866,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743867,"byte_end":8743889,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743890,"byte_end":8743897,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743898,"byte_end":8743901,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743902,"byte_end":8743950,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743951,"byte_end":8743954,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743955,"byte_end":8743966,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8743967,"byte_end":8744016,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744017,"byte_end":8744071,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744072,"byte_end":8744126,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744127,"byte_end":8744181,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744182,"byte_end":8744189,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744190,"byte_end":8744193,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744194,"byte_end":8744267,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744268,"byte_end":8744335,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744336,"byte_end":8744339,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744340,"byte_end":8744356,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744357,"byte_end":8744360,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744361,"byte_end":8744437,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744438,"byte_end":8744510,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744511,"byte_end":8744550,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744551,"byte_end":8744554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744555,"byte_end":8744562,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744563,"byte_end":8744594,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744595,"byte_end":8744645,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744646,"byte_end":8744687,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744688,"byte_end":8744723,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744724,"byte_end":8744772,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744773,"byte_end":8744804,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744805,"byte_end":8744852,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744853,"byte_end":8744873,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744874,"byte_end":8744896,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744897,"byte_end":8744904,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744905,"byte_end":8744927,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744928,"byte_end":8744935,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744936,"byte_end":8744939,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744940,"byte_end":8744988,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744989,"byte_end":8744992,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8744993,"byte_end":8745004,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745005,"byte_end":8745057,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745058,"byte_end":8745123,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745124,"byte_end":8745189,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745190,"byte_end":8745255,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745256,"byte_end":8745263,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745264,"byte_end":8745267,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745268,"byte_end":8745340,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745341,"byte_end":8745416,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745417,"byte_end":8745489,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745490,"byte_end":8745566,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745567,"byte_end":8745640,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745641,"byte_end":8745644,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745645,"byte_end":8745661,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745662,"byte_end":8745665,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745666,"byte_end":8745740,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745741,"byte_end":8745808,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745809,"byte_end":8745812,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745813,"byte_end":8745820,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745821,"byte_end":8745852,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745853,"byte_end":8745903,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745904,"byte_end":8745945,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745946,"byte_end":8745981,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8745982,"byte_end":8746030,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746031,"byte_end":8746062,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746063,"byte_end":8746111,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746112,"byte_end":8746132,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746133,"byte_end":8746155,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746156,"byte_end":8746163,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746164,"byte_end":8746186,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746187,"byte_end":8746194,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746195,"byte_end":8746198,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746199,"byte_end":8746247,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746248,"byte_end":8746251,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746252,"byte_end":8746263,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746264,"byte_end":8746290,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746291,"byte_end":8746336,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746337,"byte_end":8746382,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746383,"byte_end":8746428,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746429,"byte_end":8746432,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746433,"byte_end":8746461,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746462,"byte_end":8746507,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746508,"byte_end":8746553,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746554,"byte_end":8746599,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746600,"byte_end":8746607,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746608,"byte_end":8746611,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746612,"byte_end":8746684,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746685,"byte_end":8746761,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746762,"byte_end":8746832,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746833,"byte_end":8746902,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746903,"byte_end":8746940,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746941,"byte_end":8746944,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8746945,"byte_end":8747019,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747020,"byte_end":8747074,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747075,"byte_end":8747078,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747079,"byte_end":8747095,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747096,"byte_end":8747099,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747100,"byte_end":8747173,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747174,"byte_end":8747250,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747251,"byte_end":8747325,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747326,"byte_end":8747339,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747340,"byte_end":8747343,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747344,"byte_end":8747351,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747352,"byte_end":8747383,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747384,"byte_end":8747434,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747435,"byte_end":8747476,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747477,"byte_end":8747512,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747513,"byte_end":8747562,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747563,"byte_end":8747594,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747595,"byte_end":8747643,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747644,"byte_end":8747688,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747689,"byte_end":8747711,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747712,"byte_end":8747719,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747720,"byte_end":8747742,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747743,"byte_end":8747750,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747751,"byte_end":8747754,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747755,"byte_end":8747803,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747804,"byte_end":8747807,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747808,"byte_end":8747819,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747820,"byte_end":8747846,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747847,"byte_end":8747897,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747898,"byte_end":8747948,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8747949,"byte_end":8747999,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748000,"byte_end":8748003,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748004,"byte_end":8748024,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748025,"byte_end":8748055,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748056,"byte_end":8748086,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748087,"byte_end":8748117,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748118,"byte_end":8748125,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748126,"byte_end":8748129,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748130,"byte_end":8748203,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748204,"byte_end":8748279,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748280,"byte_end":8748352,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748353,"byte_end":8748391,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748392,"byte_end":8748395,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748396,"byte_end":8748470,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748471,"byte_end":8748547,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748548,"byte_end":8748621,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748622,"byte_end":8748650,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748651,"byte_end":8748654,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748655,"byte_end":8748671,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748672,"byte_end":8748675,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748676,"byte_end":8748749,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748750,"byte_end":8748826,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748827,"byte_end":8748901,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748902,"byte_end":8748974,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748975,"byte_end":8748986,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748987,"byte_end":8748990,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748991,"byte_end":8748998,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8748999,"byte_end":8749030,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749031,"byte_end":8749081,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749082,"byte_end":8749123,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749124,"byte_end":8749159,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749160,"byte_end":8749209,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749210,"byte_end":8749241,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749242,"byte_end":8749307,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749308,"byte_end":8749328,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749329,"byte_end":8749351,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749352,"byte_end":8749359,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749360,"byte_end":8749367,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749368,"byte_end":8749371,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749372,"byte_end":8749420,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749421,"byte_end":8749424,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749425,"byte_end":8749436,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749437,"byte_end":8749463,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749464,"byte_end":8749514,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749515,"byte_end":8749565,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749566,"byte_end":8749616,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749617,"byte_end":8749620,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749621,"byte_end":8749641,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749642,"byte_end":8749672,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749673,"byte_end":8749703,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749704,"byte_end":8749734,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749735,"byte_end":8749742,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749743,"byte_end":8749746,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749747,"byte_end":8749820,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749821,"byte_end":8749895,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749896,"byte_end":8749970,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8749971,"byte_end":8750044,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750045,"byte_end":8750121,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750122,"byte_end":8750155,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750156,"byte_end":8750159,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! ## Example 7","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750160,"byte_end":8750176,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750177,"byte_end":8750180,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750181,"byte_end":8750255,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"! frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750256,"byte_end":8750323,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750324,"byte_end":8750327,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750328,"byte_end":8750335,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750336,"byte_end":8750367,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750368,"byte_end":8750418,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750419,"byte_end":8750460,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750461,"byte_end":8750496,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750497,"byte_end":8750545,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750546,"byte_end":8750577,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)  // default value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750578,"byte_end":8750625,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"!     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750626,"byte_end":8750672,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"!     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750673,"byte_end":8750695,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750696,"byte_end":8750703,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750704,"byte_end":8750726,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750727,"byte_end":8750734,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750735,"byte_end":8750738,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750739,"byte_end":8750787,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750788,"byte_end":8750791,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750792,"byte_end":8750803,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"!                  INPUT                       DECODED","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750804,"byte_end":8750860,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"! +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750861,"byte_end":8750922,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"! | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750923,"byte_end":8750984,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"! +------------------+---------------+    +---------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8750985,"byte_end":8751046,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751047,"byte_end":8751054,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751055,"byte_end":8751058,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"! A simple example where there are unused bytes between the length field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751059,"byte_end":8751133,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"! and the payload.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751134,"byte_end":8751154,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751155,"byte_end":8751158,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751159,"byte_end":8751173,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751174,"byte_end":8751177,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751178,"byte_end":8751253,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751254,"byte_end":8751326,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751327,"byte_end":8751395,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751396,"byte_end":8751472,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751473,"byte_end":8751514,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751515,"byte_end":8751518,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751519,"byte_end":8751589,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751590,"byte_end":8751608,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751609,"byte_end":8751612,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751613,"byte_end":8751620,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751621,"byte_end":8751653,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751654,"byte_end":8751704,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751705,"byte_end":8751749,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751750,"byte_end":8751763,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751764,"byte_end":8751799,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751800,"byte_end":8751831,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751832,"byte_end":8751855,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751856,"byte_end":8751863,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751864,"byte_end":8751886,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751887,"byte_end":8751894,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751895,"byte_end":8751898,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751899,"byte_end":8751949,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751950,"byte_end":8751953,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751954,"byte_end":8751965,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8751966,"byte_end":8751999,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752000,"byte_end":8752033,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752034,"byte_end":8752067,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752068,"byte_end":8752075,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752076,"byte_end":8752079,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752080,"byte_end":8752149,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"! [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752150,"byte_end":8752187,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"! [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752188,"byte_end":8752227,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"! [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752228,"byte_end":8752273,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752274,"byte_end":8752321,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: trait@Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752322,"byte_end":8752352,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"! [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752353,"byte_end":8752386,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752948,"byte_end":8752955,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752630,"byte_end":8752685,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752686,"byte_end":8752689,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752690,"byte_end":8752765,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752766,"byte_end":8752846,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8752847,"byte_end":8752906,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753626,"byte_end":8753651,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":599}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753541,"byte_end":8753614,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753996,"byte_end":8754016,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753672,"byte_end":8753746,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753747,"byte_end":8753750,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753751,"byte_end":8753830,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753831,"byte_end":8753874,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753875,"byte_end":8753878,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753879,"byte_end":8753932,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753933,"byte_end":8753936,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8753937,"byte_end":8753967,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754360,"byte_end":8754363,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754269,"byte_end":8754348,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754590,"byte_end":8754597,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754487,"byte_end":8754562,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754567,"byte_end":8754578,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754819,"byte_end":8754835,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754647,"byte_end":8754688,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754693,"byte_end":8754696,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754701,"byte_end":8754774,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754779,"byte_end":8754807,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8755256,"byte_end":8755276,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754900,"byte_end":8754934,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754939,"byte_end":8754942,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754947,"byte_end":8755017,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8755022,"byte_end":8755097,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8755102,"byte_end":8755174,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8755179,"byte_end":8755244,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760552,"byte_end":8760555,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760010,"byte_end":8760085,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760090,"byte_end":8760101,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760106,"byte_end":8760109,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760114,"byte_end":8760128,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760133,"byte_end":8760136,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760141,"byte_end":8760148,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760153,"byte_end":8760184,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760189,"byte_end":8760237,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760242,"byte_end":8760245,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760250,"byte_end":8760291,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760296,"byte_end":8760331,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760336,"byte_end":8760367,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760372,"byte_end":8760403,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760408,"byte_end":8760437,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760442,"byte_end":8760462,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760467,"byte_end":8760489,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760494,"byte_end":8760501,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760506,"byte_end":8760528,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8760533,"byte_end":8760540,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761740,"byte_end":8761750,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761219,"byte_end":8761268,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761273,"byte_end":8761276,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761281,"byte_end":8761313,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761318,"byte_end":8761321,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761326,"byte_end":8761394,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761399,"byte_end":8761402,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761407,"byte_end":8761421,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761426,"byte_end":8761429,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761434,"byte_end":8761441,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761446,"byte_end":8761477,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761482,"byte_end":8761530,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761535,"byte_end":8761538,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761543,"byte_end":8761584,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761589,"byte_end":8761624,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761629,"byte_end":8761650,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761655,"byte_end":8761677,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761682,"byte_end":8761689,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761694,"byte_end":8761716,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761721,"byte_end":8761728,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762382,"byte_end":8762395,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761849,"byte_end":8761901,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761906,"byte_end":8761909,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761914,"byte_end":8761952,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761957,"byte_end":8761960,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8761965,"byte_end":8762033,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762038,"byte_end":8762041,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762046,"byte_end":8762060,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762065,"byte_end":8762068,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762073,"byte_end":8762080,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762085,"byte_end":8762116,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762121,"byte_end":8762169,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762174,"byte_end":8762177,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762182,"byte_end":8762223,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762228,"byte_end":8762263,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762268,"byte_end":8762292,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762297,"byte_end":8762319,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762324,"byte_end":8762331,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762336,"byte_end":8762358,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762363,"byte_end":8762370,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763028,"byte_end":8763041,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762495,"byte_end":8762547,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762552,"byte_end":8762555,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762560,"byte_end":8762598,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762603,"byte_end":8762606,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762611,"byte_end":8762679,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762684,"byte_end":8762687,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762692,"byte_end":8762706,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762711,"byte_end":8762714,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762719,"byte_end":8762726,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762731,"byte_end":8762762,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762767,"byte_end":8762815,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762820,"byte_end":8762823,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762828,"byte_end":8762869,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762874,"byte_end":8762909,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762914,"byte_end":8762938,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762943,"byte_end":8762965,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762970,"byte_end":8762977,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8762982,"byte_end":8763004,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763009,"byte_end":8763016,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764122,"byte_end":8764138,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763210,"byte_end":8763239,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763244,"byte_end":8763247,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763252,"byte_end":8763324,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763329,"byte_end":8763354,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763359,"byte_end":8763362,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763367,"byte_end":8763439,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763444,"byte_end":8763513,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763518,"byte_end":8763591,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763596,"byte_end":8763608,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763613,"byte_end":8763616,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763621,"byte_end":8763696,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763701,"byte_end":8763762,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763767,"byte_end":8763770,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763775,"byte_end":8763789,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763794,"byte_end":8763797,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763802,"byte_end":8763809,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763814,"byte_end":8763845,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763850,"byte_end":8763898,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763903,"byte_end":8763906,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763911,"byte_end":8763952,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763957,"byte_end":8763992,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8763997,"byte_end":8764032,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764037,"byte_end":8764059,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764064,"byte_end":8764071,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764076,"byte_end":8764098,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764103,"byte_end":8764110,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764799,"byte_end":8764818,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764235,"byte_end":8764298,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764303,"byte_end":8764306,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764311,"byte_end":8764362,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764367,"byte_end":8764370,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764375,"byte_end":8764443,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764448,"byte_end":8764451,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764456,"byte_end":8764470,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764475,"byte_end":8764478,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764483,"byte_end":8764490,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764495,"byte_end":8764526,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764531,"byte_end":8764579,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764584,"byte_end":8764587,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764592,"byte_end":8764633,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764638,"byte_end":8764673,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764678,"byte_end":8764709,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764714,"byte_end":8764736,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764741,"byte_end":8764748,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764753,"byte_end":8764775,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764780,"byte_end":8764787,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765477,"byte_end":8765496,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8764987,"byte_end":8765053,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765058,"byte_end":8765061,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765066,"byte_end":8765121,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765126,"byte_end":8765129,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765134,"byte_end":8765148,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765153,"byte_end":8765156,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765161,"byte_end":8765168,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765173,"byte_end":8765204,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765209,"byte_end":8765257,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765262,"byte_end":8765265,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765270,"byte_end":8765311,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765316,"byte_end":8765351,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765356,"byte_end":8765387,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765392,"byte_end":8765414,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765419,"byte_end":8765426,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765431,"byte_end":8765453,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765458,"byte_end":8765465,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766050,"byte_end":8766067,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765599,"byte_end":8765672,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765677,"byte_end":8765695,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765700,"byte_end":8765703,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765708,"byte_end":8765722,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765727,"byte_end":8765730,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765735,"byte_end":8765742,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765747,"byte_end":8765778,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765783,"byte_end":8765831,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765836,"byte_end":8765839,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765844,"byte_end":8765885,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765890,"byte_end":8765925,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765930,"byte_end":8765960,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765965,"byte_end":8765987,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8765992,"byte_end":8765999,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766004,"byte_end":8766026,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766031,"byte_end":8766038,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766717,"byte_end":8766725,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766168,"byte_end":8766231,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766236,"byte_end":8766239,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766244,"byte_end":8766305,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766310,"byte_end":8766313,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766318,"byte_end":8766372,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766377,"byte_end":8766380,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766385,"byte_end":8766399,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766404,"byte_end":8766407,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766412,"byte_end":8766419,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766424,"byte_end":8766455,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766460,"byte_end":8766508,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766513,"byte_end":8766516,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766521,"byte_end":8766562,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766567,"byte_end":8766602,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766607,"byte_end":8766627,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766632,"byte_end":8766654,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766659,"byte_end":8766666,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766671,"byte_end":8766693,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766698,"byte_end":8766705,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767245,"byte_end":8767254,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766823,"byte_end":8766886,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766891,"byte_end":8766894,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766899,"byte_end":8766913,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766918,"byte_end":8766921,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766926,"byte_end":8766933,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766938,"byte_end":8766986,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8766991,"byte_end":8767012,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767017,"byte_end":8767052,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767057,"byte_end":8767088,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767093,"byte_end":8767124,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767129,"byte_end":8767158,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767163,"byte_end":8767183,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767188,"byte_end":8767209,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767214,"byte_end":8767221,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767226,"byte_end":8767233,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767910,"byte_end":8767918,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767406,"byte_end":8767459,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767464,"byte_end":8767467,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767472,"byte_end":8767486,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767491,"byte_end":8767494,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767499,"byte_end":8767506,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767511,"byte_end":8767542,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767547,"byte_end":8767595,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767600,"byte_end":8767603,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767608,"byte_end":8767649,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767654,"byte_end":8767689,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767694,"byte_end":8767725,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767730,"byte_end":8767761,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767766,"byte_end":8767795,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767800,"byte_end":8767820,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767825,"byte_end":8767847,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767852,"byte_end":8767859,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767864,"byte_end":8767886,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8767891,"byte_end":8767898,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768491,"byte_end":8768500,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768082,"byte_end":8768136,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768141,"byte_end":8768144,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768149,"byte_end":8768163,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768168,"byte_end":8768171,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768176,"byte_end":8768183,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768188,"byte_end":8768220,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768225,"byte_end":8768275,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768280,"byte_end":8768324,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768329,"byte_end":8768364,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768369,"byte_end":8768400,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768405,"byte_end":8768428,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768433,"byte_end":8768440,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768445,"byte_end":8768467,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768472,"byte_end":8768479,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769109,"byte_end":8769119,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768661,"byte_end":8768710,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768715,"byte_end":8768718,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768723,"byte_end":8768737,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768742,"byte_end":8768745,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768750,"byte_end":8768757,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768762,"byte_end":8768807,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768812,"byte_end":8768862,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768867,"byte_end":8768923,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768928,"byte_end":8768941,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768946,"byte_end":8768981,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8768986,"byte_end":8769017,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769022,"byte_end":8769046,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769051,"byte_end":8769058,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769063,"byte_end":8769085,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769090,"byte_end":8769097,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8770498,"byte_end":8770508,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8770255,"byte_end":8770342,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8770343,"byte_end":8770346,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8770347,"byte_end":8770385,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8770386,"byte_end":8770424,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771608,"byte_end":8771611,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771189,"byte_end":8771249,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771254,"byte_end":8771257,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771262,"byte_end":8771272,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771277,"byte_end":8771280,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771285,"byte_end":8771357,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771362,"byte_end":8771435,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771440,"byte_end":8771507,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771512,"byte_end":8771515,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771520,"byte_end":8771596,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772742,"byte_end":8772761,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771769,"byte_end":8771829,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771834,"byte_end":8771837,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771842,"byte_end":8771905,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771910,"byte_end":8771988,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771993,"byte_end":8772060,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772065,"byte_end":8772137,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772142,"byte_end":8772212,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772217,"byte_end":8772240,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772245,"byte_end":8772248,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772253,"byte_end":8772263,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772268,"byte_end":8772271,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772276,"byte_end":8772351,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772356,"byte_end":8772429,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772434,"byte_end":8772510,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772515,"byte_end":8772588,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772593,"byte_end":8772663,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772668,"byte_end":8772671,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772676,"byte_end":8772730,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773327,"byte_end":8773337,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772889,"byte_end":8772939,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772944,"byte_end":8772947,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772952,"byte_end":8772959,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772964,"byte_end":8772983,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8772988,"byte_end":8773026,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773031,"byte_end":8773034,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773039,"byte_end":8773073,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773078,"byte_end":8773125,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773130,"byte_end":8773137,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773142,"byte_end":8773149,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773154,"byte_end":8773192,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773197,"byte_end":8773200,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773205,"byte_end":8773258,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773263,"byte_end":8773303,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773308,"byte_end":8773315,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777697,"byte_end":8777718,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777651,"byte_end":8777692,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777753,"byte_end":8777755,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777724,"byte_end":8777748,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":793},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777629,"byte_end":8777644,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777547,"byte_end":8777602,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":149},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":227}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"! Synchronization primitives","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/mod.rs","byte_start":6487,"byte_end":6517,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8414,"byte_end":8431,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7196,"byte_end":7273,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7274,"byte_end":7284,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7285,"byte_end":7288,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7289,"byte_end":7354,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7355,"byte_end":7429,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7430,"byte_end":7433,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7434,"byte_end":7517,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7518,"byte_end":7521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7522,"byte_end":7536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7537,"byte_end":7540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7541,"byte_end":7554,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7555,"byte_end":7577,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7578,"byte_end":7618,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7619,"byte_end":7622,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7623,"byte_end":7641,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7642,"byte_end":7663,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7664,"byte_end":7709,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7710,"byte_end":7751,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7752,"byte_end":7755,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7756,"byte_end":7807,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7871,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7872,"byte_end":7893,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7894,"byte_end":7943,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7944,"byte_end":7990,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8012,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8030,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8031,"byte_end":8112,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8113,"byte_end":8135,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8136,"byte_end":8153,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8154,"byte_end":8167,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8168,"byte_end":8179,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8180,"byte_end":8183,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8184,"byte_end":8217,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8218,"byte_end":8293,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8294,"byte_end":8321,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8322,"byte_end":8333,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8337,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8338,"byte_end":8388,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8389,"byte_end":8394,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8395,"byte_end":8402,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8851,"byte_end":8876,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8698,"byte_end":8772,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8773,"byte_end":8790,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8791,"byte_end":8839,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11384,"byte_end":11387,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn () -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11309,"byte_end":11372,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13440,"byte_end":13451,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn (&self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12177,"byte_end":12248,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12253,"byte_end":12286,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12291,"byte_end":12294,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12299,"byte_end":12370,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12375,"byte_end":12407,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12412,"byte_end":12415,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12420,"byte_end":12434,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12439,"byte_end":12442,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12447,"byte_end":12460,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12487,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12492,"byte_end":12532,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12537,"byte_end":12540,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12545,"byte_end":12563,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12568,"byte_end":12589,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12594,"byte_end":12639,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12644,"byte_end":12690,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12695,"byte_end":12698,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12754,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12759,"byte_end":12822,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12827,"byte_end":12848,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12853,"byte_end":12901,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12906,"byte_end":12952,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12957,"byte_end":12978,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13000,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13005,"byte_end":13086,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13091,"byte_end":13113,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13118,"byte_end":13135,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13140,"byte_end":13153,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13158,"byte_end":13169,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13174,"byte_end":13177,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13182,"byte_end":13215,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13220,"byte_end":13295,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13300,"byte_end":13327,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13332,"byte_end":13343,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13351,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13356,"byte_end":13406,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13411,"byte_end":13416,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":13421,"byte_end":13428,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":16026,"byte_end":16032,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":15837,"byte_end":15909,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":15914,"byte_end":15934,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":15939,"byte_end":15942,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":15947,"byte_end":16014,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":16160,"byte_end":16172,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":16084,"byte_end":16148,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":16323,"byte_end":16332,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn (&self) -> WaitForCancellationFuture<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":16237,"byte_end":16311,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69681,"byte_end":69694,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69550,"byte_end":69623,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69624,"byte_end":69627,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69628,"byte_end":69669,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69880,"byte_end":69883,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn (semaphore: Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69835,"byte_end":69868,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70129,"byte_end":70134,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70092,"byte_end":70117,"line_start":29,"line_end":29,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70240,"byte_end":70251,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn (&self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70186,"byte_end":70228,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70366,"byte_end":70376,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn (self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70321,"byte_end":70354,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71110,"byte_end":71122,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70437,"byte_end":70485,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70490,"byte_end":70493,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70498,"byte_end":70539,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70544,"byte_end":70547,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70552,"byte_end":70614,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70619,"byte_end":70679,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70684,"byte_end":70744,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70749,"byte_end":70752,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70757,"byte_end":70832,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70837,"byte_end":70905,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70910,"byte_end":70986,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":70991,"byte_end":71059,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71064,"byte_end":71098,"line_start":56,"line_end":56,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72480,"byte_end":72497,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":197}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72280,"byte_end":72337,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72338,"byte_end":72341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72342,"byte_end":72409,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72410,"byte_end":72468,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72675,"byte_end":72678,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"fn <F> (future: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72592,"byte_end":72663,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73259,"byte_end":73262,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"fn <F> (&mut self, future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73044,"byte_end":73096,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73101,"byte_end":73104,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73109,"byte_end":73181,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73186,"byte_end":73247,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73705,"byte_end":73712,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"fn <F> (&mut self, future: F) -> Result<(), F>","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73464,"byte_end":73516,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73521,"byte_end":73524,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73529,"byte_end":73602,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73607,"byte_end":73677,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":73682,"byte_end":73693,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75552,"byte_end":75559,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"fn (&mut self) -> Pin<&mut (dyn Future<Output = T> + Send)>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75488,"byte_end":75540,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75845,"byte_end":75849,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75790,"byte_end":75833,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":236},{"krate":0,"index":872},{"krate":0,"index":885},{"krate":0,"index":881},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":270}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"! Module defining an Either type.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":76962,"byte_end":76997,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78944,"byte_end":78948,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78957,"byte_end":78962,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":872},"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78925,"byte_end":78931,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":878}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77174,"byte_end":77280,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77281,"byte_end":77284,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77285,"byte_end":77375,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77376,"byte_end":77379,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77380,"byte_end":77415,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77416,"byte_end":77419,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77420,"byte_end":77433,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77434,"byte_end":77437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77438,"byte_end":77475,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77476,"byte_end":77479,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77480,"byte_end":77499,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77500,"byte_end":77542,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77543,"byte_end":77593,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77594,"byte_end":77645,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77646,"byte_end":77664,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77665,"byte_end":77686,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77687,"byte_end":77729,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77730,"byte_end":77763,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77764,"byte_end":77780,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77781,"byte_end":77875,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77876,"byte_end":77886,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77887,"byte_end":77890,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77891,"byte_end":77938,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77939,"byte_end":77944,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77945,"byte_end":77952,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":77953,"byte_end":77956,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78157,"byte_end":78160,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78161,"byte_end":78247,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78248,"byte_end":78258,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78259,"byte_end":78262,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78263,"byte_end":78270,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78271,"byte_end":78306,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78307,"byte_end":78349,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78350,"byte_end":78400,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78401,"byte_end":78452,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78453,"byte_end":78456,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78457,"byte_end":78475,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78476,"byte_end":78497,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78498,"byte_end":78540,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78541,"byte_end":78588,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78589,"byte_end":78605,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78606,"byte_end":78655,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78656,"byte_end":78666,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78667,"byte_end":78670,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78671,"byte_end":78704,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78705,"byte_end":78745,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78746,"byte_end":78778,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78779,"byte_end":78784,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78785,"byte_end":78792,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":78793,"byte_end":78815,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702878,"byte_end":8702888,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8703039,"byte_end":8703049,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8703376,"byte_end":8703386,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712569,"byte_end":8712578,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712778,"byte_end":8712788,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712939,"byte_end":8712948,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713271,"byte_end":8713281,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713527,"byte_end":8713535,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713632,"byte_end":8713640,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713751,"byte_end":8713759,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713859,"byte_end":8713867,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713977,"byte_end":8713987,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8715933,"byte_end":8715943,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8718779,"byte_end":8718785,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722307,"byte_end":8722313,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727628,"byte_end":8727634,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727950,"byte_end":8727956,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8728671,"byte_end":8728677,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729717,"byte_end":8729728,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8730655,"byte_end":8730665,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731554,"byte_end":8731564,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733661,"byte_end":8733671,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733984,"byte_end":8733994,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8734720,"byte_end":8734730,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8735709,"byte_end":8735720,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736076,"byte_end":8736087,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8738196,"byte_end":8738207,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8738971,"byte_end":8738982,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8739223,"byte_end":8739234,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754242,"byte_end":8754262,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8757615,"byte_end":8757635,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8758522,"byte_end":8758542,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8759883,"byte_end":8759903,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8759996,"byte_end":8760003,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769602,"byte_end":8769609,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769735,"byte_end":8769760,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769918,"byte_end":8769943,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8770078,"byte_end":8770103,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771172,"byte_end":8771182,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773724,"byte_end":8773734,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777145,"byte_end":8777155,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777478,"byte_end":8777488,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777793,"byte_end":8777808,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8778090,"byte_end":8778105,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8778222,"byte_end":8778237,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8634,"byte_end":8651,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8676,"byte_end":8693,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9427,"byte_end":9452,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9526,"byte_end":9543,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9768,"byte_end":9785,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":10191,"byte_end":10208,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11178,"byte_end":11195,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11285,"byte_end":11302,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":17168,"byte_end":17193,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":17365,"byte_end":17390,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":18825,"byte_end":18850,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":20038,"byte_end":20052,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":20386,"byte_end":20403,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":21003,"byte_end":21020,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":21878,"byte_end":21891,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":23076,"byte_end":23098,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40617,"byte_end":40625,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40875,"byte_end":40883,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40988,"byte_end":40996,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":41305,"byte_end":41315,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69815,"byte_end":69828,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71534,"byte_end":71547,"line_start":69,"line_end":69,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71761,"byte_end":71774,"line_start":77,"line_end":77,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71892,"byte_end":71905,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72565,"byte_end":72582,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75956,"byte_end":75973,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76263,"byte_end":76280,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76498,"byte_end":76515,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76611,"byte_end":76628,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76653,"byte_end":76670,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76814,"byte_end":76831,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":79568,"byte_end":79574,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":79817,"byte_end":79823,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80096,"byte_end":80102,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80430,"byte_end":80436,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80790,"byte_end":80796,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":81348,"byte_end":81354,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":758,"byte_end":763,"line_start":30,"line_end":30,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/mod.rs","byte_start":8701396,"byte_end":8701412,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":576}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":907,"byte_end":911,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/lib.rs","byte_start":922,"byte_end":928,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":228}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8702878,"byte_end":8702888,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8703039,"byte_end":8703049,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/bytes_codec.rs","byte_start":8703376,"byte_end":8703386,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":337}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712569,"byte_end":8712578,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712778,"byte_end":8712788,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8712939,"byte_end":8712948,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713271,"byte_end":8713281,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713527,"byte_end":8713535,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713632,"byte_end":8713640,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":1587}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713751,"byte_end":8713759,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713859,"byte_end":8713867,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":1587}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8713977,"byte_end":8713987,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1021},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_impl.rs","byte_start":8715933,"byte_end":8715943,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1021},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8718779,"byte_end":8718785,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8722307,"byte_end":8722313,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727628,"byte_end":8727634,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":971},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8727950,"byte_end":8727956,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":971},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8728671,"byte_end":8728677,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed.rs","byte_start":8729717,"byte_end":8729728,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8730655,"byte_end":8730665,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8731554,"byte_end":8731564,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733661,"byte_end":8733671,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":930},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8733984,"byte_end":8733994,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":930},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_read.rs","byte_start":8734720,"byte_end":8734730,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8735709,"byte_end":8735720,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8736076,"byte_end":8736087,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8738196,"byte_end":8738207,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":889},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8738971,"byte_end":8738982,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":889},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/framed_write.rs","byte_start":8739223,"byte_end":8739234,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8754242,"byte_end":8754262,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8757615,"byte_end":8757635,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":743},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8758522,"byte_end":8758542,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":743},"to":{"krate":0,"index":337}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8759883,"byte_end":8759903,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8759996,"byte_end":8760003,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769602,"byte_end":8769609,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769735,"byte_end":8769760,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8769918,"byte_end":8769943,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/length_delimited.rs","byte_start":8770078,"byte_end":8770103,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8771172,"byte_end":8771182,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8773724,"byte_end":8773734,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":759},"to":{"krate":0,"index":326}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777145,"byte_end":8777155,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":759},"to":{"krate":0,"index":337}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777478,"byte_end":8777488,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8777793,"byte_end":8777808,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8778090,"byte_end":8778105,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/codec/lines_codec.rs","byte_start":8778222,"byte_end":8778237,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":793},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8634,"byte_end":8651,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":8676,"byte_end":8693,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9427,"byte_end":9452,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9526,"byte_end":9543,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":9768,"byte_end":9785,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":10191,"byte_end":10208,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11178,"byte_end":11195,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":11285,"byte_end":11302,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":17168,"byte_end":17193,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":17365,"byte_end":17390,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":18825,"byte_end":18850,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":20038,"byte_end":20052,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":20386,"byte_end":20403,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":21003,"byte_end":21020,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":21878,"byte_end":21891,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/cancellation_token.rs","byte_start":23076,"byte_end":23098,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40617,"byte_end":40625,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40875,"byte_end":40883,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":40988,"byte_end":40996,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/intrusive_double_linked_list.rs","byte_start":41305,"byte_end":41315,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":69815,"byte_end":69828,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71534,"byte_end":71547,"line_start":69,"line_end":69,"column_start":17,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":164},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71761,"byte_end":71774,"line_start":77,"line_end":77,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/poll_semaphore.rs","byte_start":71892,"byte_end":71905,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":72565,"byte_end":72582,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":75956,"byte_end":75973,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76263,"byte_end":76280,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76498,"byte_end":76515,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76611,"byte_end":76628,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76653,"byte_end":76670,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/sync/reusable_box.rs","byte_start":76814,"byte_end":76831,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":79568,"byte_end":79574,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":79817,"byte_end":79823,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":872},"to":{"krate":16,"index":114}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80096,"byte_end":80102,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":872},"to":{"krate":16,"index":86}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80430,"byte_end":80436,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":872},"to":{"krate":16,"index":139}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":80790,"byte_end":80796,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":872},"to":{"krate":16,"index":165}},{"span":{"file_name":"/home/ayeen/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.3/src/either.rs","byte_start":81348,"byte_end":81354,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":872},"to":{"krate":15,"index":68}}]}